{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_node",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "_lastValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "callOracle",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes8",
          "name": "field",
          "type": "bytes8"
        },
        {
          "internalType": "uint256",
          "name": "parameter",
          "type": "uint256"
        }
      ],
      "name": "callOracle",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "callOracleSimple",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes8",
          "name": "field",
          "type": "bytes8"
        }
      ],
      "name": "callOracleSimple",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "counter",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lastValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_node",
          "type": "address"
        }
      ],
      "name": "set_oracle",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "data",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "data_passthrough",
          "type": "uint256"
        }
      ],
      "name": "value_callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "value_callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "4": "contracts/contracts/clientContract/clientExample4.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/clientContract/clientExample4.sol",
    "exportedSymbols": {
      "AcriaNode": [
        265
      ],
      "ClientExample4": [
        451
      ]
    },
    "id": 452,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 238,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:4"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 265,
        "linearizedBaseContracts": [
          265
        ],
        "name": "AcriaNode",
        "nameLocation": "78:9:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "70762d2f",
            "id": 253,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "create_request_with_data",
            "nameLocation": "103:24:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 251,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 240,
                  "mutability": "mutable",
                  "name": "_requestID",
                  "nameLocation": "135:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "128:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes8",
                    "typeString": "bytes8"
                  },
                  "typeName": {
                    "id": 239,
                    "name": "bytes8",
                    "nodeType": "ElementaryTypeName",
                    "src": "128:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes8",
                      "typeString": "bytes8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 242,
                  "mutability": "mutable",
                  "name": "callback",
                  "nameLocation": "155:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "147:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "147:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 244,
                  "mutability": "mutable",
                  "name": "_expire",
                  "nameLocation": "173:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "165:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 243,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "165:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 246,
                  "mutability": "mutable",
                  "name": "max_gas",
                  "nameLocation": "189:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "182:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "182:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 248,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "206:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "198:13:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "198:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 250,
                  "mutability": "mutable",
                  "name": "_data_passthrough",
                  "nameLocation": "221:17:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 253,
                  "src": "213:25:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 249,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "213:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "127:112:4"
            },
            "returnParameters": {
              "id": 252,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "256:0:4"
            },
            "scope": 265,
            "src": "94:163:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "functionSelector": "8d4b3223",
            "id": 264,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "create_request",
            "nameLocation": "271:14:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 262,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 255,
                  "mutability": "mutable",
                  "name": "_requestID",
                  "nameLocation": "293:10:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 264,
                  "src": "286:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes8",
                    "typeString": "bytes8"
                  },
                  "typeName": {
                    "id": 254,
                    "name": "bytes8",
                    "nodeType": "ElementaryTypeName",
                    "src": "286:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes8",
                      "typeString": "bytes8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 257,
                  "mutability": "mutable",
                  "name": "callback",
                  "nameLocation": "313:8:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 264,
                  "src": "305:16:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "305:7:4",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 259,
                  "mutability": "mutable",
                  "name": "_expire",
                  "nameLocation": "331:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 264,
                  "src": "323:15:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 258,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "323:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 261,
                  "mutability": "mutable",
                  "name": "max_gas",
                  "nameLocation": "347:7:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 264,
                  "src": "340:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 260,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "340:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "285:70:4"
            },
            "returnParameters": {
              "id": 263,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "372:0:4"
            },
            "scope": 265,
            "src": "262:111:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 452,
        "src": "68:307:4"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 451,
        "linearizedBaseContracts": [
          451
        ],
        "name": "ClientExample4",
        "nameLocation": "386:14:4",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 267,
            "mutability": "mutable",
            "name": "node",
            "nameLocation": "469:4:4",
            "nodeType": "VariableDeclaration",
            "scope": 451,
            "src": "453:20:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 266,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "453:15:4",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 269,
            "mutability": "mutable",
            "name": "master",
            "nameLocation": "487:6:4",
            "nodeType": "VariableDeclaration",
            "scope": 451,
            "src": "479:14:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 268,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "479:7:4",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "764df6fa",
            "id": 273,
            "mutability": "mutable",
            "name": "lastValue",
            "nameLocation": "588:9:4",
            "nodeType": "VariableDeclaration",
            "scope": 451,
            "src": "553:44:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 272,
              "keyType": {
                "id": 270,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "561:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "553:27:4",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 271,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "572:7:4",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "57db1c90",
            "id": 275,
            "mutability": "mutable",
            "name": "_lastValue",
            "nameLocation": "676:10:4",
            "nodeType": "VariableDeclaration",
            "scope": 451,
            "src": "661:25:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 274,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "661:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "61bc221a",
            "id": 277,
            "mutability": "mutable",
            "name": "counter",
            "nameLocation": "712:7:4",
            "nodeType": "VariableDeclaration",
            "scope": 451,
            "src": "697:22:4",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 276,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "697:7:4",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 291,
              "nodeType": "Block",
              "src": "761:58:4",
              "statements": [
                {
                  "expression": {
                    "id": 284,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 282,
                      "name": "node",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 267,
                      "src": "771:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 283,
                      "name": "_node",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "778:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "771:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 285,
                  "nodeType": "ExpressionStatement",
                  "src": "771:12:4"
                },
                {
                  "expression": {
                    "id": 289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 286,
                      "name": "master",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 269,
                      "src": "793:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 287,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "802:3:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "802:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "793:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 290,
                  "nodeType": "ExpressionStatement",
                  "src": "793:19:4"
                }
              ]
            },
            "id": 292,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 279,
                  "mutability": "mutable",
                  "name": "_node",
                  "nameLocation": "754:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 292,
                  "src": "738:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "738:15:4",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "737:23:4"
            },
            "returnParameters": {
              "id": 281,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "761:0:4"
            },
            "scope": 451,
            "src": "726:93:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 308,
              "nodeType": "Block",
              "src": "878:68:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 301,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 298,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "893:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 299,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "893:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 300,
                          "name": "master",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 269,
                          "src": "907:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "893:20:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 297,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "885:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 302,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "885:29:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 303,
                  "nodeType": "ExpressionStatement",
                  "src": "885:29:4"
                },
                {
                  "expression": {
                    "id": 306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 304,
                      "name": "node",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 267,
                      "src": "927:4:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 305,
                      "name": "_node",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 294,
                      "src": "934:5:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "927:12:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 307,
                  "nodeType": "ExpressionStatement",
                  "src": "927:12:4"
                }
              ]
            },
            "functionSelector": "bd4f3b83",
            "id": 309,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set_oracle",
            "nameLocation": "838:10:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 295,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 294,
                  "mutability": "mutable",
                  "name": "_node",
                  "nameLocation": "865:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 309,
                  "src": "849:21:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 293,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "849:15:4",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "848:23:4"
            },
            "returnParameters": {
              "id": 296,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "878:0:4"
            },
            "scope": 451,
            "src": "829:117:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 335,
              "nodeType": "Block",
              "src": "988:936:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5553442f474250",
                        "id": 320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1824:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_881ce35a123c3875df4e6b83b3efbdd694b3ae9c7523fe5d96ca517d56485a82",
                          "typeString": "literal_string \"USD/GBP\""
                        },
                        "value": "USD/GBP"
                      },
                      {
                        "arguments": [
                          {
                            "id": 323,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1843:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ClientExample4_$451",
                              "typeString": "contract ClientExample4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ClientExample4_$451",
                              "typeString": "contract ClientExample4"
                            }
                          ],
                          "id": 322,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1835:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 321,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1835:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1835:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130303030",
                        "id": 325,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1850:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      },
                      {
                        "hexValue": "3530303030",
                        "id": 326,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1857:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50000"
                      },
                      {
                        "expression": {
                          "id": 327,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "1864:5:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 328,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1864:15:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 329,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 277,
                        "src": "1881:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_881ce35a123c3875df4e6b83b3efbdd694b3ae9c7523fe5d96ca517d56485a82",
                          "typeString": "literal_string \"USD/GBP\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_881ce35a123c3875df4e6b83b3efbdd694b3ae9c7523fe5d96ca517d56485a82",
                            "typeString": "literal_string \"USD/GBP\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          {
                            "typeIdentifier": "t_rational_50000_by_1",
                            "typeString": "int_const 50000"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 313,
                              "name": "node",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 267,
                              "src": "1762:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 312,
                            "name": "AcriaNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 265,
                            "src": "1752:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AcriaNode_$265_$",
                              "typeString": "type(contract AcriaNode)"
                            }
                          },
                          "id": 314,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1752:15:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AcriaNode_$265",
                            "typeString": "contract AcriaNode"
                          }
                        },
                        "id": 315,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "create_request_with_data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 253,
                        "src": "1752:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_bytes8_$_t_address_$_t_uint256_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (bytes8,address,uint256,uint32,uint256,uint256) payable external"
                        }
                      },
                      "id": 319,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value",
                        "gas"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 316,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1800:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 317,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1800:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "313030303030",
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1816:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          "value": "100000"
                        }
                      ],
                      "src": "1752:71:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_bytes8_$_t_address_$_t_uint256_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$gasvalue",
                        "typeString": "function (bytes8,address,uint256,uint32,uint256,uint256) payable external"
                      }
                    },
                    "id": 330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1752:137:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 331,
                  "nodeType": "ExpressionStatement",
                  "src": "1752:137:4"
                },
                {
                  "expression": {
                    "id": 333,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1908:9:4",
                    "subExpression": {
                      "id": 332,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 277,
                      "src": "1908:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 334,
                  "nodeType": "ExpressionStatement",
                  "src": "1908:9:4"
                }
              ]
            },
            "functionSelector": "7b1b7166",
            "id": 336,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callOracle",
            "nameLocation": "961:10:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 310,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "971:2:4"
            },
            "returnParameters": {
              "id": 311,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "988:0:4"
            },
            "scope": 451,
            "src": "952:972:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 365,
              "nodeType": "Block",
              "src": "2001:172:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 351,
                        "name": "field",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 338,
                        "src": "2083:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes8",
                          "typeString": "bytes8"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 354,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "2098:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ClientExample4_$451",
                              "typeString": "contract ClientExample4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ClientExample4_$451",
                              "typeString": "contract ClientExample4"
                            }
                          ],
                          "id": 353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2090:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 352,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2090:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2090:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130303030",
                        "id": 356,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2105:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      },
                      {
                        "hexValue": "3530303030",
                        "id": 357,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2112:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50000"
                      },
                      {
                        "id": 358,
                        "name": "parameter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 340,
                        "src": "2119:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 359,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 277,
                        "src": "2130:7:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes8",
                          "typeString": "bytes8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes8",
                            "typeString": "bytes8"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          {
                            "typeIdentifier": "t_rational_50000_by_1",
                            "typeString": "int_const 50000"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 344,
                              "name": "node",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 267,
                              "src": "2021:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 343,
                            "name": "AcriaNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 265,
                            "src": "2011:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AcriaNode_$265_$",
                              "typeString": "type(contract AcriaNode)"
                            }
                          },
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2011:15:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AcriaNode_$265",
                            "typeString": "contract AcriaNode"
                          }
                        },
                        "id": 346,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "create_request_with_data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 253,
                        "src": "2011:40:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_bytes8_$_t_address_$_t_uint256_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (bytes8,address,uint256,uint32,uint256,uint256) payable external"
                        }
                      },
                      "id": 350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value",
                        "gas"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 347,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2059:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 348,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2059:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "313030303030",
                          "id": 349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2075:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          "value": "100000"
                        }
                      ],
                      "src": "2011:71:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_bytes8_$_t_address_$_t_uint256_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$gasvalue",
                        "typeString": "function (bytes8,address,uint256,uint32,uint256,uint256) payable external"
                      }
                    },
                    "id": 360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2011:127:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 361,
                  "nodeType": "ExpressionStatement",
                  "src": "2011:127:4"
                },
                {
                  "expression": {
                    "id": 363,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "2157:9:4",
                    "subExpression": {
                      "id": 362,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 277,
                      "src": "2157:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 364,
                  "nodeType": "ExpressionStatement",
                  "src": "2157:9:4"
                }
              ]
            },
            "functionSelector": "7ca89bf4",
            "id": 366,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callOracle",
            "nameLocation": "1943:10:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 338,
                  "mutability": "mutable",
                  "name": "field",
                  "nameLocation": "1961:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "1954:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes8",
                    "typeString": "bytes8"
                  },
                  "typeName": {
                    "id": 337,
                    "name": "bytes8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1954:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes8",
                      "typeString": "bytes8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 340,
                  "mutability": "mutable",
                  "name": "parameter",
                  "nameLocation": "1976:9:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 366,
                  "src": "1968:17:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 339,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1968:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1953:33:4"
            },
            "returnParameters": {
              "id": 342,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2001:0:4"
            },
            "scope": 451,
            "src": "1934:239:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 388,
              "nodeType": "Block",
              "src": "2403:182:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 379,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 376,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2485:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2485:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 378,
                          "name": "node",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 267,
                          "src": "2499:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "2485:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 375,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2477:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2477:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 381,
                  "nodeType": "ExpressionStatement",
                  "src": "2477:27:4"
                },
                {
                  "expression": {
                    "id": 386,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 382,
                        "name": "lastValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 273,
                        "src": "2542:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 384,
                      "indexExpression": {
                        "id": 383,
                        "name": "data_passthrough",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 372,
                        "src": "2552:16:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2542:27:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 385,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 368,
                      "src": "2572:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2542:36:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 387,
                  "nodeType": "ExpressionStatement",
                  "src": "2542:36:4"
                }
              ]
            },
            "functionSelector": "175fdc0c",
            "id": 389,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "value_callback",
            "nameLocation": "2326:14:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 373,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 368,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "2349:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 389,
                  "src": "2341:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 367,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2341:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 370,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2365:4:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 389,
                  "src": "2357:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2357:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 372,
                  "mutability": "mutable",
                  "name": "data_passthrough",
                  "nameLocation": "2379:16:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 389,
                  "src": "2371:24:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 371,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2371:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2340:56:4"
            },
            "returnParameters": {
              "id": 374,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2403:0:4"
            },
            "scope": 451,
            "src": "2317:268:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 409,
              "nodeType": "Block",
              "src": "2637:626:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5553442f474250",
                        "id": 400,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3217:9:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_881ce35a123c3875df4e6b83b3efbdd694b3ae9c7523fe5d96ca517d56485a82",
                          "typeString": "literal_string \"USD/GBP\""
                        },
                        "value": "USD/GBP"
                      },
                      {
                        "arguments": [
                          {
                            "id": 403,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3236:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ClientExample4_$451",
                              "typeString": "contract ClientExample4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ClientExample4_$451",
                              "typeString": "contract ClientExample4"
                            }
                          ],
                          "id": 402,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3228:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 401,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3228:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 404,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3228:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130303030",
                        "id": 405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3243:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      },
                      {
                        "hexValue": "3530303030",
                        "id": 406,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3250:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_881ce35a123c3875df4e6b83b3efbdd694b3ae9c7523fe5d96ca517d56485a82",
                          "typeString": "literal_string \"USD/GBP\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_881ce35a123c3875df4e6b83b3efbdd694b3ae9c7523fe5d96ca517d56485a82",
                            "typeString": "literal_string \"USD/GBP\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          {
                            "typeIdentifier": "t_rational_50000_by_1",
                            "typeString": "int_const 50000"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 393,
                              "name": "node",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 267,
                              "src": "3165:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 392,
                            "name": "AcriaNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 265,
                            "src": "3155:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AcriaNode_$265_$",
                              "typeString": "type(contract AcriaNode)"
                            }
                          },
                          "id": 394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3155:15:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AcriaNode_$265",
                            "typeString": "contract AcriaNode"
                          }
                        },
                        "id": 395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "create_request",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 264,
                        "src": "3155:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_bytes8_$_t_address_$_t_uint256_$_t_uint32_$returns$__$",
                          "typeString": "function (bytes8,address,uint256,uint32) payable external"
                        }
                      },
                      "id": 399,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value",
                        "gas"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 396,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3193:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 397,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "3193:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "313030303030",
                          "id": 398,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3209:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          "value": "100000"
                        }
                      ],
                      "src": "3155:61:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_bytes8_$_t_address_$_t_uint256_$_t_uint32_$returns$__$gasvalue",
                        "typeString": "function (bytes8,address,uint256,uint32) payable external"
                      }
                    },
                    "id": 407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3155:101:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 408,
                  "nodeType": "ExpressionStatement",
                  "src": "3155:101:4"
                }
              ]
            },
            "functionSelector": "39e31edc",
            "id": 410,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callOracleSimple",
            "nameLocation": "2604:16:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 390,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2620:2:4"
            },
            "returnParameters": {
              "id": 391,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2637:0:4"
            },
            "scope": 451,
            "src": "2595:668:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 432,
              "nodeType": "Block",
              "src": "3327:114:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 423,
                        "name": "field",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 412,
                        "src": "3399:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes8",
                          "typeString": "bytes8"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 426,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "3414:4:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ClientExample4_$451",
                              "typeString": "contract ClientExample4"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ClientExample4_$451",
                              "typeString": "contract ClientExample4"
                            }
                          ],
                          "id": 425,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3406:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 424,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3406:7:4",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 427,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3406:13:4",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130303030",
                        "id": 428,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3421:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      },
                      {
                        "hexValue": "3530303030",
                        "id": 429,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3428:5:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes8",
                          "typeString": "bytes8"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes8",
                            "typeString": "bytes8"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          {
                            "typeIdentifier": "t_rational_50000_by_1",
                            "typeString": "int_const 50000"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 416,
                              "name": "node",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 267,
                              "src": "3347:4:4",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 415,
                            "name": "AcriaNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 265,
                            "src": "3337:9:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AcriaNode_$265_$",
                              "typeString": "type(contract AcriaNode)"
                            }
                          },
                          "id": 417,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3337:15:4",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AcriaNode_$265",
                            "typeString": "contract AcriaNode"
                          }
                        },
                        "id": 418,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "create_request",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 264,
                        "src": "3337:30:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_bytes8_$_t_address_$_t_uint256_$_t_uint32_$returns$__$",
                          "typeString": "function (bytes8,address,uint256,uint32) payable external"
                        }
                      },
                      "id": 422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value",
                        "gas"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 419,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3375:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "3375:9:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "313030303030",
                          "id": 421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3391:6:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          "value": "100000"
                        }
                      ],
                      "src": "3337:61:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_bytes8_$_t_address_$_t_uint256_$_t_uint32_$returns$__$gasvalue",
                        "typeString": "function (bytes8,address,uint256,uint32) payable external"
                      }
                    },
                    "id": 430,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3337:97:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 431,
                  "nodeType": "ExpressionStatement",
                  "src": "3337:97:4"
                }
              ]
            },
            "functionSelector": "e108ed40",
            "id": 433,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callOracleSimple",
            "nameLocation": "3282:16:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 413,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 412,
                  "mutability": "mutable",
                  "name": "field",
                  "nameLocation": "3306:5:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 433,
                  "src": "3299:12:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes8",
                    "typeString": "bytes8"
                  },
                  "typeName": {
                    "id": 411,
                    "name": "bytes8",
                    "nodeType": "ElementaryTypeName",
                    "src": "3299:6:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes8",
                      "typeString": "bytes8"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3298:14:4"
            },
            "returnParameters": {
              "id": 414,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3327:0:4"
            },
            "scope": 451,
            "src": "3273:168:4",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 449,
              "nodeType": "Block",
              "src": "3625:165:4",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 439,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3707:3:4",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3707:10:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 441,
                          "name": "node",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 267,
                          "src": "3721:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "3707:18:4",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 438,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3699:7:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3699:27:4",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 444,
                  "nodeType": "ExpressionStatement",
                  "src": "3699:27:4"
                },
                {
                  "expression": {
                    "id": 447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 445,
                      "name": "_lastValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 275,
                      "src": "3764:10:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 446,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 435,
                      "src": "3777:6:4",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3764:19:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 448,
                  "nodeType": "ExpressionStatement",
                  "src": "3764:19:4"
                }
              ]
            },
            "functionSelector": "27c1642e",
            "id": 450,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "value_callback",
            "nameLocation": "3588:14:4",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 435,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "3611:6:4",
                  "nodeType": "VariableDeclaration",
                  "scope": 450,
                  "src": "3603:14:4",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 434,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3603:7:4",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3602:16:4"
            },
            "returnParameters": {
              "id": 437,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3625:0:4"
            },
            "scope": 451,
            "src": "3579:211:4",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 452,
        "src": "377:3415:4"
      }
    ],
    "src": "33:3760:4"
  },
  "bytecode": "608060405234801561001057600080fd5b5060405161065438038061065483398101604081905261002f9161005d565b600080546001600160a01b039092166001600160a01b0319928316179055600180549091163317905561008b565b60006020828403121561006e578081fd5b81516001600160a01b0381168114610084578182fd5b9392505050565b6105ba8061009a6000396000f3fe6080604052600436106100915760003560e01c8063764df6fa11610059578063764df6fa1461011e5780637b1b71661461014b5780637ca89bf414610153578063bd4f3b8314610166578063e108ed401461018657610091565b8063175fdc0c1461009657806327c1642e146100b857806339e31edc146100d857806357db1c90146100e057806361bc221a14610108575b600080fd5b3480156100a257600080fd5b506100b66100b1366004610532565b610199565b005b3480156100c457600080fd5b506100b66100d336600461051a565b6101c5565b6100b66101e1565b3480156100ec57600080fd5b506100f660035481565b60405190815260200160405180910390f35b34801561011457600080fd5b506100f660045481565b34801561012a57600080fd5b506100f661013936600461051a565b60026020526000908152604090205481565b6100b6610268565b6100b66101613660046104f1565b610318565b34801561017257600080fd5b506100b66101813660046104a9565b6103cb565b6100b66101943660046104d7565b610404565b6000546001600160a01b031633146101b057600080fd5b60009081526002602052604090209190915550565b6000546001600160a01b031633146101dc57600080fd5b600355565b600054604051638d4b322360e01b81526605553442f4742560cc1b6004820152306024820152612710604482015261c35060648201526001600160a01b0390911690638d4b322390620186a09034906084016000604051808303818589803b15801561024c57600080fd5b5088f1158015610260573d6000803e3d6000fd5b505050505050565b600054600480546040516370762d2f60e01b81526605553442f4742560cc1b92810192909252306024830152612710604483015261c350606483015242608483015260a48201526001600160a01b03909116906370762d2f90620186a090349060c4016000604051808303818589803b1580156102e457600080fd5b5088f11580156102f8573d6000803e3d6000fd5b505050505050600460008154809291906103119061055d565b9190505550565b600054600480546040516370762d2f60e01b81526001600160c01b0319861692810192909252306024830152612710604483015261c35060648301526084820184905260a48201526001600160a01b03909116906370762d2f90620186a090349060c4016000604051808303818589803b15801561039557600080fd5b5088f11580156103a9573d6000803e3d6000fd5b505050505050600460008154809291906103c29061055d565b91905055505050565b6001546001600160a01b031633146103e257600080fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600054604051638d4b322360e01b81526001600160c01b031983166004820152306024820152612710604482015261c35060648201526001600160a01b0390911690638d4b322390620186a09034906084016000604051808303818589803b15801561046f57600080fd5b5088f1158015610483573d6000803e3d6000fd5b50505050505050565b80356001600160c01b0319811681146104a457600080fd5b919050565b6000602082840312156104ba578081fd5b81356001600160a01b03811681146104d0578182fd5b9392505050565b6000602082840312156104e8578081fd5b6104d08261048c565b60008060408385031215610503578081fd5b61050c8361048c565b946020939093013593505050565b60006020828403121561052b578081fd5b5035919050565b600080600060608486031215610546578081fd5b505081359360208301359350604090920135919050565b600060001982141561057d57634e487b7160e01b81526011600452602481fd5b506001019056fea2646970667358221220a3415675290c958357ea75426036af5d62e3b6f6a348e8f07dcd137b0a6f5d4664736f6c63430008020033",
  "bytecodeSha1": "37ccf458e957f97eabd6e94aed809edc0723597e",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.2+commit.661d1103"
  },
  "contractName": "ClientExample4",
  "coverageMap": {
    "branches": {
      "4": {
        "ClientExample4.set_oracle": {
          "14": [
            893,
            913,
            true
          ]
        },
        "ClientExample4.value_callback": {
          "12": [
            2485,
            2503,
            true
          ],
          "13": [
            3707,
            3725,
            true
          ]
        }
      }
    },
    "statements": {
      "4": {
        "ClientExample4.callOracle": {
          "5": [
            1752,
            1889
          ],
          "6": [
            1908,
            1917
          ],
          "7": [
            2011,
            2138
          ],
          "8": [
            2157,
            2166
          ]
        },
        "ClientExample4.callOracleSimple": {
          "4": [
            3155,
            3256
          ],
          "11": [
            3337,
            3434
          ]
        },
        "ClientExample4.set_oracle": {
          "9": [
            885,
            914
          ],
          "10": [
            927,
            939
          ]
        },
        "ClientExample4.value_callback": {
          "0": [
            2477,
            2504
          ],
          "1": [
            2542,
            2578
          ],
          "2": [
            3699,
            3726
          ],
          "3": [
            3764,
            3783
          ]
        }
      }
    }
  },
  "dependencies": [
    "AcriaNode"
  ],
  "deployedBytecode": "6080604052600436106100915760003560e01c8063764df6fa11610059578063764df6fa1461011e5780637b1b71661461014b5780637ca89bf414610153578063bd4f3b8314610166578063e108ed401461018657610091565b8063175fdc0c1461009657806327c1642e146100b857806339e31edc146100d857806357db1c90146100e057806361bc221a14610108575b600080fd5b3480156100a257600080fd5b506100b66100b1366004610532565b610199565b005b3480156100c457600080fd5b506100b66100d336600461051a565b6101c5565b6100b66101e1565b3480156100ec57600080fd5b506100f660035481565b60405190815260200160405180910390f35b34801561011457600080fd5b506100f660045481565b34801561012a57600080fd5b506100f661013936600461051a565b60026020526000908152604090205481565b6100b6610268565b6100b66101613660046104f1565b610318565b34801561017257600080fd5b506100b66101813660046104a9565b6103cb565b6100b66101943660046104d7565b610404565b6000546001600160a01b031633146101b057600080fd5b60009081526002602052604090209190915550565b6000546001600160a01b031633146101dc57600080fd5b600355565b600054604051638d4b322360e01b81526605553442f4742560cc1b6004820152306024820152612710604482015261c35060648201526001600160a01b0390911690638d4b322390620186a09034906084016000604051808303818589803b15801561024c57600080fd5b5088f1158015610260573d6000803e3d6000fd5b505050505050565b600054600480546040516370762d2f60e01b81526605553442f4742560cc1b92810192909252306024830152612710604483015261c350606483015242608483015260a48201526001600160a01b03909116906370762d2f90620186a090349060c4016000604051808303818589803b1580156102e457600080fd5b5088f11580156102f8573d6000803e3d6000fd5b505050505050600460008154809291906103119061055d565b9190505550565b600054600480546040516370762d2f60e01b81526001600160c01b0319861692810192909252306024830152612710604483015261c35060648301526084820184905260a48201526001600160a01b03909116906370762d2f90620186a090349060c4016000604051808303818589803b15801561039557600080fd5b5088f11580156103a9573d6000803e3d6000fd5b505050505050600460008154809291906103c29061055d565b91905055505050565b6001546001600160a01b031633146103e257600080fd5b600080546001600160a01b0319166001600160a01b0392909216919091179055565b600054604051638d4b322360e01b81526001600160c01b031983166004820152306024820152612710604482015261c35060648201526001600160a01b0390911690638d4b322390620186a09034906084016000604051808303818589803b15801561046f57600080fd5b5088f1158015610483573d6000803e3d6000fd5b50505050505050565b80356001600160c01b0319811681146104a457600080fd5b919050565b6000602082840312156104ba578081fd5b81356001600160a01b03811681146104d0578182fd5b9392505050565b6000602082840312156104e8578081fd5b6104d08261048c565b60008060408385031215610503578081fd5b61050c8361048c565b946020939093013593505050565b60006020828403121561052b578081fd5b5035919050565b600080600060608486031215610546578081fd5b505081359360208301359350604090920135919050565b600060001982141561057d57634e487b7160e01b81526011600452602481fd5b506001019056fea2646970667358221220a3415675290c958357ea75426036af5d62e3b6f6a348e8f07dcd137b0a6f5d4664736f6c63430008020033",
  "deployedSourceMap": "377:3415:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2317:268;;;;;;;;;;-1:-1:-1;2317:268:4;;;;;:::i;:::-;;:::i;:::-;;3579:211;;;;;;;;;;-1:-1:-1;3579:211:4;;;;;:::i;:::-;;:::i;2595:668::-;;;:::i;661:25::-;;;;;;;;;;;;;;;;;;;3989::5;;;3977:2;3962:18;661:25:4;;;;;;;697:22;;;;;;;;;;;;;;;;553:44;;;;;;;;;;-1:-1:-1;553:44:4;;;;;:::i;:::-;;;;;;;;;;;;;;952:972;;;:::i;1934:239::-;;;;;;:::i;:::-;;:::i;829:117::-;;;;;;;;;;-1:-1:-1;829:117:4;;;;;:::i;:::-;;:::i;3273:168::-;;;;;;:::i;:::-;;:::i;2317:268::-;2499:4;;-1:-1:-1;;;;;2499:4:4;2485:10;:18;2477:27;;;;;;2542;;;;:9;:27;;;;;:36;;;;-1:-1:-1;2317:268:4:o;3579:211::-;3721:4;;-1:-1:-1;;;;;3721:4:4;3707:10;:18;3699:27;;;;;;3764:10;:19;3579:211::o;2595:668::-;3165:4;;3155:101;;-1:-1:-1;;;3155:101:4;;-1:-1:-1;;;3155:101:4;;;2961:28:5;3236:4:4;3005:18:5;;;2998:60;3243:5:4;3074:18:5;;;3067:34;3250:5:4;3117:18:5;;;3110:51;-1:-1:-1;;;;;3165:4:4;;;;3155:30;;3209:6;;3193:9;;2933:19:5;;3155:101:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2595:668::o;952:972::-;1762:4;;1881:7;;;1752:137;;-1:-1:-1;;;1752:137:4;;-1:-1:-1;;;1752:137:4;;;3544:28:5;;;;1843:4:4;3588:18:5;;;3581:60;1850:5:4;3657:18:5;;;3650:34;1857:5:4;3700:18:5;;;3693:51;1864:15:4;3760:19:5;;;3753:35;3804:19;;;3797:35;-1:-1:-1;;;;;1762:4:4;;;;1752:40;;1816:6;;1800:9;;3516:19:5;;1752:137:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1908:7;;:9;;;;;;;;;:::i;:::-;;;;;;952:972::o;1934:239::-;2021:4;;2130:7;;;2011:127;;-1:-1:-1;;;2011:127:4;;-1:-1:-1;;;;;;2332:41:5;;2011:127:4;;;2314:60:5;;;;2098:4:4;2390:18:5;;;2383:60;2105:5:4;2459:18:5;;;2452:34;2112:5:4;2502:18:5;;;2495:51;2562:19;;;2555:35;;;2606:19;;;2599:35;-1:-1:-1;;;;;2021:4:4;;;;2011:40;;2075:6;;2059:9;;2286:19:5;;2011:127:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2157:7;;:9;;;;;;;;;:::i;:::-;;;;;;1934:239;;:::o;829:117::-;907:6;;-1:-1:-1;;;;;907:6:4;893:10;:20;885:29;;;;;;927:4;:12;;-1:-1:-1;;;;;;927:12:4;-1:-1:-1;;;;;927:12:4;;;;;;;;;;829:117::o;3273:168::-;3347:4;;3337:97;;-1:-1:-1;;;3337:97:4;;-1:-1:-1;;;;;;1781:41:5;;3337:97:4;;;1763:60:5;3414:4:4;1839:18:5;;;1832:60;3421:5:4;1908:18:5;;;1901:34;3428:5:4;1951:18:5;;;1944:51;-1:-1:-1;;;;;3347:4:4;;;;3337:30;;3391:6;;3375:9;;1735:19:5;;3337:97:4;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3273:168;:::o;14:181:5:-;81:20;;-1:-1:-1;;;;;;130:40:5;;120:51;;110:2;;185:1;182;175:12;110:2;62:133;;;:::o;200:314::-;;320:2;308:9;299:7;295:23;291:32;288:2;;;341:6;333;326:22;288:2;372:23;;-1:-1:-1;;;;;424:31:5;;414:42;;404:2;;475:6;467;460:22;404:2;503:5;278:236;-1:-1:-1;;;278:236:5:o;519:194::-;;630:2;618:9;609:7;605:23;601:32;598:2;;;651:6;643;636:22;598:2;679:28;697:9;679:28;:::i;718:262::-;;;846:2;834:9;825:7;821:23;817:32;814:2;;;867:6;859;852:22;814:2;895:28;913:9;895:28;:::i;:::-;885:38;970:2;955:18;;;;942:32;;-1:-1:-1;;;804:176:5:o;985:190::-;;1097:2;1085:9;1076:7;1072:23;1068:32;1065:2;;;1118:6;1110;1103:22;1065:2;-1:-1:-1;1146:23:5;;1055:120;-1:-1:-1;1055:120:5:o;1180:326::-;;;;1326:2;1314:9;1305:7;1301:23;1297:32;1294:2;;;1347:6;1339;1332:22;1294:2;-1:-1:-1;;1375:23:5;;;1445:2;1430:18;;1417:32;;-1:-1:-1;1496:2:5;1481:18;;;1468:32;;1284:222;-1:-1:-1;1284:222:5:o;4025:236::-;;-1:-1:-1;;4085:17:5;;4082:2;;;-1:-1:-1;;;4125:33:5;;4181:4;4178:1;4171:15;4211:4;4132:3;4199:17;4082:2;-1:-1:-1;4253:1:5;4242:13;;4072:189::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    377,
    3792
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x91 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x764DF6FA GT PUSH2 0x59 JUMPI DUP1 PUSH4 0x764DF6FA EQ PUSH2 0x11E JUMPI DUP1 PUSH4 0x7B1B7166 EQ PUSH2 0x14B JUMPI DUP1 PUSH4 0x7CA89BF4 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0xBD4F3B83 EQ PUSH2 0x166 JUMPI DUP1 PUSH4 0xE108ED40 EQ PUSH2 0x186 JUMPI PUSH2 0x91 JUMP JUMPDEST DUP1 PUSH4 0x175FDC0C EQ PUSH2 0x96 JUMPI DUP1 PUSH4 0x27C1642E EQ PUSH2 0xB8 JUMPI DUP1 PUSH4 0x39E31EDC EQ PUSH2 0xD8 JUMPI DUP1 PUSH4 0x57DB1C90 EQ PUSH2 0xE0 JUMPI DUP1 PUSH4 0x61BC221A EQ PUSH2 0x108 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xA2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0xB1 CALLDATASIZE PUSH1 0x4 PUSH2 0x532 JUMP JUMPDEST PUSH2 0x199 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0xD3 CALLDATASIZE PUSH1 0x4 PUSH2 0x51A JUMP JUMPDEST PUSH2 0x1C5 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x1E1 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xEC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF6 PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x114 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF6 PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x12A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xF6 PUSH2 0x139 CALLDATASIZE PUSH1 0x4 PUSH2 0x51A JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x268 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x161 CALLDATASIZE PUSH1 0x4 PUSH2 0x4F1 JUMP JUMPDEST PUSH2 0x318 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x172 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB6 PUSH2 0x181 CALLDATASIZE PUSH1 0x4 PUSH2 0x4A9 JUMP JUMPDEST PUSH2 0x3CB JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x194 CALLDATASIZE PUSH1 0x4 PUSH2 0x4D7 JUMP JUMPDEST PUSH2 0x404 JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1B0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x1DC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x3 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x8D4B3223 PUSH1 0xE0 SHL DUP2 MSTORE PUSH7 0x5553442F47425 PUSH1 0xCC SHL PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x2710 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC350 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x8D4B3223 SWAP1 PUSH3 0x186A0 SWAP1 CALLVALUE SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP10 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x24C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP9 CALL ISZERO DUP1 ISZERO PUSH2 0x260 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70762D2F PUSH1 0xE0 SHL DUP2 MSTORE PUSH7 0x5553442F47425 PUSH1 0xCC SHL SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH2 0x2710 PUSH1 0x44 DUP4 ADD MSTORE PUSH2 0xC350 PUSH1 0x64 DUP4 ADD MSTORE TIMESTAMP PUSH1 0x84 DUP4 ADD MSTORE PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70762D2F SWAP1 PUSH3 0x186A0 SWAP1 CALLVALUE SWAP1 PUSH1 0xC4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP10 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x2E4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP9 CALL ISZERO DUP1 ISZERO PUSH2 0x2F8 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x311 SWAP1 PUSH2 0x55D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x4 DUP1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70762D2F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT DUP7 AND SWAP3 DUP2 ADD SWAP3 SWAP1 SWAP3 MSTORE ADDRESS PUSH1 0x24 DUP4 ADD MSTORE PUSH2 0x2710 PUSH1 0x44 DUP4 ADD MSTORE PUSH2 0xC350 PUSH1 0x64 DUP4 ADD MSTORE PUSH1 0x84 DUP3 ADD DUP5 SWAP1 MSTORE PUSH1 0xA4 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70762D2F SWAP1 PUSH3 0x186A0 SWAP1 CALLVALUE SWAP1 PUSH1 0xC4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP10 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x395 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP9 CALL ISZERO DUP1 ISZERO PUSH2 0x3A9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP PUSH1 0x4 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x3C2 SWAP1 PUSH2 0x55D JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x3E2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x40 MLOAD PUSH4 0x8D4B3223 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x2710 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC350 PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x8D4B3223 SWAP1 PUSH3 0x186A0 SWAP1 CALLVALUE SWAP1 PUSH1 0x84 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP10 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x46F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP9 CALL ISZERO DUP1 ISZERO PUSH2 0x483 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x4A4 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4BA JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x4D0 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x4E8 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x4D0 DUP3 PUSH2 0x48C JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x503 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x50C DUP4 PUSH2 0x48C JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x52B JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x546 JUMPI DUP1 DUP2 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x57D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG3 COINBASE JUMP PUSH22 0x290C958357EA75426036AF5D62E3B6F6A348E8F07DCD SGT PUSH28 0xA6F5D4664736F6C6343000802003300000000000000000000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        377,
        3792
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "5": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "8": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "LT",
      "path": "4"
    },
    "9": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x91"
    },
    "12": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "13": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "CALLDATALOAD",
      "path": "4"
    },
    "16": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "SHR",
      "path": "4"
    },
    "19": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "DUP1",
      "path": "4"
    },
    "20": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x764DF6FA"
    },
    "25": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "GT",
      "path": "4"
    },
    "26": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x59"
    },
    "29": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "30": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "DUP1",
      "path": "4"
    },
    "31": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x764DF6FA"
    },
    "36": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "EQ",
      "path": "4"
    },
    "37": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x11E"
    },
    "40": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "41": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "DUP1",
      "path": "4"
    },
    "42": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x7B1B7166"
    },
    "47": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "EQ",
      "path": "4"
    },
    "48": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x14B"
    },
    "51": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "52": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "DUP1",
      "path": "4"
    },
    "53": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x7CA89BF4"
    },
    "58": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "EQ",
      "path": "4"
    },
    "59": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x153"
    },
    "62": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "63": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "DUP1",
      "path": "4"
    },
    "64": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xBD4F3B83"
    },
    "69": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "EQ",
      "path": "4"
    },
    "70": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x166"
    },
    "73": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "74": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "DUP1",
      "path": "4"
    },
    "75": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0xE108ED40"
    },
    "80": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "EQ",
      "path": "4"
    },
    "81": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x186"
    },
    "84": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "85": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x91"
    },
    "88": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "JUMP",
      "path": "4"
    },
    "89": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "90": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "DUP1",
      "path": "4"
    },
    "91": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x175FDC0C"
    },
    "96": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "EQ",
      "path": "4"
    },
    "97": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x96"
    },
    "100": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "101": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "DUP1",
      "path": "4"
    },
    "102": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x27C1642E"
    },
    "107": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "EQ",
      "path": "4"
    },
    "108": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB8"
    },
    "111": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "112": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "DUP1",
      "path": "4"
    },
    "113": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x39E31EDC"
    },
    "118": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "EQ",
      "path": "4"
    },
    "119": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD8"
    },
    "122": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "123": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "DUP1",
      "path": "4"
    },
    "124": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x57DB1C90"
    },
    "129": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "EQ",
      "path": "4"
    },
    "130": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xE0"
    },
    "133": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "134": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "DUP1",
      "path": "4"
    },
    "135": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x61BC221A"
    },
    "140": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "EQ",
      "path": "4"
    },
    "141": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x108"
    },
    "144": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "145": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "146": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "148": {
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "DUP1",
      "path": "4"
    },
    "149": {
      "first_revert": true,
      "fn": null,
      "offset": [
        377,
        3792
      ],
      "op": "REVERT",
      "path": "4"
    },
    "150": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2317,
        2585
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "151": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2317,
        2585
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "152": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2317,
        2585
      ],
      "op": "DUP1",
      "path": "4"
    },
    "153": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2317,
        2585
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "154": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2317,
        2585
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xA2"
    },
    "157": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2317,
        2585
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "158": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2317,
        2585
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "160": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2317,
        2585
      ],
      "op": "DUP1",
      "path": "4"
    },
    "161": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2317,
        2585
      ],
      "op": "REVERT",
      "path": "4"
    },
    "162": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2317,
        2585
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "163": {
      "op": "POP"
    },
    "164": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2317,
        2585
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB6"
    },
    "167": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2317,
        2585
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB1"
    },
    "170": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2317,
        2585
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "171": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2317,
        2585
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "173": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2317,
        2585
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x532"
    },
    "176": {
      "fn": "ClientExample4.value_callback",
      "jump": "i",
      "offset": [
        2317,
        2585
      ],
      "op": "JUMP",
      "path": "4"
    },
    "177": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2317,
        2585
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "178": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2317,
        2585
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x199"
    },
    "181": {
      "fn": "ClientExample4.value_callback",
      "jump": "i",
      "offset": [
        2317,
        2585
      ],
      "op": "JUMP",
      "path": "4"
    },
    "182": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2317,
        2585
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "183": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2317,
        2585
      ],
      "op": "STOP",
      "path": "4"
    },
    "184": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3579,
        3790
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "185": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3579,
        3790
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "186": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3579,
        3790
      ],
      "op": "DUP1",
      "path": "4"
    },
    "187": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3579,
        3790
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "188": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3579,
        3790
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC4"
    },
    "191": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3579,
        3790
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "192": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3579,
        3790
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "194": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3579,
        3790
      ],
      "op": "DUP1",
      "path": "4"
    },
    "195": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3579,
        3790
      ],
      "op": "REVERT",
      "path": "4"
    },
    "196": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3579,
        3790
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "197": {
      "op": "POP"
    },
    "198": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3579,
        3790
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB6"
    },
    "201": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3579,
        3790
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xD3"
    },
    "204": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3579,
        3790
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "205": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3579,
        3790
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "207": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3579,
        3790
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x51A"
    },
    "210": {
      "fn": "ClientExample4.value_callback",
      "jump": "i",
      "offset": [
        3579,
        3790
      ],
      "op": "JUMP",
      "path": "4"
    },
    "211": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3579,
        3790
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "212": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3579,
        3790
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1C5"
    },
    "215": {
      "fn": "ClientExample4.value_callback",
      "jump": "i",
      "offset": [
        3579,
        3790
      ],
      "op": "JUMP",
      "path": "4"
    },
    "216": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        2595,
        3263
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "217": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        2595,
        3263
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB6"
    },
    "220": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        2595,
        3263
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1E1"
    },
    "223": {
      "fn": "ClientExample4.callOracleSimple",
      "jump": "i",
      "offset": [
        2595,
        3263
      ],
      "op": "JUMP",
      "path": "4"
    },
    "224": {
      "offset": [
        661,
        686
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "225": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        661,
        686
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "226": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        661,
        686
      ],
      "op": "DUP1",
      "path": "4"
    },
    "227": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        661,
        686
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "228": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        661,
        686
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xEC"
    },
    "231": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        661,
        686
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "232": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        661,
        686
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "234": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        661,
        686
      ],
      "op": "DUP1",
      "path": "4"
    },
    "235": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        661,
        686
      ],
      "op": "REVERT",
      "path": "4"
    },
    "236": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        661,
        686
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "237": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        661,
        686
      ],
      "op": "POP",
      "path": "4"
    },
    "238": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        661,
        686
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF6"
    },
    "241": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        661,
        686
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x3"
    },
    "243": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        661,
        686
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "244": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        661,
        686
      ],
      "op": "DUP2",
      "path": "4"
    },
    "245": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        661,
        686
      ],
      "op": "JUMP",
      "path": "4"
    },
    "246": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        661,
        686
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "247": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        661,
        686
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "249": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        661,
        686
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "250": {
      "op": "SWAP1"
    },
    "251": {
      "op": "DUP2"
    },
    "252": {
      "op": "MSTORE"
    },
    "253": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "255": {
      "op": "ADD"
    },
    "256": {
      "offset": [
        661,
        686
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "258": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        661,
        686
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "259": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        661,
        686
      ],
      "op": "DUP1",
      "path": "4"
    },
    "260": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        661,
        686
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "261": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        661,
        686
      ],
      "op": "SUB",
      "path": "4"
    },
    "262": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        661,
        686
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "263": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        661,
        686
      ],
      "op": "RETURN",
      "path": "4"
    },
    "264": {
      "offset": [
        697,
        719
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "265": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        697,
        719
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "266": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        697,
        719
      ],
      "op": "DUP1",
      "path": "4"
    },
    "267": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        697,
        719
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "268": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        697,
        719
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x114"
    },
    "271": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        697,
        719
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "272": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        697,
        719
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "274": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        697,
        719
      ],
      "op": "DUP1",
      "path": "4"
    },
    "275": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        697,
        719
      ],
      "op": "REVERT",
      "path": "4"
    },
    "276": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        697,
        719
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "277": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        697,
        719
      ],
      "op": "POP",
      "path": "4"
    },
    "278": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        697,
        719
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF6"
    },
    "281": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        697,
        719
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "283": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        697,
        719
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "284": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        697,
        719
      ],
      "op": "DUP2",
      "path": "4"
    },
    "285": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        697,
        719
      ],
      "op": "JUMP",
      "path": "4"
    },
    "286": {
      "offset": [
        553,
        597
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "287": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        553,
        597
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "288": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        553,
        597
      ],
      "op": "DUP1",
      "path": "4"
    },
    "289": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        553,
        597
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "290": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        553,
        597
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x12A"
    },
    "293": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        553,
        597
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "294": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        553,
        597
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "296": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        553,
        597
      ],
      "op": "DUP1",
      "path": "4"
    },
    "297": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        553,
        597
      ],
      "op": "REVERT",
      "path": "4"
    },
    "298": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        553,
        597
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "299": {
      "op": "POP"
    },
    "300": {
      "offset": [
        553,
        597
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xF6"
    },
    "303": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        553,
        597
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x139"
    },
    "306": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        553,
        597
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "307": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        553,
        597
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "309": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        553,
        597
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x51A"
    },
    "312": {
      "fn": "ClientExample4.callOracleSimple",
      "jump": "i",
      "offset": [
        553,
        597
      ],
      "op": "JUMP",
      "path": "4"
    },
    "313": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        553,
        597
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "314": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        553,
        597
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "316": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        553,
        597
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "318": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        553,
        597
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "319": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        553,
        597
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "321": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        553,
        597
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "322": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        553,
        597
      ],
      "op": "DUP2",
      "path": "4"
    },
    "323": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        553,
        597
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "324": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        553,
        597
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "326": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        553,
        597
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "327": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        553,
        597
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "328": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        553,
        597
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "329": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        553,
        597
      ],
      "op": "DUP2",
      "path": "4"
    },
    "330": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        553,
        597
      ],
      "op": "JUMP",
      "path": "4"
    },
    "331": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        952,
        1924
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "332": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        952,
        1924
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB6"
    },
    "335": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        952,
        1924
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x268"
    },
    "338": {
      "fn": "ClientExample4.callOracle",
      "jump": "i",
      "offset": [
        952,
        1924
      ],
      "op": "JUMP",
      "path": "4"
    },
    "339": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1934,
        2173
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "340": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1934,
        2173
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB6"
    },
    "343": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1934,
        2173
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x161"
    },
    "346": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1934,
        2173
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "347": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1934,
        2173
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "349": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1934,
        2173
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4F1"
    },
    "352": {
      "fn": "ClientExample4.callOracle",
      "jump": "i",
      "offset": [
        1934,
        2173
      ],
      "op": "JUMP",
      "path": "4"
    },
    "353": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1934,
        2173
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "354": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1934,
        2173
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x318"
    },
    "357": {
      "fn": "ClientExample4.callOracle",
      "jump": "i",
      "offset": [
        1934,
        2173
      ],
      "op": "JUMP",
      "path": "4"
    },
    "358": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        829,
        946
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "359": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        829,
        946
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "360": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        829,
        946
      ],
      "op": "DUP1",
      "path": "4"
    },
    "361": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        829,
        946
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "362": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        829,
        946
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x172"
    },
    "365": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        829,
        946
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "366": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        829,
        946
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "368": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        829,
        946
      ],
      "op": "DUP1",
      "path": "4"
    },
    "369": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        829,
        946
      ],
      "op": "REVERT",
      "path": "4"
    },
    "370": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        829,
        946
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "371": {
      "op": "POP"
    },
    "372": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        829,
        946
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB6"
    },
    "375": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        829,
        946
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x181"
    },
    "378": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        829,
        946
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "379": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        829,
        946
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "381": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        829,
        946
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4A9"
    },
    "384": {
      "fn": "ClientExample4.set_oracle",
      "jump": "i",
      "offset": [
        829,
        946
      ],
      "op": "JUMP",
      "path": "4"
    },
    "385": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        829,
        946
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "386": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        829,
        946
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3CB"
    },
    "389": {
      "fn": "ClientExample4.set_oracle",
      "jump": "i",
      "offset": [
        829,
        946
      ],
      "op": "JUMP",
      "path": "4"
    },
    "390": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3273,
        3441
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "391": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3273,
        3441
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xB6"
    },
    "394": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3273,
        3441
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x194"
    },
    "397": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3273,
        3441
      ],
      "op": "CALLDATASIZE",
      "path": "4"
    },
    "398": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3273,
        3441
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "400": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3273,
        3441
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x4D7"
    },
    "403": {
      "fn": "ClientExample4.callOracleSimple",
      "jump": "i",
      "offset": [
        3273,
        3441
      ],
      "op": "JUMP",
      "path": "4"
    },
    "404": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3273,
        3441
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "405": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3273,
        3441
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x404"
    },
    "408": {
      "fn": "ClientExample4.callOracleSimple",
      "jump": "i",
      "offset": [
        3273,
        3441
      ],
      "op": "JUMP",
      "path": "4"
    },
    "409": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2317,
        2585
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "410": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2499,
        2503
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 0,
      "value": "0x0"
    },
    "412": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2499,
        2503
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "413": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "415": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "417": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "419": {
      "op": "SHL"
    },
    "420": {
      "op": "SUB"
    },
    "421": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2499,
        2503
      ],
      "op": "AND",
      "path": "4"
    },
    "422": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2485,
        2495
      ],
      "op": "CALLER",
      "path": "4"
    },
    "423": {
      "branch": 12,
      "fn": "ClientExample4.value_callback",
      "offset": [
        2485,
        2503
      ],
      "op": "EQ",
      "path": "4"
    },
    "424": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2477,
        2504
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1B0"
    },
    "427": {
      "branch": 12,
      "fn": "ClientExample4.value_callback",
      "offset": [
        2477,
        2504
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "428": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2477,
        2504
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "430": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2477,
        2504
      ],
      "op": "DUP1",
      "path": "4"
    },
    "431": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2477,
        2504
      ],
      "op": "REVERT",
      "path": "4"
    },
    "432": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2477,
        2504
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "433": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2542,
        2569
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 1,
      "value": "0x0"
    },
    "435": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2542,
        2569
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "436": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2542,
        2569
      ],
      "op": "DUP2",
      "path": "4"
    },
    "437": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2542,
        2569
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "438": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2542,
        2551
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x2"
    },
    "440": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2542,
        2569
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x20"
    },
    "442": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2542,
        2569
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "443": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2542,
        2569
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "445": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2542,
        2569
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "446": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2542,
        2569
      ],
      "op": "KECCAK256",
      "path": "4"
    },
    "447": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2542,
        2578
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "448": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2542,
        2578
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "449": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2542,
        2578
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "450": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        2542,
        2578
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "451": {
      "op": "POP"
    },
    "452": {
      "fn": "ClientExample4.value_callback",
      "jump": "o",
      "offset": [
        2317,
        2585
      ],
      "op": "JUMP",
      "path": "4"
    },
    "453": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3579,
        3790
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "454": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3721,
        3725
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 2,
      "value": "0x0"
    },
    "456": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3721,
        3725
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "457": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "459": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "461": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "463": {
      "op": "SHL"
    },
    "464": {
      "op": "SUB"
    },
    "465": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3721,
        3725
      ],
      "op": "AND",
      "path": "4"
    },
    "466": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3707,
        3717
      ],
      "op": "CALLER",
      "path": "4"
    },
    "467": {
      "branch": 13,
      "fn": "ClientExample4.value_callback",
      "offset": [
        3707,
        3725
      ],
      "op": "EQ",
      "path": "4"
    },
    "468": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3699,
        3726
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x1DC"
    },
    "471": {
      "branch": 13,
      "fn": "ClientExample4.value_callback",
      "offset": [
        3699,
        3726
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "472": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3699,
        3726
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "474": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3699,
        3726
      ],
      "op": "DUP1",
      "path": "4"
    },
    "475": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3699,
        3726
      ],
      "op": "REVERT",
      "path": "4"
    },
    "476": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3699,
        3726
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "477": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3764,
        3774
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 3,
      "value": "0x3"
    },
    "479": {
      "fn": "ClientExample4.value_callback",
      "offset": [
        3764,
        3783
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "480": {
      "fn": "ClientExample4.value_callback",
      "jump": "o",
      "offset": [
        3579,
        3790
      ],
      "op": "JUMP",
      "path": "4"
    },
    "481": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        2595,
        3263
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "482": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3165,
        3169
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 4,
      "value": "0x0"
    },
    "484": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3165,
        3169
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "485": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "487": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "488": {
      "op": "PUSH4",
      "value": "0x8D4B3223"
    },
    "493": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "495": {
      "op": "SHL"
    },
    "496": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "DUP2",
      "path": "4"
    },
    "497": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "498": {
      "op": "PUSH7",
      "value": "0x5553442F47425"
    },
    "506": {
      "op": "PUSH1",
      "value": "0xCC"
    },
    "508": {
      "op": "SHL"
    },
    "509": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "511": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "DUP3",
      "path": "4"
    },
    "512": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "ADD",
      "path": "4"
    },
    "513": {
      "op": "MSTORE"
    },
    "514": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3236,
        3240
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "515": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "517": {
      "op": "DUP3"
    },
    "518": {
      "op": "ADD"
    },
    "519": {
      "op": "MSTORE"
    },
    "520": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3243,
        3248
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2710"
    },
    "523": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "525": {
      "op": "DUP3"
    },
    "526": {
      "op": "ADD"
    },
    "527": {
      "op": "MSTORE"
    },
    "528": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3250,
        3255
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC350"
    },
    "531": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "533": {
      "op": "DUP3"
    },
    "534": {
      "op": "ADD"
    },
    "535": {
      "op": "MSTORE"
    },
    "536": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "538": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "540": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "542": {
      "op": "SHL"
    },
    "543": {
      "op": "SUB"
    },
    "544": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3165,
        3169
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "545": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3165,
        3169
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "546": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3165,
        3169
      ],
      "op": "AND",
      "path": "4"
    },
    "547": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3165,
        3169
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "548": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3185
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8D4B3223"
    },
    "553": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3185
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "554": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3209,
        3215
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x186A0"
    },
    "558": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3209,
        3215
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "559": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3193,
        3202
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "560": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3193,
        3202
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "561": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "563": {
      "op": "ADD"
    },
    "564": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "566": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "568": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "569": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "DUP1",
      "path": "4"
    },
    "570": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "DUP4",
      "path": "4"
    },
    "571": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "SUB",
      "path": "4"
    },
    "572": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "DUP2",
      "path": "4"
    },
    "573": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "DUP6",
      "path": "4"
    },
    "574": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "DUP10",
      "path": "4"
    },
    "575": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "DUP1",
      "path": "4"
    },
    "576": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "577": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "578": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "DUP1",
      "path": "4"
    },
    "579": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "580": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x24C"
    },
    "583": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "584": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "586": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "DUP1",
      "path": "4"
    },
    "587": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "REVERT",
      "path": "4"
    },
    "588": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "589": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "POP",
      "path": "4"
    },
    "590": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "DUP9",
      "path": "4"
    },
    "591": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "CALL",
      "path": "4"
    },
    "592": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "593": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "DUP1",
      "path": "4"
    },
    "594": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "595": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x260"
    },
    "598": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "599": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "600": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "602": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "DUP1",
      "path": "4"
    },
    "603": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "604": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "605": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "607": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "REVERT",
      "path": "4"
    },
    "608": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "609": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "POP",
      "path": "4"
    },
    "610": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "POP",
      "path": "4"
    },
    "611": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "POP",
      "path": "4"
    },
    "612": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "POP",
      "path": "4"
    },
    "613": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "POP",
      "path": "4"
    },
    "614": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3155,
        3256
      ],
      "op": "POP",
      "path": "4"
    },
    "615": {
      "fn": "ClientExample4.callOracleSimple",
      "jump": "o",
      "offset": [
        2595,
        3263
      ],
      "op": "JUMP",
      "path": "4"
    },
    "616": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        952,
        1924
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "617": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1762,
        1766
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 5,
      "value": "0x0"
    },
    "619": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1762,
        1766
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "620": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1881,
        1888
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "622": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1881,
        1888
      ],
      "op": "DUP1",
      "path": "4"
    },
    "623": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1881,
        1888
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "624": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "626": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "627": {
      "op": "PUSH4",
      "value": "0x70762D2F"
    },
    "632": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "634": {
      "op": "SHL"
    },
    "635": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "DUP2",
      "path": "4"
    },
    "636": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "637": {
      "op": "PUSH7",
      "value": "0x5553442F47425"
    },
    "645": {
      "op": "PUSH1",
      "value": "0xCC"
    },
    "647": {
      "op": "SHL"
    },
    "648": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "649": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "DUP2",
      "path": "4"
    },
    "650": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "ADD",
      "path": "4"
    },
    "651": {
      "op": "SWAP3"
    },
    "652": {
      "op": "SWAP1"
    },
    "653": {
      "op": "SWAP3"
    },
    "654": {
      "op": "MSTORE"
    },
    "655": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1843,
        1847
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "656": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "658": {
      "op": "DUP4"
    },
    "659": {
      "op": "ADD"
    },
    "660": {
      "op": "MSTORE"
    },
    "661": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1850,
        1855
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2710"
    },
    "664": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "666": {
      "op": "DUP4"
    },
    "667": {
      "op": "ADD"
    },
    "668": {
      "op": "MSTORE"
    },
    "669": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1857,
        1862
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC350"
    },
    "672": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "674": {
      "op": "DUP4"
    },
    "675": {
      "op": "ADD"
    },
    "676": {
      "op": "MSTORE"
    },
    "677": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1864,
        1879
      ],
      "op": "TIMESTAMP",
      "path": "4"
    },
    "678": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "680": {
      "op": "DUP4"
    },
    "681": {
      "op": "ADD"
    },
    "682": {
      "op": "MSTORE"
    },
    "683": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "685": {
      "op": "DUP3"
    },
    "686": {
      "op": "ADD"
    },
    "687": {
      "op": "MSTORE"
    },
    "688": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "690": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "692": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "694": {
      "op": "SHL"
    },
    "695": {
      "op": "SUB"
    },
    "696": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1762,
        1766
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "697": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1762,
        1766
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "698": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1762,
        1766
      ],
      "op": "AND",
      "path": "4"
    },
    "699": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1762,
        1766
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "700": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1792
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x70762D2F"
    },
    "705": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1792
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "706": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1816,
        1822
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x186A0"
    },
    "710": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1816,
        1822
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "711": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1800,
        1809
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "712": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1800,
        1809
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "713": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "715": {
      "op": "ADD"
    },
    "716": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "718": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "720": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "721": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "DUP1",
      "path": "4"
    },
    "722": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "DUP4",
      "path": "4"
    },
    "723": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "SUB",
      "path": "4"
    },
    "724": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "DUP2",
      "path": "4"
    },
    "725": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "DUP6",
      "path": "4"
    },
    "726": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "DUP10",
      "path": "4"
    },
    "727": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "DUP1",
      "path": "4"
    },
    "728": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "729": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "730": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "DUP1",
      "path": "4"
    },
    "731": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "732": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2E4"
    },
    "735": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "736": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "738": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "DUP1",
      "path": "4"
    },
    "739": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "REVERT",
      "path": "4"
    },
    "740": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "741": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "POP",
      "path": "4"
    },
    "742": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "DUP9",
      "path": "4"
    },
    "743": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "CALL",
      "path": "4"
    },
    "744": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "745": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "DUP1",
      "path": "4"
    },
    "746": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "747": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2F8"
    },
    "750": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "751": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "752": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "754": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "DUP1",
      "path": "4"
    },
    "755": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "756": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "757": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "759": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "REVERT",
      "path": "4"
    },
    "760": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "761": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "POP",
      "path": "4"
    },
    "762": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "POP",
      "path": "4"
    },
    "763": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "POP",
      "path": "4"
    },
    "764": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "POP",
      "path": "4"
    },
    "765": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "POP",
      "path": "4"
    },
    "766": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1752,
        1889
      ],
      "op": "POP",
      "path": "4"
    },
    "767": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1908,
        1915
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 6,
      "value": "0x4"
    },
    "769": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1908,
        1915
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "771": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1908,
        1917
      ],
      "op": "DUP2",
      "path": "4"
    },
    "772": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1908,
        1917
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "773": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1908,
        1917
      ],
      "op": "DUP1",
      "path": "4"
    },
    "774": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1908,
        1917
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "775": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1908,
        1917
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "776": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1908,
        1917
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "777": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1908,
        1917
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x311"
    },
    "780": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1908,
        1917
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "781": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1908,
        1917
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x55D"
    },
    "784": {
      "fn": "ClientExample4.callOracle",
      "jump": "i",
      "offset": [
        1908,
        1917
      ],
      "op": "JUMP",
      "path": "4"
    },
    "785": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1908,
        1917
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "786": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1908,
        1917
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "787": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1908,
        1917
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "788": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1908,
        1917
      ],
      "op": "POP",
      "path": "4"
    },
    "789": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1908,
        1917
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "790": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1908,
        1917
      ],
      "op": "POP",
      "path": "4"
    },
    "791": {
      "fn": "ClientExample4.callOracle",
      "jump": "o",
      "offset": [
        952,
        1924
      ],
      "op": "JUMP",
      "path": "4"
    },
    "792": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1934,
        2173
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "793": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2021,
        2025
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 7,
      "value": "0x0"
    },
    "795": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2021,
        2025
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "796": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2130,
        2137
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "798": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2130,
        2137
      ],
      "op": "DUP1",
      "path": "4"
    },
    "799": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2130,
        2137
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "800": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "802": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "803": {
      "op": "PUSH4",
      "value": "0x70762D2F"
    },
    "808": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "810": {
      "op": "SHL"
    },
    "811": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "DUP2",
      "path": "4"
    },
    "812": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "813": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "815": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "817": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "819": {
      "op": "SHL"
    },
    "820": {
      "op": "SUB"
    },
    "821": {
      "op": "NOT"
    },
    "822": {
      "op": "DUP7"
    },
    "823": {
      "op": "AND"
    },
    "824": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "825": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "DUP2",
      "path": "4"
    },
    "826": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "ADD",
      "path": "4"
    },
    "827": {
      "op": "SWAP3"
    },
    "828": {
      "op": "SWAP1"
    },
    "829": {
      "op": "SWAP3"
    },
    "830": {
      "op": "MSTORE"
    },
    "831": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2098,
        2102
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "832": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "834": {
      "op": "DUP4"
    },
    "835": {
      "op": "ADD"
    },
    "836": {
      "op": "MSTORE"
    },
    "837": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2105,
        2110
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2710"
    },
    "840": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "842": {
      "op": "DUP4"
    },
    "843": {
      "op": "ADD"
    },
    "844": {
      "op": "MSTORE"
    },
    "845": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2112,
        2117
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC350"
    },
    "848": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "850": {
      "op": "DUP4"
    },
    "851": {
      "op": "ADD"
    },
    "852": {
      "op": "MSTORE"
    },
    "853": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "855": {
      "op": "DUP3"
    },
    "856": {
      "op": "ADD"
    },
    "857": {
      "op": "DUP5"
    },
    "858": {
      "op": "SWAP1"
    },
    "859": {
      "op": "MSTORE"
    },
    "860": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "862": {
      "op": "DUP3"
    },
    "863": {
      "op": "ADD"
    },
    "864": {
      "op": "MSTORE"
    },
    "865": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "867": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "869": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "871": {
      "op": "SHL"
    },
    "872": {
      "op": "SUB"
    },
    "873": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2021,
        2025
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "874": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2021,
        2025
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "875": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2021,
        2025
      ],
      "op": "AND",
      "path": "4"
    },
    "876": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2021,
        2025
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "877": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2051
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x70762D2F"
    },
    "882": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2051
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "883": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2075,
        2081
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x186A0"
    },
    "887": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2075,
        2081
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "888": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2059,
        2068
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "889": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2059,
        2068
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "890": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "892": {
      "op": "ADD"
    },
    "893": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "895": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "897": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "898": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "DUP1",
      "path": "4"
    },
    "899": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "DUP4",
      "path": "4"
    },
    "900": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "SUB",
      "path": "4"
    },
    "901": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "DUP2",
      "path": "4"
    },
    "902": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "DUP6",
      "path": "4"
    },
    "903": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "DUP10",
      "path": "4"
    },
    "904": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "DUP1",
      "path": "4"
    },
    "905": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "906": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "907": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "DUP1",
      "path": "4"
    },
    "908": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "909": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x395"
    },
    "912": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "913": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "915": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "DUP1",
      "path": "4"
    },
    "916": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "REVERT",
      "path": "4"
    },
    "917": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "918": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "POP",
      "path": "4"
    },
    "919": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "DUP9",
      "path": "4"
    },
    "920": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "CALL",
      "path": "4"
    },
    "921": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "922": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "DUP1",
      "path": "4"
    },
    "923": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "924": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3A9"
    },
    "927": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "928": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "929": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "931": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "DUP1",
      "path": "4"
    },
    "932": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "933": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "934": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "936": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "REVERT",
      "path": "4"
    },
    "937": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "938": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "POP",
      "path": "4"
    },
    "939": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "POP",
      "path": "4"
    },
    "940": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "POP",
      "path": "4"
    },
    "941": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "POP",
      "path": "4"
    },
    "942": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "POP",
      "path": "4"
    },
    "943": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2011,
        2138
      ],
      "op": "POP",
      "path": "4"
    },
    "944": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2157,
        2164
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 8,
      "value": "0x4"
    },
    "946": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2157,
        2164
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "948": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2157,
        2166
      ],
      "op": "DUP2",
      "path": "4"
    },
    "949": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2157,
        2166
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "950": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2157,
        2166
      ],
      "op": "DUP1",
      "path": "4"
    },
    "951": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2157,
        2166
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "952": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2157,
        2166
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "953": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2157,
        2166
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "954": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2157,
        2166
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3C2"
    },
    "957": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2157,
        2166
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "958": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2157,
        2166
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x55D"
    },
    "961": {
      "fn": "ClientExample4.callOracle",
      "jump": "i",
      "offset": [
        2157,
        2166
      ],
      "op": "JUMP",
      "path": "4"
    },
    "962": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2157,
        2166
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "963": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2157,
        2166
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "964": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2157,
        2166
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "965": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2157,
        2166
      ],
      "op": "POP",
      "path": "4"
    },
    "966": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2157,
        2166
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "967": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        2157,
        2166
      ],
      "op": "POP",
      "path": "4"
    },
    "968": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1934,
        2173
      ],
      "op": "POP",
      "path": "4"
    },
    "969": {
      "fn": "ClientExample4.callOracle",
      "offset": [
        1934,
        2173
      ],
      "op": "POP",
      "path": "4"
    },
    "970": {
      "fn": "ClientExample4.callOracle",
      "jump": "o",
      "offset": [
        1934,
        2173
      ],
      "op": "JUMP",
      "path": "4"
    },
    "971": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        829,
        946
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "972": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        907,
        913
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 9,
      "value": "0x1"
    },
    "974": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        907,
        913
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "975": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "977": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "979": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "981": {
      "op": "SHL"
    },
    "982": {
      "op": "SUB"
    },
    "983": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        907,
        913
      ],
      "op": "AND",
      "path": "4"
    },
    "984": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        893,
        903
      ],
      "op": "CALLER",
      "path": "4"
    },
    "985": {
      "branch": 14,
      "fn": "ClientExample4.set_oracle",
      "offset": [
        893,
        913
      ],
      "op": "EQ",
      "path": "4"
    },
    "986": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        885,
        914
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x3E2"
    },
    "989": {
      "branch": 14,
      "fn": "ClientExample4.set_oracle",
      "offset": [
        885,
        914
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "990": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        885,
        914
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "992": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        885,
        914
      ],
      "op": "DUP1",
      "path": "4"
    },
    "993": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        885,
        914
      ],
      "op": "REVERT",
      "path": "4"
    },
    "994": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        885,
        914
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "995": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        927,
        931
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 10,
      "value": "0x0"
    },
    "997": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        927,
        939
      ],
      "op": "DUP1",
      "path": "4"
    },
    "998": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        927,
        939
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "999": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1001": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1003": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1005": {
      "op": "SHL"
    },
    "1006": {
      "op": "SUB"
    },
    "1007": {
      "op": "NOT"
    },
    "1008": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        927,
        939
      ],
      "op": "AND",
      "path": "4"
    },
    "1009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1013": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1015": {
      "op": "SHL"
    },
    "1016": {
      "op": "SUB"
    },
    "1017": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        927,
        939
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1018": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        927,
        939
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1019": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        927,
        939
      ],
      "op": "SWAP3",
      "path": "4"
    },
    "1020": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        927,
        939
      ],
      "op": "AND",
      "path": "4"
    },
    "1021": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        927,
        939
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1022": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        927,
        939
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1023": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        927,
        939
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1024": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        927,
        939
      ],
      "op": "OR",
      "path": "4"
    },
    "1025": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        927,
        939
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1026": {
      "fn": "ClientExample4.set_oracle",
      "offset": [
        927,
        939
      ],
      "op": "SSTORE",
      "path": "4"
    },
    "1027": {
      "fn": "ClientExample4.set_oracle",
      "jump": "o",
      "offset": [
        829,
        946
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1028": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3273,
        3441
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1029": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3347,
        3351
      ],
      "op": "PUSH1",
      "path": "4",
      "statement": 11,
      "value": "0x0"
    },
    "1031": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3347,
        3351
      ],
      "op": "SLOAD",
      "path": "4"
    },
    "1032": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1034": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1035": {
      "op": "PUSH4",
      "value": "0x8D4B3223"
    },
    "1040": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1042": {
      "op": "SHL"
    },
    "1043": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1044": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "MSTORE",
      "path": "4"
    },
    "1045": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1047": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1049": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1051": {
      "op": "SHL"
    },
    "1052": {
      "op": "SUB"
    },
    "1053": {
      "op": "NOT"
    },
    "1054": {
      "op": "DUP4"
    },
    "1055": {
      "op": "AND"
    },
    "1056": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x4"
    },
    "1058": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "DUP3",
      "path": "4"
    },
    "1059": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "ADD",
      "path": "4"
    },
    "1060": {
      "op": "MSTORE"
    },
    "1061": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3414,
        3418
      ],
      "op": "ADDRESS",
      "path": "4"
    },
    "1062": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1064": {
      "op": "DUP3"
    },
    "1065": {
      "op": "ADD"
    },
    "1066": {
      "op": "MSTORE"
    },
    "1067": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3421,
        3426
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x2710"
    },
    "1070": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1072": {
      "op": "DUP3"
    },
    "1073": {
      "op": "ADD"
    },
    "1074": {
      "op": "MSTORE"
    },
    "1075": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3428,
        3433
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0xC350"
    },
    "1078": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1080": {
      "op": "DUP3"
    },
    "1081": {
      "op": "ADD"
    },
    "1082": {
      "op": "MSTORE"
    },
    "1083": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1085": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1087": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1089": {
      "op": "SHL"
    },
    "1090": {
      "op": "SUB"
    },
    "1091": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3347,
        3351
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1092": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3347,
        3351
      ],
      "op": "SWAP2",
      "path": "4"
    },
    "1093": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3347,
        3351
      ],
      "op": "AND",
      "path": "4"
    },
    "1094": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3347,
        3351
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1095": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3367
      ],
      "op": "PUSH4",
      "path": "4",
      "value": "0x8D4B3223"
    },
    "1100": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3367
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1101": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3391,
        3397
      ],
      "op": "PUSH3",
      "path": "4",
      "value": "0x186A0"
    },
    "1105": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3391,
        3397
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1106": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3375,
        3384
      ],
      "op": "CALLVALUE",
      "path": "4"
    },
    "1107": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3375,
        3384
      ],
      "op": "SWAP1",
      "path": "4"
    },
    "1108": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "1110": {
      "op": "ADD"
    },
    "1111": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1113": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x40"
    },
    "1115": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "MLOAD",
      "path": "4"
    },
    "1116": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1117": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "DUP4",
      "path": "4"
    },
    "1118": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "SUB",
      "path": "4"
    },
    "1119": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "DUP2",
      "path": "4"
    },
    "1120": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "DUP6",
      "path": "4"
    },
    "1121": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "DUP10",
      "path": "4"
    },
    "1122": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1123": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "EXTCODESIZE",
      "path": "4"
    },
    "1124": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1125": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1126": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1127": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x46F"
    },
    "1130": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1131": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1133": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1134": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1135": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1136": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "POP",
      "path": "4"
    },
    "1137": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "DUP9",
      "path": "4"
    },
    "1138": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "CALL",
      "path": "4"
    },
    "1139": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1140": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1141": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "ISZERO",
      "path": "4"
    },
    "1142": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "PUSH2",
      "path": "4",
      "value": "0x483"
    },
    "1145": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "JUMPI",
      "path": "4"
    },
    "1146": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1147": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1149": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "DUP1",
      "path": "4"
    },
    "1150": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "RETURNDATACOPY",
      "path": "4"
    },
    "1151": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "RETURNDATASIZE",
      "path": "4"
    },
    "1152": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "PUSH1",
      "path": "4",
      "value": "0x0"
    },
    "1154": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "REVERT",
      "path": "4"
    },
    "1155": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "JUMPDEST",
      "path": "4"
    },
    "1156": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "POP",
      "path": "4"
    },
    "1157": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "POP",
      "path": "4"
    },
    "1158": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "POP",
      "path": "4"
    },
    "1159": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "POP",
      "path": "4"
    },
    "1160": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "POP",
      "path": "4"
    },
    "1161": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3337,
        3434
      ],
      "op": "POP",
      "path": "4"
    },
    "1162": {
      "fn": "ClientExample4.callOracleSimple",
      "offset": [
        3273,
        3441
      ],
      "op": "POP",
      "path": "4"
    },
    "1163": {
      "fn": "ClientExample4.callOracleSimple",
      "jump": "o",
      "offset": [
        3273,
        3441
      ],
      "op": "JUMP",
      "path": "4"
    },
    "1164": {
      "op": "JUMPDEST"
    },
    "1165": {
      "op": "DUP1"
    },
    "1166": {
      "op": "CALLDATALOAD"
    },
    "1167": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1169": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1171": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "1173": {
      "op": "SHL"
    },
    "1174": {
      "op": "SUB"
    },
    "1175": {
      "op": "NOT"
    },
    "1176": {
      "op": "DUP2"
    },
    "1177": {
      "op": "AND"
    },
    "1178": {
      "op": "DUP2"
    },
    "1179": {
      "op": "EQ"
    },
    "1180": {
      "op": "PUSH2",
      "value": "0x4A4"
    },
    "1183": {
      "op": "JUMPI"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1186": {
      "op": "DUP1"
    },
    "1187": {
      "op": "REVERT"
    },
    "1188": {
      "op": "JUMPDEST"
    },
    "1189": {
      "op": "SWAP2"
    },
    "1190": {
      "op": "SWAP1"
    },
    "1191": {
      "op": "POP"
    },
    "1192": {
      "jump": "o",
      "op": "JUMP"
    },
    "1193": {
      "op": "JUMPDEST"
    },
    "1194": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1196": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1198": {
      "op": "DUP3"
    },
    "1199": {
      "op": "DUP5"
    },
    "1200": {
      "op": "SUB"
    },
    "1201": {
      "op": "SLT"
    },
    "1202": {
      "op": "ISZERO"
    },
    "1203": {
      "op": "PUSH2",
      "value": "0x4BA"
    },
    "1206": {
      "op": "JUMPI"
    },
    "1207": {
      "op": "DUP1"
    },
    "1208": {
      "op": "DUP2"
    },
    "1209": {
      "op": "REVERT"
    },
    "1210": {
      "op": "JUMPDEST"
    },
    "1211": {
      "op": "DUP2"
    },
    "1212": {
      "op": "CALLDATALOAD"
    },
    "1213": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1215": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1217": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1219": {
      "op": "SHL"
    },
    "1220": {
      "op": "SUB"
    },
    "1221": {
      "op": "DUP2"
    },
    "1222": {
      "op": "AND"
    },
    "1223": {
      "op": "DUP2"
    },
    "1224": {
      "op": "EQ"
    },
    "1225": {
      "op": "PUSH2",
      "value": "0x4D0"
    },
    "1228": {
      "op": "JUMPI"
    },
    "1229": {
      "op": "DUP2"
    },
    "1230": {
      "op": "DUP3"
    },
    "1231": {
      "op": "REVERT"
    },
    "1232": {
      "op": "JUMPDEST"
    },
    "1233": {
      "op": "SWAP4"
    },
    "1234": {
      "op": "SWAP3"
    },
    "1235": {
      "op": "POP"
    },
    "1236": {
      "op": "POP"
    },
    "1237": {
      "op": "POP"
    },
    "1238": {
      "jump": "o",
      "op": "JUMP"
    },
    "1239": {
      "op": "JUMPDEST"
    },
    "1240": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1242": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1244": {
      "op": "DUP3"
    },
    "1245": {
      "op": "DUP5"
    },
    "1246": {
      "op": "SUB"
    },
    "1247": {
      "op": "SLT"
    },
    "1248": {
      "op": "ISZERO"
    },
    "1249": {
      "op": "PUSH2",
      "value": "0x4E8"
    },
    "1252": {
      "op": "JUMPI"
    },
    "1253": {
      "op": "DUP1"
    },
    "1254": {
      "op": "DUP2"
    },
    "1255": {
      "op": "REVERT"
    },
    "1256": {
      "op": "JUMPDEST"
    },
    "1257": {
      "op": "PUSH2",
      "value": "0x4D0"
    },
    "1260": {
      "op": "DUP3"
    },
    "1261": {
      "op": "PUSH2",
      "value": "0x48C"
    },
    "1264": {
      "jump": "i",
      "op": "JUMP"
    },
    "1265": {
      "op": "JUMPDEST"
    },
    "1266": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1268": {
      "op": "DUP1"
    },
    "1269": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1271": {
      "op": "DUP4"
    },
    "1272": {
      "op": "DUP6"
    },
    "1273": {
      "op": "SUB"
    },
    "1274": {
      "op": "SLT"
    },
    "1275": {
      "op": "ISZERO"
    },
    "1276": {
      "op": "PUSH2",
      "value": "0x503"
    },
    "1279": {
      "op": "JUMPI"
    },
    "1280": {
      "op": "DUP1"
    },
    "1281": {
      "op": "DUP2"
    },
    "1282": {
      "op": "REVERT"
    },
    "1283": {
      "op": "JUMPDEST"
    },
    "1284": {
      "op": "PUSH2",
      "value": "0x50C"
    },
    "1287": {
      "op": "DUP4"
    },
    "1288": {
      "op": "PUSH2",
      "value": "0x48C"
    },
    "1291": {
      "jump": "i",
      "op": "JUMP"
    },
    "1292": {
      "op": "JUMPDEST"
    },
    "1293": {
      "op": "SWAP5"
    },
    "1294": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1296": {
      "op": "SWAP4"
    },
    "1297": {
      "op": "SWAP1"
    },
    "1298": {
      "op": "SWAP4"
    },
    "1299": {
      "op": "ADD"
    },
    "1300": {
      "op": "CALLDATALOAD"
    },
    "1301": {
      "op": "SWAP4"
    },
    "1302": {
      "op": "POP"
    },
    "1303": {
      "op": "POP"
    },
    "1304": {
      "op": "POP"
    },
    "1305": {
      "jump": "o",
      "op": "JUMP"
    },
    "1306": {
      "op": "JUMPDEST"
    },
    "1307": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1309": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1311": {
      "op": "DUP3"
    },
    "1312": {
      "op": "DUP5"
    },
    "1313": {
      "op": "SUB"
    },
    "1314": {
      "op": "SLT"
    },
    "1315": {
      "op": "ISZERO"
    },
    "1316": {
      "op": "PUSH2",
      "value": "0x52B"
    },
    "1319": {
      "op": "JUMPI"
    },
    "1320": {
      "op": "DUP1"
    },
    "1321": {
      "op": "DUP2"
    },
    "1322": {
      "op": "REVERT"
    },
    "1323": {
      "op": "JUMPDEST"
    },
    "1324": {
      "op": "POP"
    },
    "1325": {
      "op": "CALLDATALOAD"
    },
    "1326": {
      "op": "SWAP2"
    },
    "1327": {
      "op": "SWAP1"
    },
    "1328": {
      "op": "POP"
    },
    "1329": {
      "jump": "o",
      "op": "JUMP"
    },
    "1330": {
      "op": "JUMPDEST"
    },
    "1331": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1333": {
      "op": "DUP1"
    },
    "1334": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1336": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "1338": {
      "op": "DUP5"
    },
    "1339": {
      "op": "DUP7"
    },
    "1340": {
      "op": "SUB"
    },
    "1341": {
      "op": "SLT"
    },
    "1342": {
      "op": "ISZERO"
    },
    "1343": {
      "op": "PUSH2",
      "value": "0x546"
    },
    "1346": {
      "op": "JUMPI"
    },
    "1347": {
      "op": "DUP1"
    },
    "1348": {
      "op": "DUP2"
    },
    "1349": {
      "op": "REVERT"
    },
    "1350": {
      "op": "JUMPDEST"
    },
    "1351": {
      "op": "POP"
    },
    "1352": {
      "op": "POP"
    },
    "1353": {
      "op": "DUP2"
    },
    "1354": {
      "op": "CALLDATALOAD"
    },
    "1355": {
      "op": "SWAP4"
    },
    "1356": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "1358": {
      "op": "DUP4"
    },
    "1359": {
      "op": "ADD"
    },
    "1360": {
      "op": "CALLDATALOAD"
    },
    "1361": {
      "op": "SWAP4"
    },
    "1362": {
      "op": "POP"
    },
    "1363": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1365": {
      "op": "SWAP1"
    },
    "1366": {
      "op": "SWAP3"
    },
    "1367": {
      "op": "ADD"
    },
    "1368": {
      "op": "CALLDATALOAD"
    },
    "1369": {
      "op": "SWAP2"
    },
    "1370": {
      "op": "SWAP1"
    },
    "1371": {
      "op": "POP"
    },
    "1372": {
      "jump": "o",
      "op": "JUMP"
    },
    "1373": {
      "op": "JUMPDEST"
    },
    "1374": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1376": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1378": {
      "op": "NOT"
    },
    "1379": {
      "op": "DUP3"
    },
    "1380": {
      "op": "EQ"
    },
    "1381": {
      "op": "ISZERO"
    },
    "1382": {
      "op": "PUSH2",
      "value": "0x57D"
    },
    "1385": {
      "op": "JUMPI"
    },
    "1386": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "1391": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "1393": {
      "op": "SHL"
    },
    "1394": {
      "op": "DUP2"
    },
    "1395": {
      "op": "MSTORE"
    },
    "1396": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "1398": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1400": {
      "op": "MSTORE"
    },
    "1401": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1403": {
      "op": "DUP2"
    },
    "1404": {
      "op": "REVERT"
    },
    "1405": {
      "op": "JUMPDEST"
    },
    "1406": {
      "op": "POP"
    },
    "1407": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1409": {
      "op": "ADD"
    },
    "1410": {
      "op": "SWAP1"
    },
    "1411": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "8f28b02a84a1dfc68a42c4726abd62482cafd5fb",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.4.22 <0.9.0;\n\n\ninterface AcriaNode {\n    function create_request_with_data(bytes8 _requestID, address callback, uint256 _expire, uint32 max_gas, uint256 _data, uint256 _data_passthrough) external payable;\n    function create_request(bytes8 _requestID, address callback, uint256 _expire, uint32 max_gas) external payable;\n}\n\ncontract ClientExample4 {\n    //The address of the targeted Oracle Node\n    address payable node;\n    address master;\n\n    //last most recent value received via a callback\n    mapping(uint256 => uint256) public lastValue;\n    \n    //last most recent value received via a callback\n    uint256 public _lastValue;\n    \n    uint256 public counter;\n\n    constructor(address payable _node) {\n        node = _node;\n        master = msg.sender;\n    }\n    \n    function set_oracle(address payable _node) public{\n    \trequire(msg.sender == master);\n    \t\n    \tnode = _node;\n    }\n\n    function callOracle() public payable{\n        //make a call to the Oracle Node and include the fee (all ETH provided)\n        //1. parameter is the item requested in this case the USD/GBP exchange rate\n        //2. parameter is the callback address (this contract)\n        //3. parameter is the request expire date. It is expressed in blocks until the request should be dropped.\n        //4. parameter is the amount of gas the oracle node should provide for the callback. The higher the requested gas the higher should be the fee provided.\n        //5. parameter is the request data which further specifies the data needed (here: the current timestamp)\n        //6. parameter is the passthrough data which will be passed through to the callback function (see third parameter of the callback)\n        AcriaNode(node).create_request_with_data{value: msg.value, gas: 100000}(\"USD/GBP\", address(this), 10000, 50000, block.timestamp, counter);\n        \n        counter++;\n    }\n    \n    function callOracle(bytes8 field, uint256 parameter) public payable{\n        AcriaNode(node).create_request_with_data{value: msg.value, gas: 100000}(field, address(this), 10000, 50000, parameter, counter);\n        \n        counter++;\n    }\n    \n    //the function which gets called by the Oracle Node\n    //it must be named value_callback with exactly three uint256 as parameter\n    function value_callback(uint256 _value, uint256 data, uint256 data_passthrough) public{\n        //only the Oracle Node is allowed to call this function\n        require(msg.sender == node);\n\n        //update the value\n        lastValue[data_passthrough] = _value;\n    }\n    \n    function callOracleSimple() public payable{\n        //make a call to the Oracle Node and include the fee (all ETH provided)\n        //first parameter is the item requested in this case the USD/GBP exchange rate\n        //the second parameter is the callback address (this contract)\n        //the third is the request expire date. It is expressed in blocks until the request should be dropped.\n        //the fourth is the amount of gas the oracle node should provide for the callback. The higher the requested gas the higher should be the fee provided.\n        AcriaNode(node).create_request{value: msg.value, gas: 100000}(\"USD/GBP\", address(this), 10000, 50000);\n    }\n    \n    function callOracleSimple(bytes8 field) public payable{\n        AcriaNode(node).create_request{value: msg.value, gas: 100000}(field, address(this), 10000, 50000);\n    }\n\n    //the function which gets called by the Oracle Node\n    //it must be named value_callback with exactly one uint256 as parameter\n    function value_callback(uint256 _value) public{\n        //only the Oracle Node is allowed to call this function\n        require(msg.sender == node);\n\n        //update the value\n        _lastValue = _value;\n    }\n}\n",
  "sourceMap": "377:3415:4:-:0;;;726:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;771:4;:12;;-1:-1:-1;;;;;771:12:4;;;-1:-1:-1;;;;;;771:12:4;;;;;;;793:19;;;;;802:10;793:19;;;377:3415;;14:318:5;;145:2;133:9;124:7;120:23;116:32;113:2;;;166:6;158;151:22;113:2;197:16;;-1:-1:-1;;;;;242:31:5;;232:42;;222:2;;293:6;285;278:22;222:2;321:5;103:229;-1:-1:-1;;;103:229:5:o;:::-;377:3415:4;;;;;;",
  "sourcePath": "contracts/contracts/clientContract/clientExample4.sol",
  "type": "contract"
}
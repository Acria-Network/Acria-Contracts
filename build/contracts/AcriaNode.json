{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_token_contract",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestID",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "callback",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "RequestFilled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "requestID",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "callback",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fee",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "RequestFilledError",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "by",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "period",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "token",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "total_token",
          "type": "uint256"
        }
      ],
      "name": "StakePaidOut",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initiator",
          "type": "address"
        }
      ],
      "name": "cancel_stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initiator",
          "type": "address"
        }
      ],
      "name": "cancel_stake_withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "completedRequests",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes8",
          "name": "_requestID",
          "type": "bytes8"
        },
        {
          "internalType": "address",
          "name": "callback",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_expire",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "max_gas",
          "type": "uint32"
        }
      ],
      "name": "create_request",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes8",
          "name": "_requestID",
          "type": "bytes8"
        },
        {
          "internalType": "address",
          "name": "callback",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_expire",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "max_gas",
          "type": "uint32"
        },
        {
          "internalType": "uint256",
          "name": "_data",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_data_passthrough",
          "type": "uint256"
        }
      ],
      "name": "create_request_with_data",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes8",
          "name": "_requestID",
          "type": "bytes8"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "fillRequest",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "get_requests",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes8",
              "name": "requestID",
              "type": "bytes8"
            },
            {
              "internalType": "uint64",
              "name": "fee",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "expiration",
              "type": "uint64"
            },
            {
              "internalType": "uint32",
              "name": "id",
              "type": "uint32"
            },
            {
              "internalType": "uint32",
              "name": "max_gas",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "callback",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "data",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "data_passthrough",
              "type": "uint256"
            }
          ],
          "internalType": "struct AcriaNode.request[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "period",
          "type": "uint256"
        }
      ],
      "name": "get_total_stake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "get_withdrawable",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "last_staker_added",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initiator",
          "type": "address"
        }
      ],
      "name": "payout_stakes",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "period_staker",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "previous_last_staker_added",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "pump_fee",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "staker",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "staker_stake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initiator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "balance",
          "type": "uint256"
        }
      ],
      "name": "start_stake",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token_contract",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "withdrawable_stake",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "1": "contracts/contracts/AcriaNode.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/AcriaNode.sol",
    "exportedSymbols": {
      "AcriaMain": [
        150
      ],
      "AcriaNode": [
        1331
      ]
    },
    "id": 1332,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 152,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:1"
      },
      {
        "id": 153,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "66:33:1"
      },
      {
        "absolutePath": "contracts/contracts/AcriaMain.sol",
        "file": "./AcriaMain.sol",
        "id": 154,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 1332,
        "sourceUnit": 151,
        "src": "101:25:1",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1331,
        "linearizedBaseContracts": [
          1331
        ],
        "name": "AcriaNode",
        "nameLocation": "138:9:1",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "canonicalName": "AcriaNode.request",
            "id": 171,
            "members": [
              {
                "constant": false,
                "id": 156,
                "mutability": "mutable",
                "name": "requestID",
                "nameLocation": "178:9:1",
                "nodeType": "VariableDeclaration",
                "scope": 171,
                "src": "171:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes8",
                  "typeString": "bytes8"
                },
                "typeName": {
                  "id": 155,
                  "name": "bytes8",
                  "nodeType": "ElementaryTypeName",
                  "src": "171:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes8",
                    "typeString": "bytes8"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 158,
                "mutability": "mutable",
                "name": "fee",
                "nameLocation": "197:3:1",
                "nodeType": "VariableDeclaration",
                "scope": 171,
                "src": "190:10:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 157,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "190:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 160,
                "mutability": "mutable",
                "name": "expiration",
                "nameLocation": "210:10:1",
                "nodeType": "VariableDeclaration",
                "scope": 171,
                "src": "203:17:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint64",
                  "typeString": "uint64"
                },
                "typeName": {
                  "id": 159,
                  "name": "uint64",
                  "nodeType": "ElementaryTypeName",
                  "src": "203:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 162,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "230:2:1",
                "nodeType": "VariableDeclaration",
                "scope": 171,
                "src": "223:9:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 161,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "223:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 164,
                "mutability": "mutable",
                "name": "max_gas",
                "nameLocation": "242:7:1",
                "nodeType": "VariableDeclaration",
                "scope": 171,
                "src": "235:14:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "typeName": {
                  "id": 163,
                  "name": "uint32",
                  "nodeType": "ElementaryTypeName",
                  "src": "235:6:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 166,
                "mutability": "mutable",
                "name": "callback",
                "nameLocation": "260:8:1",
                "nodeType": "VariableDeclaration",
                "scope": 171,
                "src": "252:16:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 165,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "252:7:1",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 168,
                "mutability": "mutable",
                "name": "data",
                "nameLocation": "279:4:1",
                "nodeType": "VariableDeclaration",
                "scope": 171,
                "src": "271:12:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 167,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "271:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 170,
                "mutability": "mutable",
                "name": "data_passthrough",
                "nameLocation": "294:16:1",
                "nodeType": "VariableDeclaration",
                "scope": 171,
                "src": "286:24:1",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 169,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "286:7:1",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "request",
            "nameLocation": "160:7:1",
            "nodeType": "StructDefinition",
            "scope": 1331,
            "src": "153:162:1",
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 181,
            "name": "RequestFilled",
            "nameLocation": "330:13:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 173,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestID",
                  "nameLocation": "352:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "344:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "344:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 175,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "callback",
                  "nameLocation": "371:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "363:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "363:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 177,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "389:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "381:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 176,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "381:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 179,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "402:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 181,
                  "src": "394:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "394:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "343:62:1"
            },
            "src": "324:82:1"
          },
          {
            "anonymous": false,
            "id": 191,
            "name": "RequestFilledError",
            "nameLocation": "415:18:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 190,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "requestID",
                  "nameLocation": "442:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "434:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "434:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 185,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "callback",
                  "nameLocation": "461:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "453:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 184,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "453:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 187,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "fee",
                  "nameLocation": "479:3:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "471:11:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 186,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "471:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 189,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "492:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 191,
                  "src": "484:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 188,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "484:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "433:62:1"
            },
            "src": "409:87:1"
          },
          {
            "anonymous": false,
            "id": 203,
            "name": "StakePaidOut",
            "nameLocation": "505:12:1",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 202,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 193,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "by",
                  "nameLocation": "534:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "518:18:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 192,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "518:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 195,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "546:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "538:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 194,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "538:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 197,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "period",
                  "nameLocation": "562:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "554:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 196,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "554:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 199,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "578:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "570:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 198,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "570:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 201,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "total_token",
                  "nameLocation": "593:11:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 203,
                  "src": "585:19:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 200,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "585:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "517:88:1"
            },
            "src": "499:107:1"
          },
          {
            "constant": false,
            "functionSelector": "9563dceb",
            "id": 205,
            "mutability": "immutable",
            "name": "token_contract",
            "nameLocation": "637:14:1",
            "nodeType": "VariableDeclaration",
            "scope": 1331,
            "src": "612:39:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 204,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "612:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "8da5cb5b",
            "id": 207,
            "mutability": "immutable",
            "name": "owner",
            "nameLocation": "691:5:1",
            "nodeType": "VariableDeclaration",
            "scope": 1331,
            "src": "658:38:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 206,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "658:15:1",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 209,
            "mutability": "immutable",
            "name": "master",
            "nameLocation": "718:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 1331,
            "src": "700:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 208,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "700:7:1",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 213,
            "mutability": "mutable",
            "name": "requests",
            "nameLocation": "738:8:1",
            "nodeType": "VariableDeclaration",
            "scope": 1331,
            "src": "728:18:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_request_$171_storage_$dyn_storage",
              "typeString": "struct AcriaNode.request[]"
            },
            "typeName": {
              "baseType": {
                "id": 211,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 210,
                  "name": "request",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 171,
                  "src": "728:7:1"
                },
                "referencedDeclaration": 171,
                "src": "728:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_request_$171_storage_ptr",
                  "typeString": "struct AcriaNode.request"
                }
              },
              "id": 212,
              "nodeType": "ArrayTypeName",
              "src": "728:9:1",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_request_$171_storage_$dyn_storage_ptr",
                "typeString": "struct AcriaNode.request[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "08f438f7",
            "id": 216,
            "mutability": "mutable",
            "name": "completedRequests",
            "nameLocation": "765:17:1",
            "nodeType": "VariableDeclaration",
            "scope": 1331,
            "src": "750:36:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 214,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "750:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 215,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "785:1:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 219,
            "mutability": "mutable",
            "name": "withdrawable",
            "nameLocation": "801:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 1331,
            "src": "793:24:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 217,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "793:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 218,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "816:1:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "c2927d85",
            "id": 223,
            "mutability": "mutable",
            "name": "withdrawable_stake",
            "nameLocation": "856:18:1",
            "nodeType": "VariableDeclaration",
            "scope": 1331,
            "src": "821:53:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 222,
              "keyType": {
                "id": 220,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "829:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "821:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 221,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "840:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fb10c7b1",
            "id": 227,
            "mutability": "mutable",
            "name": "period_staker",
            "nameLocation": "913:13:1",
            "nodeType": "VariableDeclaration",
            "scope": 1331,
            "src": "878:48:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 226,
              "keyType": {
                "id": 224,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "886:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "878:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 225,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "897:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "82e4eda4",
            "id": 231,
            "mutability": "mutable",
            "name": "staker",
            "nameLocation": "965:6:1",
            "nodeType": "VariableDeclaration",
            "scope": 1331,
            "src": "930:41:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 230,
              "keyType": {
                "id": 228,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "938:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "930:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 229,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "949:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "fcf6c903",
            "id": 235,
            "mutability": "mutable",
            "name": "staker_stake",
            "nameLocation": "1010:12:1",
            "nodeType": "VariableDeclaration",
            "scope": 1331,
            "src": "975:47:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 234,
              "keyType": {
                "id": 232,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "983:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "975:27:1",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 233,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "994:7:1",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "15b3c6eb",
            "id": 238,
            "mutability": "mutable",
            "name": "last_staker_added",
            "nameLocation": "1041:17:1",
            "nodeType": "VariableDeclaration",
            "scope": 1331,
            "src": "1026:36:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 236,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1026:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 237,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1061:1:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "f7ca0d66",
            "id": 241,
            "mutability": "mutable",
            "name": "previous_last_staker_added",
            "nameLocation": "1081:26:1",
            "nodeType": "VariableDeclaration",
            "scope": 1331,
            "src": "1066:45:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 239,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1066:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 240,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1110:1:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "public"
          },
          {
            "constant": true,
            "id": 244,
            "mutability": "constant",
            "name": "period_interval",
            "nameLocation": "1132:15:1",
            "nodeType": "VariableDeclaration",
            "scope": 1331,
            "src": "1115:39:1",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 242,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1115:7:1",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030",
              "id": 243,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1150:4:1",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 264,
              "nodeType": "Block",
              "src": "1303:85:1",
              "statements": [
                {
                  "expression": {
                    "id": 253,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 251,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 207,
                      "src": "1308:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 252,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 246,
                      "src": "1316:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "1308:14:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 254,
                  "nodeType": "ExpressionStatement",
                  "src": "1308:14:1"
                },
                {
                  "expression": {
                    "id": 258,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 255,
                      "name": "master",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 209,
                      "src": "1327:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 256,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1336:3:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 257,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1336:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1327:19:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 259,
                  "nodeType": "ExpressionStatement",
                  "src": "1327:19:1"
                },
                {
                  "expression": {
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 260,
                      "name": "token_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 205,
                      "src": "1351:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 261,
                      "name": "_token_contract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 248,
                      "src": "1368:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1351:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "1351:32:1"
                }
              ]
            },
            "id": 265,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 246,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "1270:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "1254:22:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 245,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1254:15:1",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 248,
                  "mutability": "mutable",
                  "name": "_token_contract",
                  "nameLocation": "1286:15:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 265,
                  "src": "1278:23:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 247,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1278:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1253:49:1"
            },
            "returnParameters": {
              "id": 250,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1303:0:1"
            },
            "scope": 1331,
            "src": "1242:146:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 276,
              "nodeType": "Block",
              "src": "1415:96:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 268,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1436:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 269,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1436:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 270,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 207,
                          "src": "1450:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1436:19:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265737472696374656420746f20636f6e7472616374206f776e6572",
                        "id": 272,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1463:30:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c2fc0e3653210b2dc755cc082ecb805426d9794706767aafa80362f4e701ef58",
                          "typeString": "literal_string \"Restricted to contract owner\""
                        },
                        "value": "Restricted to contract owner"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c2fc0e3653210b2dc755cc082ecb805426d9794706767aafa80362f4e701ef58",
                          "typeString": "literal_string \"Restricted to contract owner\""
                        }
                      ],
                      "id": 267,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1421:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 273,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1421:78:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 274,
                  "nodeType": "ExpressionStatement",
                  "src": "1421:78:1"
                },
                {
                  "id": 275,
                  "nodeType": "PlaceholderStatement",
                  "src": "1505:1:1"
                }
              ]
            },
            "id": 277,
            "name": "restricted",
            "nameLocation": "1402:10:1",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1412:2:1"
            },
            "src": "1393:118:1",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 298,
              "nodeType": "Block",
              "src": "1590:123:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 286,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 284,
                      "name": "period",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 279,
                      "src": "1598:6:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1608:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "1598:11:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 296,
                    "nodeType": "Block",
                    "src": "1669:40:1",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 292,
                            "name": "period_staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 227,
                            "src": "1682:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 294,
                          "indexExpression": {
                            "id": 293,
                            "name": "period",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 279,
                            "src": "1696:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1682:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 283,
                        "id": 295,
                        "nodeType": "Return",
                        "src": "1675:28:1"
                      }
                    ]
                  },
                  "id": 297,
                  "nodeType": "IfStatement",
                  "src": "1595:114:1",
                  "trueBody": {
                    "id": 291,
                    "nodeType": "Block",
                    "src": "1610:51:1",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 287,
                            "name": "period_staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 227,
                            "src": "1623:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                              "typeString": "mapping(uint256 => uint256)"
                            }
                          },
                          "id": 289,
                          "indexExpression": {
                            "id": 288,
                            "name": "last_staker_added",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 238,
                            "src": "1637:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1623:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 283,
                        "id": 290,
                        "nodeType": "Return",
                        "src": "1616:39:1"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "75ad5dbe",
            "id": 299,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get_total_stake",
            "nameLocation": "1529:15:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 280,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 279,
                  "mutability": "mutable",
                  "name": "period",
                  "nameLocation": "1553:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 299,
                  "src": "1545:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 278,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1545:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1544:16:1"
            },
            "returnParameters": {
              "id": 283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 282,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 299,
                  "src": "1582:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 281,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1582:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1581:9:1"
            },
            "scope": 1331,
            "src": "1520:193:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 354,
              "nodeType": "Block",
              "src": "1763:203:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 310,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 305,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1776:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1776:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 307,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1788:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 308,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1792:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "1788:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "1776:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 304,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1768:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 311,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1768:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 312,
                  "nodeType": "ExpressionStatement",
                  "src": "1768:27:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 314,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1808:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 315,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1808:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1820:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1808:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 313,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1800:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1800:22:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 319,
                  "nodeType": "ExpressionStatement",
                  "src": "1800:22:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 331,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 327,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 321,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "1835:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 322,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "src": "1835:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "baseExpression": {
                                "id": 323,
                                "name": "requests",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 213,
                                "src": "1847:8:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_request_$171_storage_$dyn_storage",
                                  "typeString": "struct AcriaNode.request storage ref[] storage ref"
                                }
                              },
                              "id": 325,
                              "indexExpression": {
                                "id": 324,
                                "name": "id",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 301,
                                "src": "1856:2:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1847:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_request_$171_storage",
                                "typeString": "struct AcriaNode.request storage ref"
                              }
                            },
                            "id": 326,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "fee",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 158,
                            "src": "1847:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "src": "1835:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 330,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1866:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 329,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1870:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "1866:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "1835:37:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 320,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1827:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1827:46:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 333,
                  "nodeType": "ExpressionStatement",
                  "src": "1827:46:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 340,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 335,
                              "name": "requests",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 213,
                              "src": "1886:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_request_$171_storage_$dyn_storage",
                                "typeString": "struct AcriaNode.request storage ref[] storage ref"
                              }
                            },
                            "id": 337,
                            "indexExpression": {
                              "id": 336,
                              "name": "id",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 301,
                              "src": "1895:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1886:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_request_$171_storage",
                              "typeString": "struct AcriaNode.request storage ref"
                            }
                          },
                          "id": 338,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "expiration",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 160,
                          "src": "1886:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1913:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1886:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 334,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1878:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 341,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1878:37:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 342,
                  "nodeType": "ExpressionStatement",
                  "src": "1878:37:1"
                },
                {
                  "expression": {
                    "id": 352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 343,
                          "name": "requests",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 213,
                          "src": "1924:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_request_$171_storage_$dyn_storage",
                            "typeString": "struct AcriaNode.request storage ref[] storage ref"
                          }
                        },
                        "id": 345,
                        "indexExpression": {
                          "id": 344,
                          "name": "id",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 301,
                          "src": "1933:2:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1924:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_request_$171_storage",
                          "typeString": "struct AcriaNode.request storage ref"
                        }
                      },
                      "id": 346,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "fee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 158,
                      "src": "1924:16:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 349,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1951:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1951:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 348,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "1944:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 347,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "1944:6:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 351,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1944:17:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "1924:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 353,
                  "nodeType": "ExpressionStatement",
                  "src": "1924:37:1"
                }
              ]
            },
            "functionSelector": "6e5ab542",
            "id": 355,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pump_fee",
            "nameLocation": "1727:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 301,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "1744:2:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 355,
                  "src": "1736:10:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 300,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1736:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1735:12:1"
            },
            "returnParameters": {
              "id": 303,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1763:0:1"
            },
            "scope": 1331,
            "src": "1718:248:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 456,
              "nodeType": "Block",
              "src": "2084:466:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 367,
                          "name": "_expire",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 361,
                          "src": "2098:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2108:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "2098:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 366,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2090:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 370,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2090:22:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 371,
                  "nodeType": "ExpressionStatement",
                  "src": "2090:22:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 378,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 373,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2126:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2126:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 375,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2138:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 376,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2142:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "2138:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "2126:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 372,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2118:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 379,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2118:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 380,
                  "nodeType": "ExpressionStatement",
                  "src": "2118:27:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 382,
                          "name": "_expire",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 361,
                          "src": "2159:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "31303030303030",
                          "id": 383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2169:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1000000"
                        },
                        "src": "2159:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 381,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2151:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2151:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 386,
                  "nodeType": "ExpressionStatement",
                  "src": "2151:26:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 390,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 388,
                          "name": "max_gas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 363,
                          "src": "2191:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "353030303030",
                          "id": 389,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2201:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500000_by_1",
                            "typeString": "int_const 500000"
                          },
                          "value": "500000"
                        },
                        "src": "2191:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 387,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2183:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 391,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2183:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 392,
                  "nodeType": "ExpressionStatement",
                  "src": "2183:25:1"
                },
                {
                  "assignments": [
                    395
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 395,
                      "mutability": "mutable",
                      "name": "new_request",
                      "nameLocation": "2234:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 456,
                      "src": "2219:26:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_request_$171_memory_ptr",
                        "typeString": "struct AcriaNode.request"
                      },
                      "typeName": {
                        "id": 394,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 393,
                          "name": "request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 171,
                          "src": "2219:7:1"
                        },
                        "referencedDeclaration": 171,
                        "src": "2219:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_request_$171_storage_ptr",
                          "typeString": "struct AcriaNode.request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 396,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2219:26:1"
                },
                {
                  "expression": {
                    "id": 401,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 397,
                        "name": "new_request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "2251:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_request_$171_memory_ptr",
                          "typeString": "struct AcriaNode.request memory"
                        }
                      },
                      "id": 399,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "requestID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 156,
                      "src": "2251:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes8",
                        "typeString": "bytes8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 400,
                      "name": "_requestID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 357,
                      "src": "2275:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes8",
                        "typeString": "bytes8"
                      }
                    },
                    "src": "2251:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes8",
                      "typeString": "bytes8"
                    }
                  },
                  "id": 402,
                  "nodeType": "ExpressionStatement",
                  "src": "2251:34:1"
                },
                {
                  "expression": {
                    "id": 411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 403,
                        "name": "new_request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "2291:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_request_$171_memory_ptr",
                          "typeString": "struct AcriaNode.request memory"
                        }
                      },
                      "id": 405,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "fee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 158,
                      "src": "2291:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 408,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2316:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2316:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 407,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2309:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 406,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "2309:6:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2309:17:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "2291:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 412,
                  "nodeType": "ExpressionStatement",
                  "src": "2291:35:1"
                },
                {
                  "expression": {
                    "id": 423,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 413,
                        "name": "new_request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "2332:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_request_$171_memory_ptr",
                          "typeString": "struct AcriaNode.request memory"
                        }
                      },
                      "id": 415,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "expiration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 160,
                      "src": "2332:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 421,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 418,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2364:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 419,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "2364:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 420,
                            "name": "_expire",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 361,
                            "src": "2379:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2364:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2357:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 416,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "2357:6:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2357:30:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "2332:55:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 424,
                  "nodeType": "ExpressionStatement",
                  "src": "2332:55:1"
                },
                {
                  "expression": {
                    "id": 429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 425,
                        "name": "new_request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "2393:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_request_$171_memory_ptr",
                          "typeString": "struct AcriaNode.request memory"
                        }
                      },
                      "id": 427,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 166,
                      "src": "2393:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 428,
                      "name": "callback",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 359,
                      "src": "2416:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2393:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 430,
                  "nodeType": "ExpressionStatement",
                  "src": "2393:31:1"
                },
                {
                  "expression": {
                    "id": 439,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 431,
                        "name": "new_request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "2430:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_request_$171_memory_ptr",
                          "typeString": "struct AcriaNode.request memory"
                        }
                      },
                      "id": 433,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 162,
                      "src": "2430:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 436,
                            "name": "requests",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 213,
                            "src": "2454:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_request_$171_storage_$dyn_storage",
                              "typeString": "struct AcriaNode.request storage ref[] storage ref"
                            }
                          },
                          "id": 437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "2454:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 435,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2447:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 434,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2447:6:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 438,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2447:23:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2430:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 440,
                  "nodeType": "ExpressionStatement",
                  "src": "2430:40:1"
                },
                {
                  "expression": {
                    "id": 448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 441,
                        "name": "new_request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "2476:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_request_$171_memory_ptr",
                          "typeString": "struct AcriaNode.request memory"
                        }
                      },
                      "id": 443,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "max_gas",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 164,
                      "src": "2476:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 446,
                          "name": "max_gas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 363,
                          "src": "2505:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2498:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 444,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "2498:6:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 447,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2498:15:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "2476:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 449,
                  "nodeType": "ExpressionStatement",
                  "src": "2476:37:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 453,
                        "name": "new_request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 395,
                        "src": "2533:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_request_$171_memory_ptr",
                          "typeString": "struct AcriaNode.request memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_request_$171_memory_ptr",
                          "typeString": "struct AcriaNode.request memory"
                        }
                      ],
                      "expression": {
                        "id": 450,
                        "name": "requests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "2519:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_request_$171_storage_$dyn_storage",
                          "typeString": "struct AcriaNode.request storage ref[] storage ref"
                        }
                      },
                      "id": 452,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2519:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_request_$171_storage_$dyn_storage_ptr_$_t_struct$_request_$171_storage_$returns$__$bound_to$_t_array$_t_struct$_request_$171_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct AcriaNode.request storage ref[] storage pointer,struct AcriaNode.request storage ref)"
                      }
                    },
                    "id": 454,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2519:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 455,
                  "nodeType": "ExpressionStatement",
                  "src": "2519:26:1"
                }
              ]
            },
            "functionSelector": "8d4b3223",
            "id": 457,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "create_request",
            "nameLocation": "1984:14:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 364,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 357,
                  "mutability": "mutable",
                  "name": "_requestID",
                  "nameLocation": "2006:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "1999:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes8",
                    "typeString": "bytes8"
                  },
                  "typeName": {
                    "id": 356,
                    "name": "bytes8",
                    "nodeType": "ElementaryTypeName",
                    "src": "1999:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes8",
                      "typeString": "bytes8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 359,
                  "mutability": "mutable",
                  "name": "callback",
                  "nameLocation": "2026:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "2018:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 358,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2018:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 361,
                  "mutability": "mutable",
                  "name": "_expire",
                  "nameLocation": "2044:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "2036:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 360,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2036:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 363,
                  "mutability": "mutable",
                  "name": "max_gas",
                  "nameLocation": "2060:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 457,
                  "src": "2053:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 362,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2053:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1998:70:1"
            },
            "returnParameters": {
              "id": 365,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2084:0:1"
            },
            "scope": 1331,
            "src": "1975:575:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 582,
              "nodeType": "Block",
              "src": "2720:602:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 473,
                          "name": "_expire",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 463,
                          "src": "2734:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "313030",
                          "id": 474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2744:3:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        },
                        "src": "2734:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 472,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2726:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2726:22:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 477,
                  "nodeType": "ExpressionStatement",
                  "src": "2726:22:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 479,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2762:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 480,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2762:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          },
                          "id": 483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "leftExpression": {
                            "hexValue": "3130",
                            "id": 481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2774:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "**",
                          "rightExpression": {
                            "hexValue": "3138",
                            "id": 482,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "2778:2:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_18_by_1",
                              "typeString": "int_const 18"
                            },
                            "value": "18"
                          },
                          "src": "2774:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000000000000000_by_1",
                            "typeString": "int_const 1000000000000000000"
                          }
                        },
                        "src": "2762:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 478,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2754:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2754:27:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 486,
                  "nodeType": "ExpressionStatement",
                  "src": "2754:27:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 490,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 488,
                          "name": "_expire",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 463,
                          "src": "2795:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "31303030303030",
                          "id": 489,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2805:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1000000_by_1",
                            "typeString": "int_const 1000000"
                          },
                          "value": "1000000"
                        },
                        "src": "2795:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 487,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2787:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2787:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 492,
                  "nodeType": "ExpressionStatement",
                  "src": "2787:26:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "id": 496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 494,
                          "name": "max_gas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 465,
                          "src": "2827:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "353030303030",
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2837:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_500000_by_1",
                            "typeString": "int_const 500000"
                          },
                          "value": "500000"
                        },
                        "src": "2827:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 493,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2819:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 497,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2819:25:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 498,
                  "nodeType": "ExpressionStatement",
                  "src": "2819:25:1"
                },
                {
                  "assignments": [
                    501
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 501,
                      "mutability": "mutable",
                      "name": "new_request",
                      "nameLocation": "2870:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 582,
                      "src": "2855:26:1",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_request_$171_memory_ptr",
                        "typeString": "struct AcriaNode.request"
                      },
                      "typeName": {
                        "id": 500,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 499,
                          "name": "request",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 171,
                          "src": "2855:7:1"
                        },
                        "referencedDeclaration": 171,
                        "src": "2855:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_request_$171_storage_ptr",
                          "typeString": "struct AcriaNode.request"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 502,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2855:26:1"
                },
                {
                  "expression": {
                    "id": 507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 503,
                        "name": "new_request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "2887:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_request_$171_memory_ptr",
                          "typeString": "struct AcriaNode.request memory"
                        }
                      },
                      "id": 505,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "requestID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 156,
                      "src": "2887:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes8",
                        "typeString": "bytes8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 506,
                      "name": "_requestID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 459,
                      "src": "2911:10:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes8",
                        "typeString": "bytes8"
                      }
                    },
                    "src": "2887:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes8",
                      "typeString": "bytes8"
                    }
                  },
                  "id": 508,
                  "nodeType": "ExpressionStatement",
                  "src": "2887:34:1"
                },
                {
                  "expression": {
                    "id": 517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 509,
                        "name": "new_request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "2927:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_request_$171_memory_ptr",
                          "typeString": "struct AcriaNode.request memory"
                        }
                      },
                      "id": 511,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "fee",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 158,
                      "src": "2927:15:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 514,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2952:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2952:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2945:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 512,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "2945:6:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 516,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2945:17:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "2927:35:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 518,
                  "nodeType": "ExpressionStatement",
                  "src": "2927:35:1"
                },
                {
                  "expression": {
                    "id": 529,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 519,
                        "name": "new_request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "2968:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_request_$171_memory_ptr",
                          "typeString": "struct AcriaNode.request memory"
                        }
                      },
                      "id": 521,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "expiration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 160,
                      "src": "2968:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 524,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "3000:5:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 525,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "3000:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "id": 526,
                            "name": "_expire",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 463,
                            "src": "3015:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3000:22:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2993:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint64_$",
                          "typeString": "type(uint64)"
                        },
                        "typeName": {
                          "id": 522,
                          "name": "uint64",
                          "nodeType": "ElementaryTypeName",
                          "src": "2993:6:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 528,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2993:30:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "src": "2968:55:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "id": 530,
                  "nodeType": "ExpressionStatement",
                  "src": "2968:55:1"
                },
                {
                  "expression": {
                    "id": 535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 531,
                        "name": "new_request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "3029:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_request_$171_memory_ptr",
                          "typeString": "struct AcriaNode.request memory"
                        }
                      },
                      "id": 533,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "callback",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 166,
                      "src": "3029:20:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 534,
                      "name": "callback",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 461,
                      "src": "3052:8:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3029:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 536,
                  "nodeType": "ExpressionStatement",
                  "src": "3029:31:1"
                },
                {
                  "expression": {
                    "id": 545,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 537,
                        "name": "new_request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "3066:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_request_$171_memory_ptr",
                          "typeString": "struct AcriaNode.request memory"
                        }
                      },
                      "id": 539,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "id",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 162,
                      "src": "3066:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 542,
                            "name": "requests",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 213,
                            "src": "3090:8:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_request_$171_storage_$dyn_storage",
                              "typeString": "struct AcriaNode.request storage ref[] storage ref"
                            }
                          },
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3090:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3083:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 540,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3083:6:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 544,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3083:23:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3066:40:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 546,
                  "nodeType": "ExpressionStatement",
                  "src": "3066:40:1"
                },
                {
                  "expression": {
                    "id": 554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 547,
                        "name": "new_request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "3112:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_request_$171_memory_ptr",
                          "typeString": "struct AcriaNode.request memory"
                        }
                      },
                      "id": 549,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "max_gas",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 164,
                      "src": "3112:19:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 552,
                          "name": "max_gas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 465,
                          "src": "3141:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "id": 551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3134:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_uint32_$",
                          "typeString": "type(uint32)"
                        },
                        "typeName": {
                          "id": 550,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "3134:6:1",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3134:15:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      }
                    },
                    "src": "3112:37:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "id": 555,
                  "nodeType": "ExpressionStatement",
                  "src": "3112:37:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 558,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 556,
                      "name": "_data",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 467,
                      "src": "3158:5:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 557,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3167:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3158:10:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 565,
                  "nodeType": "IfStatement",
                  "src": "3155:44:1",
                  "trueBody": {
                    "expression": {
                      "id": 563,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "expression": {
                          "id": 559,
                          "name": "new_request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 501,
                          "src": "3175:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_request_$171_memory_ptr",
                            "typeString": "struct AcriaNode.request memory"
                          }
                        },
                        "id": 561,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 168,
                        "src": "3175:16:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 562,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 467,
                        "src": "3194:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3175:24:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 564,
                    "nodeType": "ExpressionStatement",
                    "src": "3175:24:1"
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 566,
                      "name": "_data_passthrough",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 469,
                      "src": "3208:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 567,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3229:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3208:22:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 575,
                  "nodeType": "IfStatement",
                  "src": "3205:80:1",
                  "trueBody": {
                    "expression": {
                      "id": 573,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "expression": {
                          "id": 569,
                          "name": "new_request",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 501,
                          "src": "3237:11:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_request_$171_memory_ptr",
                            "typeString": "struct AcriaNode.request memory"
                          }
                        },
                        "id": 571,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": true,
                        "memberName": "data_passthrough",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 170,
                        "src": "3237:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "id": 572,
                        "name": "_data_passthrough",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 469,
                        "src": "3268:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3237:48:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 574,
                    "nodeType": "ExpressionStatement",
                    "src": "3237:48:1"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 579,
                        "name": "new_request",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 501,
                        "src": "3305:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_request_$171_memory_ptr",
                          "typeString": "struct AcriaNode.request memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_request_$171_memory_ptr",
                          "typeString": "struct AcriaNode.request memory"
                        }
                      ],
                      "expression": {
                        "id": 576,
                        "name": "requests",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 213,
                        "src": "3291:8:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_request_$171_storage_$dyn_storage",
                          "typeString": "struct AcriaNode.request storage ref[] storage ref"
                        }
                      },
                      "id": 578,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3291:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_request_$171_storage_$dyn_storage_ptr_$_t_struct$_request_$171_storage_$returns$__$bound_to$_t_array$_t_struct$_request_$171_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct AcriaNode.request storage ref[] storage pointer,struct AcriaNode.request storage ref)"
                      }
                    },
                    "id": 580,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3291:26:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 581,
                  "nodeType": "ExpressionStatement",
                  "src": "3291:26:1"
                }
              ]
            },
            "functionSelector": "70762d2f",
            "id": 583,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "create_request_with_data",
            "nameLocation": "2568:24:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 470,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 459,
                  "mutability": "mutable",
                  "name": "_requestID",
                  "nameLocation": "2600:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "2593:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes8",
                    "typeString": "bytes8"
                  },
                  "typeName": {
                    "id": 458,
                    "name": "bytes8",
                    "nodeType": "ElementaryTypeName",
                    "src": "2593:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes8",
                      "typeString": "bytes8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 461,
                  "mutability": "mutable",
                  "name": "callback",
                  "nameLocation": "2620:8:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "2612:16:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2612:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 463,
                  "mutability": "mutable",
                  "name": "_expire",
                  "nameLocation": "2638:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "2630:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2630:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 465,
                  "mutability": "mutable",
                  "name": "max_gas",
                  "nameLocation": "2654:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "2647:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 464,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2647:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 467,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "2671:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "2663:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 466,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2663:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 469,
                  "mutability": "mutable",
                  "name": "_data_passthrough",
                  "nameLocation": "2686:17:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 583,
                  "src": "2678:25:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 468,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2678:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2592:112:1"
            },
            "returnParameters": {
              "id": 471,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2720:0:1"
            },
            "scope": 1331,
            "src": "2559:763:1",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 602,
              "nodeType": "Block",
              "src": "3368:81:1",
              "statements": [
                {
                  "assignments": [
                    589
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 589,
                      "mutability": "mutable",
                      "name": "w",
                      "nameLocation": "3381:1:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 602,
                      "src": "3373:9:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 588,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3373:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 591,
                  "initialValue": {
                    "id": 590,
                    "name": "withdrawable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 219,
                    "src": "3385:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3373:24:1"
                },
                {
                  "expression": {
                    "id": 594,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 592,
                      "name": "withdrawable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 219,
                      "src": "3402:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3417:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3402:16:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 595,
                  "nodeType": "ExpressionStatement",
                  "src": "3402:16:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 599,
                        "name": "w",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 589,
                        "src": "3442:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 596,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 207,
                        "src": "3427:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 598,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "3427:14:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3427:17:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 601,
                  "nodeType": "ExpressionStatement",
                  "src": "3427:17:1"
                }
              ]
            },
            "functionSelector": "3ccfd60b",
            "id": 603,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 586,
                "modifierName": {
                  "id": 585,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 277,
                  "src": "3358:10:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "3358:10:1"
              }
            ],
            "name": "withdraw",
            "nameLocation": "3340:8:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3348:2:1"
            },
            "returnParameters": {
              "id": 587,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3368:0:1"
            },
            "scope": 1331,
            "src": "3331:118:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 702,
              "nodeType": "Block",
              "src": "3522:700:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 611,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "3535:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "3535:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 613,
                          "name": "token_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 205,
                          "src": "3549:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "3535:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e697469617465642062792077726f6e6720636f6e7472616374",
                        "id": 615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3565:29:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbfd882a5f906bc1e2a58014e797c4757859aa3a7f45f2a093719e415df7b82d",
                          "typeString": "literal_string \"Initiated by wrong contract\""
                        },
                        "value": "Initiated by wrong contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbfd882a5f906bc1e2a58014e797c4757859aa3a7f45f2a093719e415df7b82d",
                          "typeString": "literal_string \"Initiated by wrong contract\""
                        }
                      ],
                      "id": 610,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3527:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3527:68:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 617,
                  "nodeType": "ExpressionStatement",
                  "src": "3527:68:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 623,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 619,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 231,
                            "src": "3608:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 621,
                          "indexExpression": {
                            "id": 620,
                            "name": "initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 605,
                            "src": "3615:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3608:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3629:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3608:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "416c7265616479207374616b696e67",
                        "id": 624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3632:17:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe",
                          "typeString": "literal_string \"Already staking\""
                        },
                        "value": "Already staking"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6484e2602344143d38b0f6044478ddd9128a019aabb51146650cc995fb45b4fe",
                          "typeString": "literal_string \"Already staking\""
                        }
                      ],
                      "id": 618,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3600:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3600:50:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 626,
                  "nodeType": "ExpressionStatement",
                  "src": "3600:50:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 630,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 628,
                          "name": "balance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 607,
                          "src": "3663:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 629,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3673:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "3663:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f20546f6b656e73",
                        "id": 631,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3676:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d6fa8b8442f9058e50b664d18540e143c78a9a9ff14843106c446fd74141c4a1",
                          "typeString": "literal_string \"No Tokens\""
                        },
                        "value": "No Tokens"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d6fa8b8442f9058e50b664d18540e143c78a9a9ff14843106c446fd74141c4a1",
                          "typeString": "literal_string \"No Tokens\""
                        }
                      ],
                      "id": 627,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3655:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3655:33:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 633,
                  "nodeType": "ExpressionStatement",
                  "src": "3655:33:1"
                },
                {
                  "assignments": [
                    635
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 635,
                      "mutability": "mutable",
                      "name": "join_period",
                      "nameLocation": "3705:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 702,
                      "src": "3697:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 634,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3697:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 642,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 641,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 636,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "3719:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "3719:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 638,
                        "name": "period_interval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "3732:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "3719:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3748:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "3719:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3697:52:1"
                },
                {
                  "expression": {
                    "id": 647,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 643,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 231,
                        "src": "3758:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 645,
                      "indexExpression": {
                        "id": 644,
                        "name": "initiator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "3765:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3758:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 646,
                      "name": "join_period",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 635,
                      "src": "3778:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3758:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 648,
                  "nodeType": "ExpressionStatement",
                  "src": "3758:31:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 653,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 649,
                        "name": "period_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "3797:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 651,
                      "indexExpression": {
                        "id": 650,
                        "name": "join_period",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 635,
                        "src": "3811:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "3797:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 652,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3827:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3797:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 672,
                  "nodeType": "IfStatement",
                  "src": "3794:183:1",
                  "trueBody": {
                    "id": 671,
                    "nodeType": "Block",
                    "src": "3829:148:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 660,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 656,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 654,
                              "name": "last_staker_added",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 238,
                              "src": "3838:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 655,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3859:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "3838:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 659,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 657,
                              "name": "last_staker_added",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 238,
                              "src": "3864:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 658,
                              "name": "join_period",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 635,
                              "src": "3885:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "3864:32:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "3838:58:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 670,
                        "nodeType": "IfStatement",
                        "src": "3835:137:1",
                        "trueBody": {
                          "id": 669,
                          "nodeType": "Block",
                          "src": "3897:75:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 667,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 661,
                                    "name": "period_staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 227,
                                    "src": "3904:13:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 663,
                                  "indexExpression": {
                                    "id": 662,
                                    "name": "join_period",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 635,
                                    "src": "3918:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "3904:26:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 664,
                                    "name": "period_staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 227,
                                    "src": "3933:13:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 666,
                                  "indexExpression": {
                                    "id": 665,
                                    "name": "last_staker_added",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 238,
                                    "src": "3947:17:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "3933:32:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3904:61:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 668,
                              "nodeType": "ExpressionStatement",
                              "src": "3904:61:1"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    674
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 674,
                      "mutability": "mutable",
                      "name": "bal",
                      "nameLocation": "3993:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 702,
                      "src": "3985:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 673,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3985:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 676,
                  "initialValue": {
                    "id": 675,
                    "name": "balance",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 607,
                    "src": "3999:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3985:21:1"
                },
                {
                  "expression": {
                    "id": 681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 677,
                        "name": "period_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "4011:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 679,
                      "indexExpression": {
                        "id": 678,
                        "name": "join_period",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 635,
                        "src": "4025:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4011:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 680,
                      "name": "bal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 674,
                      "src": "4041:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4011:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 682,
                  "nodeType": "ExpressionStatement",
                  "src": "4011:33:1"
                },
                {
                  "expression": {
                    "id": 687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 683,
                        "name": "staker_stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "4049:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 685,
                      "indexExpression": {
                        "id": 684,
                        "name": "initiator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 605,
                        "src": "4062:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "4049:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 686,
                      "name": "bal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 674,
                      "src": "4075:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4049:29:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 688,
                  "nodeType": "ExpressionStatement",
                  "src": "4049:29:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 691,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 689,
                      "name": "last_staker_added",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 238,
                      "src": "4090:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 690,
                      "name": "join_period",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 635,
                      "src": "4111:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4090:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 701,
                  "nodeType": "IfStatement",
                  "src": "4087:131:1",
                  "trueBody": {
                    "id": 700,
                    "nodeType": "Block",
                    "src": "4123:95:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 694,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 692,
                            "name": "previous_last_staker_added",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 241,
                            "src": "4129:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 693,
                            "name": "last_staker_added",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 238,
                            "src": "4158:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4129:46:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 695,
                        "nodeType": "ExpressionStatement",
                        "src": "4129:46:1"
                      },
                      {
                        "expression": {
                          "id": 698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 696,
                            "name": "last_staker_added",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 238,
                            "src": "4181:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 697,
                            "name": "join_period",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 635,
                            "src": "4201:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4181:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 699,
                        "nodeType": "ExpressionStatement",
                        "src": "4181:31:1"
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "e1932538",
            "id": 703,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "start_stake",
            "nameLocation": "3467:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 605,
                  "mutability": "mutable",
                  "name": "initiator",
                  "nameLocation": "3487:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "3479:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 604,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3479:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 607,
                  "mutability": "mutable",
                  "name": "balance",
                  "nameLocation": "3506:7:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 703,
                  "src": "3498:15:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 606,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3498:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3478:36:1"
            },
            "returnParameters": {
              "id": 609,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3522:0:1"
            },
            "scope": 1331,
            "src": "3458:764:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 727,
              "nodeType": "Block",
              "src": "4288:122:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 708,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4296:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 709,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "4296:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 710,
                          "name": "period_interval",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 244,
                          "src": "4309:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4296:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4325:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "4296:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "baseExpression": {
                        "id": 714,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 231,
                        "src": "4330:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 716,
                      "indexExpression": {
                        "id": 715,
                        "name": "initiator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 705,
                        "src": "4337:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4330:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4296:51:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 722,
                  "nodeType": "IfStatement",
                  "src": "4293:84:1",
                  "trueBody": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 719,
                          "name": "initiator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 705,
                          "src": "4367:9:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 718,
                        "name": "payout_stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1059,
                        "src": "4353:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address)"
                        }
                      },
                      "id": 720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4353:24:1",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$__$",
                        "typeString": "tuple()"
                      }
                    },
                    "id": 721,
                    "nodeType": "ExpressionStatement",
                    "src": "4353:24:1"
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 724,
                        "name": "initiator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 705,
                        "src": "4395:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 723,
                      "name": "cancel_stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 907,
                      "src": "4382:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 725,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4382:23:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 726,
                  "nodeType": "ExpressionStatement",
                  "src": "4382:23:1"
                }
              ]
            },
            "functionSelector": "7568e9d2",
            "id": 728,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancel_stake_withdraw",
            "nameLocation": "4240:21:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 706,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 705,
                  "mutability": "mutable",
                  "name": "initiator",
                  "nameLocation": "4270:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 728,
                  "src": "4262:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 704,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4262:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4261:19:1"
            },
            "returnParameters": {
              "id": 707,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4288:0:1"
            },
            "scope": 1331,
            "src": "4231:179:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 906,
              "nodeType": "Block",
              "src": "4467:1267:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 734,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4480:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4480:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 736,
                          "name": "token_contract",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 205,
                          "src": "4494:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4480:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 733,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4472:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4472:37:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 739,
                  "nodeType": "ExpressionStatement",
                  "src": "4472:37:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 741,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 231,
                            "src": "4522:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 743,
                          "indexExpression": {
                            "id": 742,
                            "name": "initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 730,
                            "src": "4529:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4522:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4543:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "4522:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 740,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4514:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 746,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4514:31:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 747,
                  "nodeType": "ExpressionStatement",
                  "src": "4514:31:1"
                },
                {
                  "assignments": [
                    749
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 749,
                      "mutability": "mutable",
                      "name": "join_period",
                      "nameLocation": "4562:11:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 906,
                      "src": "4554:19:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 748,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4554:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 756,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 755,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 753,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 750,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4576:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 751,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "4576:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 752,
                        "name": "period_interval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "4589:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "4576:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 754,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4605:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "4576:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4554:52:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 757,
                        "name": "period_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "4618:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 762,
                      "indexExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 761,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 758,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "4632:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 759,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "4632:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 760,
                          "name": "period_interval",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 244,
                          "src": "4645:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "4632:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "4618:43:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4665:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "4618:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 804,
                  "nodeType": "IfStatement",
                  "src": "4615:392:1",
                  "trueBody": {
                    "id": 803,
                    "nodeType": "Block",
                    "src": "4667:340:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 767,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 765,
                            "name": "last_staker_added",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 238,
                            "src": "4676:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 766,
                            "name": "join_period",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 749,
                            "src": "4697:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4676:32:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 801,
                          "nodeType": "Block",
                          "src": "4869:133:1",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 787,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 785,
                                  "name": "last_staker_added",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 238,
                                  "src": "4879:17:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 786,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4900:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "4879:22:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 800,
                              "nodeType": "IfStatement",
                              "src": "4876:120:1",
                              "trueBody": {
                                "id": 799,
                                "nodeType": "Block",
                                "src": "4902:94:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 797,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 788,
                                          "name": "period_staker",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 227,
                                          "src": "4910:13:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                            "typeString": "mapping(uint256 => uint256)"
                                          }
                                        },
                                        "id": 793,
                                        "indexExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 792,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 789,
                                              "name": "block",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -4,
                                              "src": "4924:5:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_block",
                                                "typeString": "block"
                                              }
                                            },
                                            "id": 790,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "number",
                                            "nodeType": "MemberAccess",
                                            "src": "4924:12:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "/",
                                          "rightExpression": {
                                            "id": 791,
                                            "name": "period_interval",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 244,
                                            "src": "4937:15:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "4924:28:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "4910:43:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "id": 794,
                                          "name": "period_staker",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 227,
                                          "src": "4956:13:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                            "typeString": "mapping(uint256 => uint256)"
                                          }
                                        },
                                        "id": 796,
                                        "indexExpression": {
                                          "id": 795,
                                          "name": "last_staker_added",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 238,
                                          "src": "4970:17:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4956:32:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4910:78:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 798,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4910:78:1"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 802,
                        "nodeType": "IfStatement",
                        "src": "4673:329:1",
                        "trueBody": {
                          "id": 784,
                          "nodeType": "Block",
                          "src": "4709:151:1",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 770,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 768,
                                  "name": "previous_last_staker_added",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 241,
                                  "src": "4719:26:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 769,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4749:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "4719:31:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 783,
                              "nodeType": "IfStatement",
                              "src": "4716:138:1",
                              "trueBody": {
                                "id": 782,
                                "nodeType": "Block",
                                "src": "4751:103:1",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 780,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "id": 771,
                                          "name": "period_staker",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 227,
                                          "src": "4759:13:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                            "typeString": "mapping(uint256 => uint256)"
                                          }
                                        },
                                        "id": 776,
                                        "indexExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 775,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "id": 772,
                                              "name": "block",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -4,
                                              "src": "4773:5:1",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_block",
                                                "typeString": "block"
                                              }
                                            },
                                            "id": 773,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "number",
                                            "nodeType": "MemberAccess",
                                            "src": "4773:12:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "/",
                                          "rightExpression": {
                                            "id": 774,
                                            "name": "period_interval",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 244,
                                            "src": "4786:15:1",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "src": "4773:28:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "4759:43:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "id": 777,
                                          "name": "period_staker",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 227,
                                          "src": "4805:13:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                            "typeString": "mapping(uint256 => uint256)"
                                          }
                                        },
                                        "id": 779,
                                        "indexExpression": {
                                          "id": 778,
                                          "name": "previous_last_staker_added",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 241,
                                          "src": "4819:26:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "4805:41:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4759:87:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 781,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4759:87:1"
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 805,
                        "name": "period_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "5014:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 807,
                      "indexExpression": {
                        "id": 806,
                        "name": "join_period",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 749,
                        "src": "5028:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5014:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 808,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5044:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5014:31:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 828,
                  "nodeType": "IfStatement",
                  "src": "5011:183:1",
                  "trueBody": {
                    "id": 827,
                    "nodeType": "Block",
                    "src": "5046:148:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 812,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 810,
                              "name": "last_staker_added",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 238,
                              "src": "5055:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 811,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5076:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "5055:22:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 813,
                              "name": "last_staker_added",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 238,
                              "src": "5081:17:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "!=",
                            "rightExpression": {
                              "id": 814,
                              "name": "join_period",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 749,
                              "src": "5102:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "5081:32:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "5055:58:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 826,
                        "nodeType": "IfStatement",
                        "src": "5052:137:1",
                        "trueBody": {
                          "id": 825,
                          "nodeType": "Block",
                          "src": "5114:75:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 823,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 817,
                                    "name": "period_staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 227,
                                    "src": "5121:13:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 819,
                                  "indexExpression": {
                                    "id": 818,
                                    "name": "join_period",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 749,
                                    "src": "5135:11:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5121:26:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 820,
                                    "name": "period_staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 227,
                                    "src": "5150:13:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 822,
                                  "indexExpression": {
                                    "id": 821,
                                    "name": "last_staker_added",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 238,
                                    "src": "5164:17:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5150:32:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5121:61:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 824,
                              "nodeType": "ExpressionStatement",
                              "src": "5121:61:1"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 829,
                      "name": "last_staker_added",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 238,
                      "src": "5205:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 830,
                      "name": "join_period",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 749,
                      "src": "5226:11:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5205:32:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 841,
                  "nodeType": "IfStatement",
                  "src": "5202:131:1",
                  "trueBody": {
                    "id": 840,
                    "nodeType": "Block",
                    "src": "5238:95:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 832,
                            "name": "previous_last_staker_added",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 241,
                            "src": "5244:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 833,
                            "name": "last_staker_added",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 238,
                            "src": "5273:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5244:46:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 835,
                        "nodeType": "ExpressionStatement",
                        "src": "5244:46:1"
                      },
                      {
                        "expression": {
                          "id": 838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 836,
                            "name": "last_staker_added",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 238,
                            "src": "5296:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 837,
                            "name": "join_period",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 749,
                            "src": "5316:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5296:31:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 839,
                        "nodeType": "ExpressionStatement",
                        "src": "5296:31:1"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    843
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 843,
                      "mutability": "mutable",
                      "name": "bal",
                      "nameLocation": "5349:3:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 906,
                      "src": "5341:11:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 842,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5341:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 847,
                  "initialValue": {
                    "baseExpression": {
                      "id": 844,
                      "name": "staker_stake",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 235,
                      "src": "5355:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 846,
                    "indexExpression": {
                      "id": 845,
                      "name": "initiator",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 730,
                      "src": "5368:9:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5355:23:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5341:37:1"
                },
                {
                  "expression": {
                    "id": 852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 848,
                        "name": "period_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "5383:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 850,
                      "indexExpression": {
                        "id": 849,
                        "name": "join_period",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 749,
                        "src": "5397:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5383:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "-=",
                    "rightHandSide": {
                      "id": 851,
                      "name": "bal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 843,
                      "src": "5413:3:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5383:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 853,
                  "nodeType": "ExpressionStatement",
                  "src": "5383:33:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 854,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 231,
                        "src": "5424:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 856,
                      "indexExpression": {
                        "id": 855,
                        "name": "initiator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 730,
                        "src": "5431:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5424:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 857,
                        "name": "join_period",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 749,
                        "src": "5445:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5457:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "5445:13:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5424:34:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 893,
                  "nodeType": "IfStatement",
                  "src": "5421:243:1",
                  "trueBody": {
                    "id": 892,
                    "nodeType": "Block",
                    "src": "5459:205:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 867,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 861,
                              "name": "period_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 227,
                              "src": "5465:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 865,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 862,
                                "name": "join_period",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 749,
                                "src": "5479:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 863,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5491:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "5479:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5465:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 866,
                            "name": "bal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 843,
                            "src": "5497:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5465:35:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 868,
                        "nodeType": "ExpressionStatement",
                        "src": "5465:35:1"
                      },
                      {
                        "expression": {
                          "id": 873,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 869,
                            "name": "previous_last_staker_added",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 241,
                            "src": "5506:26:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 872,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 870,
                              "name": "join_period",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 749,
                              "src": "5535:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 871,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5547:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "5535:13:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5506:42:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 874,
                        "nodeType": "ExpressionStatement",
                        "src": "5506:42:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 875,
                              "name": "period_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 227,
                              "src": "5562:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 879,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 878,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 876,
                                "name": "join_period",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 749,
                                "src": "5576:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 877,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5588:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "5576:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5562:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 880,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5594:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5562:33:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 891,
                        "nodeType": "IfStatement",
                        "src": "5559:100:1",
                        "trueBody": {
                          "id": 890,
                          "nodeType": "Block",
                          "src": "5596:63:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 888,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 882,
                                  "name": "withdrawable",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 219,
                                  "src": "5603:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "+=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 883,
                                    "name": "withdrawable_stake",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 223,
                                    "src": "5619:18:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 887,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 886,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 884,
                                      "name": "join_period",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 749,
                                      "src": "5638:11:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 885,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5650:1:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "5638:13:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5619:33:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5603:49:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 889,
                              "nodeType": "ExpressionStatement",
                              "src": "5603:49:1"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 894,
                        "name": "staker_stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 235,
                        "src": "5668:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 896,
                      "indexExpression": {
                        "id": 895,
                        "name": "initiator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 730,
                        "src": "5681:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5668:23:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5694:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5668:27:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 899,
                  "nodeType": "ExpressionStatement",
                  "src": "5668:27:1"
                },
                {
                  "expression": {
                    "id": 904,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 900,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 231,
                        "src": "5704:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 902,
                      "indexExpression": {
                        "id": 901,
                        "name": "initiator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 730,
                        "src": "5711:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "5704:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30",
                      "id": 903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5724:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5704:21:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 905,
                  "nodeType": "ExpressionStatement",
                  "src": "5704:21:1"
                }
              ]
            },
            "functionSelector": "e0416179",
            "id": 907,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "cancel_stake",
            "nameLocation": "4428:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 731,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 730,
                  "mutability": "mutable",
                  "name": "initiator",
                  "nameLocation": "4449:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 907,
                  "src": "4441:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 729,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4441:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4440:19:1"
            },
            "returnParameters": {
              "id": 732,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4467:0:1"
            },
            "scope": 1331,
            "src": "4419:1315:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 982,
              "nodeType": "Block",
              "src": "5825:466:1",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 916,
                        "name": "period_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "5833:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 918,
                      "indexExpression": {
                        "id": 917,
                        "name": "period",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 909,
                        "src": "5847:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5833:21:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 919,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5858:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5833:26:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 941,
                  "nodeType": "IfStatement",
                  "src": "5830:134:1",
                  "trueBody": {
                    "id": 940,
                    "nodeType": "Block",
                    "src": "5860:104:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 921,
                              "name": "period_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 227,
                              "src": "5869:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 925,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 924,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 922,
                                "name": "period",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 909,
                                "src": "5883:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 923,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5890:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "5883:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5869:23:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 926,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5896:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "5869:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 939,
                        "nodeType": "IfStatement",
                        "src": "5866:93:1",
                        "trueBody": {
                          "id": 938,
                          "nodeType": "Block",
                          "src": "5898:61:1",
                          "statements": [
                            {
                              "expression": {
                                "id": 936,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 928,
                                    "name": "period_staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 227,
                                    "src": "5905:13:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 930,
                                  "indexExpression": {
                                    "id": 929,
                                    "name": "period",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 909,
                                    "src": "5919:6:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5905:21:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "baseExpression": {
                                    "id": 931,
                                    "name": "period_staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 227,
                                    "src": "5929:13:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                      "typeString": "mapping(uint256 => uint256)"
                                    }
                                  },
                                  "id": 935,
                                  "indexExpression": {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 934,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 932,
                                      "name": "period",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 909,
                                      "src": "5943:6:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "-",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 933,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "5950:1:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "5943:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5929:23:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5905:47:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 937,
                              "nodeType": "ExpressionStatement",
                              "src": "5905:47:1"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 942,
                        "name": "withdrawable_stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 223,
                        "src": "5975:18:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 944,
                      "indexExpression": {
                        "id": 943,
                        "name": "period",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 909,
                        "src": "5994:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "5975:26:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 945,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6004:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5975:30:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 980,
                    "nodeType": "Block",
                    "src": "6267:20:1",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "30",
                          "id": 978,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6280:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "functionReturnParameters": 915,
                        "id": 979,
                        "nodeType": "Return",
                        "src": "6273:8:1"
                      }
                    ]
                  },
                  "id": 981,
                  "nodeType": "IfStatement",
                  "src": "5972:315:1",
                  "trueBody": {
                    "id": 977,
                    "nodeType": "Block",
                    "src": "6006:253:1",
                    "statements": [
                      {
                        "assignments": [
                          948
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 948,
                            "mutability": "mutable",
                            "name": "user_stake",
                            "nameLocation": "6020:10:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 977,
                            "src": "6012:18:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 947,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6012:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 952,
                        "initialValue": {
                          "baseExpression": {
                            "id": 949,
                            "name": "staker_stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 235,
                            "src": "6033:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 951,
                          "indexExpression": {
                            "id": 950,
                            "name": "initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 911,
                            "src": "6046:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6033:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6012:44:1"
                      },
                      {
                        "assignments": [
                          954
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 954,
                            "mutability": "mutable",
                            "name": "payout",
                            "nameLocation": "6075:6:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 977,
                            "src": "6067:14:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 953,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6067:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 964,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 963,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 959,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 955,
                                "name": "withdrawable_stake",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 223,
                                "src": "6084:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 957,
                              "indexExpression": {
                                "id": 956,
                                "name": "period",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 909,
                                "src": "6103:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6084:26:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "id": 958,
                              "name": "user_stake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 948,
                              "src": "6111:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6084:37:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "/",
                          "rightExpression": {
                            "baseExpression": {
                              "id": 960,
                              "name": "period_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 227,
                              "src": "6122:13:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                "typeString": "mapping(uint256 => uint256)"
                              }
                            },
                            "id": 962,
                            "indexExpression": {
                              "id": 961,
                              "name": "period",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 909,
                              "src": "6136:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6122:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6084:59:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6067:76:1"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 966,
                              "name": "initiator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 911,
                              "src": "6168:9:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 967,
                              "name": "payout",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 954,
                              "src": "6179:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 968,
                              "name": "period",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 909,
                              "src": "6187:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 969,
                              "name": "user_stake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 948,
                              "src": "6195:10:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 970,
                                "name": "period_staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 227,
                                "src": "6207:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 972,
                              "indexExpression": {
                                "id": 971,
                                "name": "period",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 909,
                                "src": "6221:6:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6207:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 965,
                            "name": "StakePaidOut",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 203,
                            "src": "6155:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256,uint256,uint256,uint256)"
                            }
                          },
                          "id": 973,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6155:74:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 974,
                        "nodeType": "EmitStatement",
                        "src": "6150:79:1"
                      },
                      {
                        "expression": {
                          "id": 975,
                          "name": "payout",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 954,
                          "src": "6247:6:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 915,
                        "id": 976,
                        "nodeType": "Return",
                        "src": "6240:13:1"
                      }
                    ]
                  }
                }
              ]
            },
            "id": 983,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payout_stake",
            "nameLocation": "5752:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 912,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 909,
                  "mutability": "mutable",
                  "name": "period",
                  "nameLocation": "5773:6:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 983,
                  "src": "5765:14:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5765:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 911,
                  "mutability": "mutable",
                  "name": "initiator",
                  "nameLocation": "5789:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 983,
                  "src": "5781:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 910,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5781:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5764:35:1"
            },
            "returnParameters": {
              "id": 915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 914,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 983,
                  "src": "5817:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 913,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5817:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5816:9:1"
            },
            "scope": 1331,
            "src": "5743:548:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 1058,
              "nodeType": "Block",
              "src": "6349:420:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 993,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 989,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 231,
                            "src": "6362:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 991,
                          "indexExpression": {
                            "id": 990,
                            "name": "initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "6369:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6362:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 992,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6383:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "6362:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f742061207374616b6572",
                        "id": 994,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6386:14:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bea05e3d5fa8586f87017e835c693322fbdc95612106aac6dacf94aa665b6993",
                          "typeString": "literal_string \"Not a staker\""
                        },
                        "value": "Not a staker"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bea05e3d5fa8586f87017e835c693322fbdc95612106aac6dacf94aa665b6993",
                          "typeString": "literal_string \"Not a staker\""
                        }
                      ],
                      "id": 988,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6354:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6354:47:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 996,
                  "nodeType": "ExpressionStatement",
                  "src": "6354:47:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1003,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 998,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "6414:5:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 999,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "number",
                              "nodeType": "MemberAccess",
                              "src": "6414:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "id": 1000,
                              "name": "period_interval",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 244,
                              "src": "6427:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6414:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 1002,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6443:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "6414:30:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 1004,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 231,
                            "src": "6448:6:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1006,
                          "indexExpression": {
                            "id": 1005,
                            "name": "initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "6455:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6448:17:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6414:51:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4e6f2066756c6c206369636c65207374616b6564",
                        "id": 1008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6467:22:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8f0b4dbe3a5a330452bab582f67a94ffd61ef18377326af9cf417801f0b7e39e",
                          "typeString": "literal_string \"No full cicle staked\""
                        },
                        "value": "No full cicle staked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8f0b4dbe3a5a330452bab582f67a94ffd61ef18377326af9cf417801f0b7e39e",
                          "typeString": "literal_string \"No full cicle staked\""
                        }
                      ],
                      "id": 997,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6406:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 1009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6406:84:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1010,
                  "nodeType": "ExpressionStatement",
                  "src": "6406:84:1"
                },
                {
                  "assignments": [
                    1012
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1012,
                      "mutability": "mutable",
                      "name": "total_payout",
                      "nameLocation": "6507:12:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1058,
                      "src": "6499:20:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 1011,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6499:7:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1014,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 1013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6522:1:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6499:24:1"
                },
                {
                  "body": {
                    "id": 1039,
                    "nodeType": "Block",
                    "src": "6605:54:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 1037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1032,
                            "name": "total_payout",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1012,
                            "src": "6611:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 1034,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1016,
                                "src": "6640:1:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              {
                                "id": 1035,
                                "name": "initiator",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 985,
                                "src": "6643:9:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 1033,
                              "name": "payout_stake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 983,
                              "src": "6627:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (uint256,address) returns (uint256)"
                              }
                            },
                            "id": 1036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6627:26:1",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6611:42:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1038,
                        "nodeType": "ExpressionStatement",
                        "src": "6611:42:1"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 1021,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1016,
                      "src": "6567:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<=",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1025,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1022,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6570:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "6570:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 1024,
                          "name": "period_interval",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 244,
                          "src": "6583:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6570:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "hexValue": "31",
                        "id": 1026,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6599:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "6570:30:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6567:33:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 1040,
                  "initializationExpression": {
                    "assignments": [
                      1016
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 1016,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6544:1:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1040,
                        "src": "6536:9:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1015,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6536:7:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 1020,
                    "initialValue": {
                      "baseExpression": {
                        "id": 1017,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 231,
                        "src": "6548:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1019,
                      "indexExpression": {
                        "id": 1018,
                        "name": "initiator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "6555:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6548:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6536:29:1"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 1030,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6601:3:1",
                      "subExpression": {
                        "id": 1029,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1016,
                        "src": "6601:1:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 1031,
                    "nodeType": "ExpressionStatement",
                    "src": "6601:3:1"
                  },
                  "nodeType": "ForStatement",
                  "src": "6532:127:1"
                },
                {
                  "expression": {
                    "id": 1048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1041,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 231,
                        "src": "6667:6:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 1043,
                      "indexExpression": {
                        "id": 1042,
                        "name": "initiator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 985,
                        "src": "6674:9:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6667:17:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 1047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 1044,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "6687:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "number",
                        "nodeType": "MemberAccess",
                        "src": "6687:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "/",
                      "rightExpression": {
                        "id": 1046,
                        "name": "period_interval",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 244,
                        "src": "6700:15:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "6687:28:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6667:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1049,
                  "nodeType": "ExpressionStatement",
                  "src": "6667:48:1"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 1055,
                        "name": "total_payout",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1012,
                        "src": "6751:12:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 1052,
                            "name": "initiator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 985,
                            "src": "6731:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 1051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6723:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 1050,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6723:8:1",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6723:18:1",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "id": 1054,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transfer",
                      "nodeType": "MemberAccess",
                      "src": "6723:27:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 1056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6723:41:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1057,
                  "nodeType": "ExpressionStatement",
                  "src": "6723:41:1"
                }
              ]
            },
            "functionSelector": "6dd4e3ac",
            "id": 1059,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "payout_stakes",
            "nameLocation": "6309:13:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 985,
                  "mutability": "mutable",
                  "name": "initiator",
                  "nameLocation": "6331:9:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1059,
                  "src": "6323:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 984,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6323:7:1",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6322:19:1"
            },
            "returnParameters": {
              "id": 987,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6349:0:1"
            },
            "scope": 1331,
            "src": "6300:469:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1311,
              "nodeType": "Block",
              "src": "6861:1833:1",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes8",
                          "typeString": "bytes8"
                        },
                        "id": 1076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 1071,
                              "name": "requests",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 213,
                              "src": "6880:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_request_$171_storage_$dyn_storage",
                                "typeString": "struct AcriaNode.request storage ref[] storage ref"
                              }
                            },
                            "id": 1073,
                            "indexExpression": {
                              "id": 1072,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1065,
                              "src": "6889:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6880:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_request_$171_storage",
                              "typeString": "struct AcriaNode.request storage ref"
                            }
                          },
                          "id": 1074,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "requestID",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 156,
                          "src": "6880:21:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes8",
                            "typeString": "bytes8"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1075,
                          "name": "_requestID",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1061,
                          "src": "6905:10:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes8",
                            "typeString": "bytes8"
                          }
                        },
                        "src": "6880:35:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1070,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6872:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6872:44:1",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1078,
                  "nodeType": "ExpressionStatement",
                  "src": "6872:44:1"
                },
                {
                  "assignments": [
                    1080
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 1080,
                      "mutability": "mutable",
                      "name": "staker_is_active",
                      "nameLocation": "6934:16:1",
                      "nodeType": "VariableDeclaration",
                      "scope": 1311,
                      "src": "6929:21:1",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 1079,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "6929:4:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 1082,
                  "initialValue": {
                    "hexValue": "66616c7365",
                    "id": 1081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "6953:5:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6929:29:1"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "id": 1083,
                        "name": "period_staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "6968:13:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1088,
                      "indexExpression": {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 1087,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1084,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "6982:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 1085,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "number",
                          "nodeType": "MemberAccess",
                          "src": "6982:12:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "/",
                        "rightExpression": {
                          "id": 1086,
                          "name": "period_interval",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 244,
                          "src": "6995:15:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "6982:28:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6968:43:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 1089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7015:1:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "6968:48:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1137,
                    "nodeType": "Block",
                    "src": "7372:35:1",
                    "statements": [
                      {
                        "expression": {
                          "id": 1135,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1133,
                            "name": "staker_is_active",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1080,
                            "src": "7378:16:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 1134,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7397:4:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "7378:23:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1136,
                        "nodeType": "ExpressionStatement",
                        "src": "7378:23:1"
                      }
                    ]
                  },
                  "id": 1138,
                  "nodeType": "IfStatement",
                  "src": "6965:442:1",
                  "trueBody": {
                    "id": 1132,
                    "nodeType": "Block",
                    "src": "7017:347:1",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1091,
                            "name": "last_staker_added",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 238,
                            "src": "7026:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1097,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1095,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1092,
                                  "name": "block",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -4,
                                  "src": "7047:5:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_block",
                                    "typeString": "block"
                                  }
                                },
                                "id": 1093,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "number",
                                "nodeType": "MemberAccess",
                                "src": "7047:12:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "/",
                              "rightExpression": {
                                "id": 1094,
                                "name": "period_interval",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 244,
                                "src": "7060:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7047:28:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "hexValue": "31",
                              "id": 1096,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7076:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1_by_1",
                                "typeString": "int_const 1"
                              },
                              "value": "1"
                            },
                            "src": "7047:30:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7026:51:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1130,
                          "nodeType": "Block",
                          "src": "7232:127:1",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1117,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1115,
                                  "name": "last_staker_added",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 238,
                                  "src": "7242:17:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1116,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7263:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "7242:22:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1129,
                              "nodeType": "IfStatement",
                              "src": "7239:114:1",
                              "trueBody": {
                                "id": 1128,
                                "nodeType": "Block",
                                "src": "7265:88:1",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1122,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "baseExpression": {
                                          "id": 1118,
                                          "name": "period_staker",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 227,
                                          "src": "7276:13:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                            "typeString": "mapping(uint256 => uint256)"
                                          }
                                        },
                                        "id": 1120,
                                        "indexExpression": {
                                          "id": 1119,
                                          "name": "last_staker_added",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 238,
                                          "src": "7290:17:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "7276:32:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "!=",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 1121,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7312:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "7276:37:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1127,
                                    "nodeType": "IfStatement",
                                    "src": "7273:72:1",
                                    "trueBody": {
                                      "expression": {
                                        "id": 1125,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 1123,
                                          "name": "staker_is_active",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1080,
                                          "src": "7322:16:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "hexValue": "74727565",
                                          "id": 1124,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "bool",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "7341:4:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "value": "true"
                                        },
                                        "src": "7322:23:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "id": 1126,
                                      "nodeType": "ExpressionStatement",
                                      "src": "7322:23:1"
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "id": 1131,
                        "nodeType": "IfStatement",
                        "src": "7023:336:1",
                        "trueBody": {
                          "id": 1114,
                          "nodeType": "Block",
                          "src": "7078:145:1",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1101,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1099,
                                  "name": "previous_last_staker_added",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 241,
                                  "src": "7088:26:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 1100,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "7118:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "7088:31:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1113,
                              "nodeType": "IfStatement",
                              "src": "7085:132:1",
                              "trueBody": {
                                "id": 1112,
                                "nodeType": "Block",
                                "src": "7120:97:1",
                                "statements": [
                                  {
                                    "condition": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 1106,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "baseExpression": {
                                          "id": 1102,
                                          "name": "period_staker",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 227,
                                          "src": "7131:13:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                            "typeString": "mapping(uint256 => uint256)"
                                          }
                                        },
                                        "id": 1104,
                                        "indexExpression": {
                                          "id": 1103,
                                          "name": "previous_last_staker_added",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 241,
                                          "src": "7145:26:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "7131:41:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "!=",
                                      "rightExpression": {
                                        "hexValue": "30",
                                        "id": 1105,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "7176:1:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "7131:46:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    "id": 1111,
                                    "nodeType": "IfStatement",
                                    "src": "7128:81:1",
                                    "trueBody": {
                                      "expression": {
                                        "id": 1109,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftHandSide": {
                                          "id": 1107,
                                          "name": "staker_is_active",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1080,
                                          "src": "7186:16:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          }
                                        },
                                        "nodeType": "Assignment",
                                        "operator": "=",
                                        "rightHandSide": {
                                          "hexValue": "74727565",
                                          "id": 1108,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "bool",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "7205:4:1",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bool",
                                            "typeString": "bool"
                                          },
                                          "value": "true"
                                        },
                                        "src": "7186:23:1",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        }
                                      },
                                      "id": 1110,
                                      "nodeType": "ExpressionStatement",
                                      "src": "7186:23:1"
                                    }
                                  }
                                ]
                              }
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 1145,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 1139,
                          "name": "requests",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 213,
                          "src": "7419:8:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_request_$171_storage_$dyn_storage",
                            "typeString": "struct AcriaNode.request storage ref[] storage ref"
                          }
                        },
                        "id": 1141,
                        "indexExpression": {
                          "id": 1140,
                          "name": "i",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1065,
                          "src": "7428:1:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7419:11:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_request_$171_storage",
                          "typeString": "struct AcriaNode.request storage ref"
                        }
                      },
                      "id": 1142,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expiration",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 160,
                      "src": "7419:22:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "expression": {
                        "id": 1143,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "7445:5:1",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 1144,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "number",
                      "nodeType": "MemberAccess",
                      "src": "7445:12:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "7419:38:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 1309,
                    "nodeType": "Block",
                    "src": "8498:188:1",
                    "statements": [
                      {
                        "condition": {
                          "id": 1283,
                          "name": "staker_is_active",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1080,
                          "src": "8509:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "expression": {
                            "id": 1301,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1296,
                              "name": "withdrawable",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 219,
                              "src": "8624:12:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "+=",
                            "rightHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1297,
                                  "name": "requests",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 213,
                                  "src": "8640:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_request_$171_storage_$dyn_storage",
                                    "typeString": "struct AcriaNode.request storage ref[] storage ref"
                                  }
                                },
                                "id": 1299,
                                "indexExpression": {
                                  "id": 1298,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1065,
                                  "src": "8649:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8640:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_request_$171_storage",
                                  "typeString": "struct AcriaNode.request storage ref"
                                }
                              },
                              "id": 1300,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "fee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 158,
                              "src": "8640:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "src": "8624:31:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1302,
                          "nodeType": "ExpressionStatement",
                          "src": "8624:31:1"
                        },
                        "id": 1303,
                        "nodeType": "IfStatement",
                        "src": "8506:149:1",
                        "trueBody": {
                          "expression": {
                            "id": 1294,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "baseExpression": {
                                "id": 1284,
                                "name": "withdrawable_stake",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 223,
                                "src": "8534:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 1289,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1288,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1285,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "8553:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1286,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "number",
                                  "nodeType": "MemberAccess",
                                  "src": "8553:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 1287,
                                  "name": "period_interval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 244,
                                  "src": "8566:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8553:28:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "8534:48:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "+=",
                            "rightHandSide": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1290,
                                  "name": "requests",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 213,
                                  "src": "8586:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_request_$171_storage_$dyn_storage",
                                    "typeString": "struct AcriaNode.request storage ref[] storage ref"
                                  }
                                },
                                "id": 1292,
                                "indexExpression": {
                                  "id": 1291,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1065,
                                  "src": "8595:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "8586:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_request_$171_storage",
                                  "typeString": "struct AcriaNode.request storage ref"
                                }
                              },
                              "id": 1293,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "fee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 158,
                              "src": "8586:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "src": "8534:67:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1295,
                          "nodeType": "ExpressionStatement",
                          "src": "8534:67:1"
                        }
                      },
                      {
                        "expression": {
                          "id": 1307,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "8663:18:1",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1304,
                              "name": "requests",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 213,
                              "src": "8670:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_request_$171_storage_$dyn_storage",
                                "typeString": "struct AcriaNode.request storage ref[] storage ref"
                              }
                            },
                            "id": 1306,
                            "indexExpression": {
                              "id": 1305,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1065,
                              "src": "8679:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8670:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_request_$171_storage",
                              "typeString": "struct AcriaNode.request storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1308,
                        "nodeType": "ExpressionStatement",
                        "src": "8663:18:1"
                      }
                    ]
                  },
                  "id": 1310,
                  "nodeType": "IfStatement",
                  "src": "7416:1270:1",
                  "trueBody": {
                    "id": 1282,
                    "nodeType": "Block",
                    "src": "7458:1033:1",
                    "statements": [
                      {
                        "assignments": [
                          1147
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1147,
                            "mutability": "mutable",
                            "name": "callback",
                            "nameLocation": "7474:8:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1282,
                            "src": "7466:16:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1146,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "7466:7:1",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1152,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 1148,
                              "name": "requests",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 213,
                              "src": "7485:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_request_$171_storage_$dyn_storage",
                                "typeString": "struct AcriaNode.request storage ref[] storage ref"
                              }
                            },
                            "id": 1150,
                            "indexExpression": {
                              "id": 1149,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1065,
                              "src": "7494:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7485:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_request_$171_storage",
                              "typeString": "struct AcriaNode.request storage ref"
                            }
                          },
                          "id": 1151,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "callback",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 166,
                          "src": "7485:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7466:39:1"
                      },
                      {
                        "assignments": [
                          1154
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1154,
                            "mutability": "mutable",
                            "name": "fee",
                            "nameLocation": "7521:3:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1282,
                            "src": "7513:11:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1153,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7513:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1163,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          },
                          "id": 1162,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 1160,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 1155,
                                  "name": "requests",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 213,
                                  "src": "7527:8:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_request_$171_storage_$dyn_storage",
                                    "typeString": "struct AcriaNode.request storage ref[] storage ref"
                                  }
                                },
                                "id": 1157,
                                "indexExpression": {
                                  "id": 1156,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1065,
                                  "src": "7536:1:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "7527:11:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_request_$171_storage",
                                  "typeString": "struct AcriaNode.request storage ref"
                                }
                              },
                              "id": 1158,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "fee",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 158,
                              "src": "7527:15:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "3130",
                              "id": 1159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7543:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "src": "7527:18:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "hexValue": "38",
                            "id": 1161,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7546:1:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_8_by_1",
                              "typeString": "int_const 8"
                            },
                            "value": "8"
                          },
                          "src": "7527:20:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7513:34:1"
                      },
                      {
                        "assignments": [
                          1165
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1165,
                            "mutability": "mutable",
                            "name": "max_gas",
                            "nameLocation": "7562:7:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1282,
                            "src": "7555:14:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            "typeName": {
                              "id": 1164,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "7555:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1170,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 1166,
                              "name": "requests",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 213,
                              "src": "7572:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_request_$171_storage_$dyn_storage",
                                "typeString": "struct AcriaNode.request storage ref[] storage ref"
                              }
                            },
                            "id": 1168,
                            "indexExpression": {
                              "id": 1167,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1065,
                              "src": "7581:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7572:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_request_$171_storage",
                              "typeString": "struct AcriaNode.request storage ref"
                            }
                          },
                          "id": 1169,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "max_gas",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 164,
                          "src": "7572:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7555:36:1"
                      },
                      {
                        "assignments": [
                          1172
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1172,
                            "mutability": "mutable",
                            "name": "data",
                            "nameLocation": "7607:4:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1282,
                            "src": "7599:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1171,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7599:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1177,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 1173,
                              "name": "requests",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 213,
                              "src": "7614:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_request_$171_storage_$dyn_storage",
                                "typeString": "struct AcriaNode.request storage ref[] storage ref"
                              }
                            },
                            "id": 1175,
                            "indexExpression": {
                              "id": 1174,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1065,
                              "src": "7623:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7614:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_request_$171_storage",
                              "typeString": "struct AcriaNode.request storage ref"
                            }
                          },
                          "id": 1176,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 168,
                          "src": "7614:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7599:31:1"
                      },
                      {
                        "assignments": [
                          1179
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1179,
                            "mutability": "mutable",
                            "name": "data_passthrough",
                            "nameLocation": "7646:16:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1282,
                            "src": "7638:24:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1178,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "7638:7:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1184,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 1180,
                              "name": "requests",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 213,
                              "src": "7665:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_request_$171_storage_$dyn_storage",
                                "typeString": "struct AcriaNode.request storage ref[] storage ref"
                              }
                            },
                            "id": 1182,
                            "indexExpression": {
                              "id": 1181,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1065,
                              "src": "7674:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "7665:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_request_$171_storage",
                              "typeString": "struct AcriaNode.request storage ref"
                            }
                          },
                          "id": 1183,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data_passthrough",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 170,
                          "src": "7665:28:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7638:55:1"
                      },
                      {
                        "condition": {
                          "id": 1185,
                          "name": "staker_is_active",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1080,
                          "src": "7711:16:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "expression": {
                            "id": 1207,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "id": 1200,
                              "name": "fee",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1154,
                              "src": "7829:3:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "+=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1206,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1201,
                                    "name": "requests",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 213,
                                    "src": "7836:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_request_$171_storage_$dyn_storage",
                                      "typeString": "struct AcriaNode.request storage ref[] storage ref"
                                    }
                                  },
                                  "id": 1203,
                                  "indexExpression": {
                                    "id": 1202,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1065,
                                    "src": "7845:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7836:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_request_$171_storage",
                                    "typeString": "struct AcriaNode.request storage ref"
                                  }
                                },
                                "id": 1204,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "fee",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 158,
                                "src": "7836:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 1205,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1154,
                                "src": "7854:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7836:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7829:28:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1208,
                          "nodeType": "ExpressionStatement",
                          "src": "7829:28:1"
                        },
                        "id": 1209,
                        "nodeType": "IfStatement",
                        "src": "7708:149:1",
                        "trueBody": {
                          "expression": {
                            "id": 1198,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "baseExpression": {
                                "id": 1186,
                                "name": "withdrawable_stake",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 223,
                                "src": "7736:18:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                                  "typeString": "mapping(uint256 => uint256)"
                                }
                              },
                              "id": 1191,
                              "indexExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1190,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 1187,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "7755:5:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 1188,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "number",
                                  "nodeType": "MemberAccess",
                                  "src": "7755:12:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "id": 1189,
                                  "name": "period_interval",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 244,
                                  "src": "7768:15:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "7755:28:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "7736:48:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "+=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 1192,
                                    "name": "requests",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 213,
                                    "src": "7788:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_request_$171_storage_$dyn_storage",
                                      "typeString": "struct AcriaNode.request storage ref[] storage ref"
                                    }
                                  },
                                  "id": 1194,
                                  "indexExpression": {
                                    "id": 1193,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1065,
                                    "src": "7797:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "7788:11:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_request_$171_storage",
                                    "typeString": "struct AcriaNode.request storage ref"
                                  }
                                },
                                "id": 1195,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "fee",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 158,
                                "src": "7788:15:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint64",
                                  "typeString": "uint64"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "id": 1196,
                                "name": "fee",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1154,
                                "src": "7806:3:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "7788:21:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "7736:73:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 1199,
                          "nodeType": "ExpressionStatement",
                          "src": "7736:73:1"
                        }
                      },
                      {
                        "expression": {
                          "id": 1212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1210,
                            "name": "withdrawable",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 219,
                            "src": "7881:12:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1211,
                            "name": "fee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1154,
                            "src": "7897:3:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7881:19:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1213,
                        "nodeType": "ExpressionStatement",
                        "src": "7881:19:1"
                      },
                      {
                        "expression": {
                          "id": 1217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "7915:18:1",
                          "subExpression": {
                            "baseExpression": {
                              "id": 1214,
                              "name": "requests",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 213,
                              "src": "7922:8:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_request_$171_storage_$dyn_storage",
                                "typeString": "struct AcriaNode.request storage ref[] storage ref"
                              }
                            },
                            "id": 1216,
                            "indexExpression": {
                              "id": 1215,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1065,
                              "src": "7931:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7922:11:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_request_$171_storage",
                              "typeString": "struct AcriaNode.request storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1218,
                        "nodeType": "ExpressionStatement",
                        "src": "7915:18:1"
                      },
                      {
                        "expression": {
                          "id": 1220,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "7941:19:1",
                          "subExpression": {
                            "id": 1219,
                            "name": "completedRequests",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "7941:17:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1221,
                        "nodeType": "ExpressionStatement",
                        "src": "7941:19:1"
                      },
                      {
                        "assignments": [
                          1223
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1223,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "7980:7:1",
                            "nodeType": "VariableDeclaration",
                            "scope": 1282,
                            "src": "7975:12:1",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 1222,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "7975:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1224,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "7975:12:1"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 1231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1225,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1172,
                              "src": "7998:4:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1226,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8006:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "7998:9:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 1230,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 1228,
                              "name": "data_passthrough",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1179,
                              "src": "8011:16:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 1229,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8031:1:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "8011:21:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "7998:34:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "expression": {
                            "id": 1260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "components": [
                                {
                                  "id": 1246,
                                  "name": "success",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1223,
                                  "src": "8161:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                null
                              ],
                              "id": 1247,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "TupleExpression",
                              "src": "8160:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$__$",
                                "typeString": "tuple(bool,)"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "76616c75655f63616c6c6261636b2875696e743235362c75696e743235362c75696e7432353629",
                                      "id": 1254,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8225:41:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_175fdc0c4b91c7c42513ccd11efdfbc07687bf0243757b0a21ea2bf98243a7a1",
                                        "typeString": "literal_string \"value_callback(uint256,uint256,uint256)\""
                                      },
                                      "value": "value_callback(uint256,uint256,uint256)"
                                    },
                                    {
                                      "id": 1255,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1063,
                                      "src": "8268:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 1256,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1172,
                                      "src": "8275:4:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 1257,
                                      "name": "data_passthrough",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1179,
                                      "src": "8281:16:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_175fdc0c4b91c7c42513ccd11efdfbc07687bf0243757b0a21ea2bf98243a7a1",
                                        "typeString": "literal_string \"value_callback(uint256,uint256,uint256)\""
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1252,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "8201:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 1253,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encodeWithSignature",
                                    "nodeType": "MemberAccess",
                                    "src": "8201:23:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (string memory) pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 1258,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8201:97:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1248,
                                    "name": "callback",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1147,
                                    "src": "8174:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 1249,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "call",
                                  "nodeType": "MemberAccess",
                                  "src": "8174:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "names": [
                                  "gas"
                                ],
                                "nodeType": "FunctionCallOptions",
                                "options": [
                                  {
                                    "id": 1250,
                                    "name": "max_gas",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1165,
                                    "src": "8192:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  }
                                ],
                                "src": "8174:26:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 1259,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8174:125:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "tuple(bool,bytes memory)"
                              }
                            },
                            "src": "8160:139:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1261,
                          "nodeType": "ExpressionStatement",
                          "src": "8160:139:1"
                        },
                        "id": 1262,
                        "nodeType": "IfStatement",
                        "src": "7995:304:1",
                        "trueBody": {
                          "expression": {
                            "id": 1244,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "components": [
                                {
                                  "id": 1232,
                                  "name": "success",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1223,
                                  "src": "8042:7:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                null
                              ],
                              "id": 1233,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "TupleExpression",
                              "src": "8041:11:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$__$",
                                "typeString": "tuple(bool,)"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "76616c75655f63616c6c6261636b2875696e7432353629",
                                      "id": 1240,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8106:25:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_27c1642ed50f29d9757be820c0e462f67742469bf94ca1953a512c1fc4f9a44f",
                                        "typeString": "literal_string \"value_callback(uint256)\""
                                      },
                                      "value": "value_callback(uint256)"
                                    },
                                    {
                                      "id": 1241,
                                      "name": "value",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1063,
                                      "src": "8133:5:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_27c1642ed50f29d9757be820c0e462f67742469bf94ca1953a512c1fc4f9a44f",
                                        "typeString": "literal_string \"value_callback(uint256)\""
                                      },
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "expression": {
                                      "id": 1238,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "8082:3:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 1239,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encodeWithSignature",
                                    "nodeType": "MemberAccess",
                                    "src": "8082:23:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function (string memory) pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 1242,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8082:57:1",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 1234,
                                    "name": "callback",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1147,
                                    "src": "8055:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "id": 1235,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "call",
                                  "nodeType": "MemberAccess",
                                  "src": "8055:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                    "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                  }
                                },
                                "id": 1237,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "names": [
                                  "gas"
                                ],
                                "nodeType": "FunctionCallOptions",
                                "options": [
                                  {
                                    "id": 1236,
                                    "name": "max_gas",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1165,
                                    "src": "8073:7:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint32",
                                      "typeString": "uint32"
                                    }
                                  }
                                ],
                                "src": "8055:26:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$gas",
                                  "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                                }
                              },
                              "id": 1243,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8055:85:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "tuple(bool,bytes memory)"
                              }
                            },
                            "src": "8041:99:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 1245,
                          "nodeType": "ExpressionStatement",
                          "src": "8041:99:1"
                        }
                      },
                      {
                        "condition": {
                          "id": 1264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "8318:8:1",
                          "subExpression": {
                            "id": 1263,
                            "name": "success",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1223,
                            "src": "8319:7:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 1280,
                          "nodeType": "Block",
                          "src": "8410:66:1",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1274,
                                    "name": "_requestID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1061,
                                    "src": "8438:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes8",
                                      "typeString": "bytes8"
                                    }
                                  },
                                  {
                                    "id": 1275,
                                    "name": "callback",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1147,
                                    "src": "8450:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1276,
                                    "name": "fee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1154,
                                    "src": "8460:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1277,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1065,
                                    "src": "8465:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes8",
                                      "typeString": "bytes8"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1273,
                                  "name": "RequestFilled",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 181,
                                  "src": "8424:13:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (bytes32,address,uint256,uint256)"
                                  }
                                },
                                "id": 1278,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8424:43:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1279,
                              "nodeType": "EmitStatement",
                              "src": "8419:48:1"
                            }
                          ]
                        },
                        "id": 1281,
                        "nodeType": "IfStatement",
                        "src": "8315:161:1",
                        "trueBody": {
                          "id": 1272,
                          "nodeType": "Block",
                          "src": "8328:71:1",
                          "statements": [
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "id": 1266,
                                    "name": "_requestID",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1061,
                                    "src": "8361:10:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes8",
                                      "typeString": "bytes8"
                                    }
                                  },
                                  {
                                    "id": 1267,
                                    "name": "callback",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1147,
                                    "src": "8373:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1268,
                                    "name": "fee",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1154,
                                    "src": "8383:3:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 1269,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1065,
                                    "src": "8388:1:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes8",
                                      "typeString": "bytes8"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 1265,
                                  "name": "RequestFilledError",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 191,
                                  "src": "8342:18:1",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (bytes32,address,uint256,uint256)"
                                  }
                                },
                                "id": 1270,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8342:48:1",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1271,
                              "nodeType": "EmitStatement",
                              "src": "8337:53:1"
                            }
                          ]
                        }
                      }
                    ]
                  }
                }
              ]
            },
            "functionSelector": "09468b4c",
            "id": 1312,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 1068,
                "modifierName": {
                  "id": 1067,
                  "name": "restricted",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 277,
                  "src": "6851:10:1"
                },
                "nodeType": "ModifierInvocation",
                "src": "6851:10:1"
              }
            ],
            "name": "fillRequest",
            "nameLocation": "6787:11:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1061,
                  "mutability": "mutable",
                  "name": "_requestID",
                  "nameLocation": "6806:10:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1312,
                  "src": "6799:17:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes8",
                    "typeString": "bytes8"
                  },
                  "typeName": {
                    "id": 1060,
                    "name": "bytes8",
                    "nodeType": "ElementaryTypeName",
                    "src": "6799:6:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes8",
                      "typeString": "bytes8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1063,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "6826:5:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1312,
                  "src": "6818:13:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1062,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6818:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1065,
                  "mutability": "mutable",
                  "name": "i",
                  "nameLocation": "6841:1:1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1312,
                  "src": "6833:9:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1064,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6833:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6798:45:1"
            },
            "returnParameters": {
              "id": 1069,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6861:0:1"
            },
            "scope": 1331,
            "src": "6778:1916:1",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1321,
              "nodeType": "Block",
              "src": "8765:31:1",
              "statements": [
                {
                  "expression": {
                    "id": 1319,
                    "name": "requests",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 213,
                    "src": "8778:8:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_request_$171_storage_$dyn_storage",
                      "typeString": "struct AcriaNode.request storage ref[] storage ref"
                    }
                  },
                  "functionReturnParameters": 1318,
                  "id": 1320,
                  "nodeType": "Return",
                  "src": "8771:15:1"
                }
              ]
            },
            "functionSelector": "455bfbf2",
            "id": 1322,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get_requests",
            "nameLocation": "8712:12:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1313,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8724:2:1"
            },
            "returnParameters": {
              "id": 1318,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1317,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1322,
                  "src": "8747:16:1",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_request_$171_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct AcriaNode.request[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1315,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 1314,
                        "name": "request",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 171,
                        "src": "8747:7:1"
                      },
                      "referencedDeclaration": 171,
                      "src": "8747:7:1",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_request_$171_storage_ptr",
                        "typeString": "struct AcriaNode.request"
                      }
                    },
                    "id": 1316,
                    "nodeType": "ArrayTypeName",
                    "src": "8747:9:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_request_$171_storage_$dyn_storage_ptr",
                      "typeString": "struct AcriaNode.request[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8746:18:1"
            },
            "scope": 1331,
            "src": "8703:93:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1329,
              "nodeType": "Block",
              "src": "8860:35:1",
              "statements": [
                {
                  "expression": {
                    "id": 1327,
                    "name": "withdrawable",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 219,
                    "src": "8873:12:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 1326,
                  "id": 1328,
                  "nodeType": "Return",
                  "src": "8866:19:1"
                }
              ]
            },
            "functionSelector": "64245d01",
            "id": 1330,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get_withdrawable",
            "nameLocation": "8812:16:1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1323,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8828:2:1"
            },
            "returnParameters": {
              "id": 1326,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1325,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1330,
                  "src": "8851:7:1",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1324,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8851:7:1",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8850:9:1"
            },
            "scope": 1331,
            "src": "8803:92:1",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1332,
        "src": "129:8774:1"
      }
    ],
    "src": "33:8871:1"
  },
  "bytecode": "60e060405260006001556000600255600060075560006008553480156200002557600080fd5b50604051620020043803806200200483398101604081905262000048916200006d565b6001600160601b0319606092831b811660a05233831b60c052911b16608052620000c4565b6000806040838503121562000080578182fd5b82516200008d81620000ab565b6020840151909250620000a081620000ab565b809150509250929050565b6001600160a01b0381168114620000c157600080fd5b50565b60805160601c60a05160601c60c05160601c611ee76200011d60003960005050600081816102b40152818161040a01528181610bb10152610c37015260008181610300015281816114f101526117930152611ee76000f3fe60806040526004361061012a5760003560e01c806375ad5dbe116100ab578063c2927d851161006f578063c2927d8514610322578063e04161791461034f578063e19325381461036f578063f7ca0d661461038f578063fb10c7b1146103a5578063fcf6c903146103d25761012a565b806375ad5dbe1461024257806382e4eda4146102625780638d4b32231461028f5780638da5cb5b146102a25780639563dceb146102ee5761012a565b806364245d01116100f257806364245d01146101c75780636dd4e3ac146101dc5780636e5ab542146101fc57806370762d2f1461020f5780637568e9d2146102225761012a565b806308f438f71461012f57806309468b4c1461015857806315b3c6eb1461017a5780633ccfd60b14610190578063455bfbf2146101a5575b600080fd5b34801561013b57600080fd5b5061014560015481565b6040519081526020015b60405180910390f35b34801561016457600080fd5b50610178610173366004611c1b565b6103ff565b005b34801561018657600080fd5b5061014560075481565b34801561019c57600080fd5b50610178610ba6565b3480156101b157600080fd5b506101ba610c83565b60405161014f9190611c9e565b3480156101d357600080fd5b50600254610145565b3480156101e857600080fd5b506101786101f7366004611b27565b610d65565b61017861020a366004611c4d565b610ee8565b61017861021d366004611bbd565b61102c565b34801561022e57600080fd5b5061017861023d366004611b27565b61125a565b34801561024e57600080fd5b5061014561025d366004611c4d565b6112a5565b34801561026e57600080fd5b5061014561027d366004611b27565b60056020526000908152604090205481565b61017861029d366004611b71565b6112da565b3480156102ae57600080fd5b506102d67f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161014f565b3480156102fa57600080fd5b506102d67f000000000000000000000000000000000000000000000000000000000000000081565b34801561032e57600080fd5b5061014561033d366004611c4d565b60036020526000908152604090205481565b34801561035b57600080fd5b5061017861036a366004611b27565b6114e6565b34801561037b57600080fd5b5061017861038a366004611b48565b611788565b34801561039b57600080fd5b5061014560085481565b3480156103b157600080fd5b506101456103c0366004611c4d565b60046020526000908152604090205481565b3480156103de57600080fd5b506101456103ed366004611b27565b60066020526000908152604090205481565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461047c5760405162461bcd60e51b815260206004820152601c60248201527f5265737472696374656420746f20636f6e7472616374206f776e65720000000060448201526064015b60405180910390fd5b826001600160c01b031916600082815481106104a857634e487b7160e01b600052603260045260246000fd5b600091825260209091206004909102015460c01b6001600160c01b031916146104d057600080fd5b60006004816104e16103e843611dcb565b81526020019081526020016000205460001415610568576105046103e843611dcb565b61050f906001611d88565b6007541415610540576008541561053b576008546000908152600460205260409020541561053b575060015b610563565b600754156105635760075460009081526004602052604090205415610563575060015b61056c565b5060015b436000838154811061058e57634e487b7160e01b600052603260045260246000fd5b6000918252602090912060049091020154600160801b90046001600160401b031610610a695760008083815481106105d657634e487b7160e01b600052603260045260246000fd5b6000918252602082206001600490920201015481546001600160a01b039091169250600a9082908690811061061b57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600490910201546106469190600160401b90046001600160401b0316611ddf565b610651906008611e24565b6001600160401b03169050600080858154811061067e57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600001601c9054906101000a900463ffffffff16905060008086815481106106c457634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160020154905060008087815481106106fa57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600301549050851561079957836000888154811061073657634e487b7160e01b600052603260045260246000fd5b60009182526020909120600490910201546107619190600160401b90046001600160401b0316611e53565b600360006107716103e843611dcb565b8152602001908152602001600020600082825461078e9190611d88565b909155506107f39050565b83600088815481106107bb57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600490910201546107e69190600160401b90046001600160401b0316611e53565b6107f09085611d88565b93505b83600260008282546108059190611d88565b9091555050600080548890811061082c57634e487b7160e01b600052603260045260246000fd5b600091825260208220600490910201818155600180820180546001600160a01b031916905560028201839055600390910182905580549161086c83611e6a565b91905055506000826000148015610881575081155b1561092d57856001600160a01b03168463ffffffff168a6040516024016108aa91815260200190565b60408051601f198184030181529181526020820180516001600160e01b03166313e0b21760e11b179052516108df9190611c65565b60006040518083038160008787f1925050503d806000811461091d576040519150601f19603f3d011682016040523d82523d6000602084013e610922565b606091505b5050809150506109d9565b604051602481018a905260448101849052606481018390526001600160a01b0387169063ffffffff86169060840160408051601f198184030181529181526020820180516001600160e01b03166305d7f70360e21b179052516109909190611c65565b60006040518083038160008787f1925050503d80600081146109ce576040519150601f19603f3d011682016040523d82523d6000602084013e6109d3565b606091505b50909150505b80610a20577f86abf6250ebaadbb42dedf0794f338470dfba82eed923b669f0fce48a5ce5abb8a87878b604051610a139493929190611d58565b60405180910390a1610a5e565b7f910c973544a08bc7a636ea9436726896a35fb16763f6a536991139fa41a7f0e58a87878b604051610a559493929190611d58565b60405180910390a15b505050505050610ba0565b8015610ae95760008281548110610a9057634e487b7160e01b600052603260045260246000fd5b600091825260208220600490910201546001600160401b03600160401b9091041690600390610ac16103e843611dcb565b81526020019081526020016000206000828254610ade9190611d88565b90915550610b4f9050565b60008281548110610b0a57634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160000160089054906101000a90046001600160401b03166001600160401b031660026000828254610b499190611d88565b90915550505b60008281548110610b7057634e487b7160e01b600052603260045260246000fd5b6000918252602082206004909102018181556001810180546001600160a01b031916905560028101829055600301555b50505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c1e5760405162461bcd60e51b815260206004820152601c60248201527f5265737472696374656420746f20636f6e7472616374206f776e6572000000006044820152606401610473565b6002805460009182905560405190916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169183156108fc0291849190818181858888f19350505050158015610c7f573d6000803e3d6000fd5b5050565b60606000805480602002602001604051908101604052809291908181526020016000905b82821015610d5c576000848152602090819020604080516101008101825260048602909201805460c081811b6001600160c01b0319168552600160401b82046001600160401b0390811686880152600160801b83041693850193909352600160c01b810463ffffffff9081166060860152600160e01b9091041660808401526001808201546001600160a01b031660a08501526002820154928401929092526003015460e08301529083529092019101610ca7565b50505050905090565b6001600160a01b038116600090815260056020526040902054610db95760405162461bcd60e51b815260206004820152600c60248201526b2737ba10309039ba30b5b2b960a11b6044820152606401610473565b6001600160a01b0381166000908152600560205260409020546001610de06103e843611dcb565b610dea9190611e53565b1015610e2f5760405162461bcd60e51b8152602060048201526014602482015273139bc8199d5b1b0818da58db19481cdd185ad95960621b6044820152606401610473565b6001600160a01b0381166000908152600560205260408120545b6001610e576103e843611dcb565b610e619190611e53565b8111610e8f57610e718184611965565b610e7b9083611d88565b915080610e8781611e6a565b915050610e49565b50610e9c6103e843611dcb565b6001600160a01b038316600081815260056020526040808220939093559151909183156108fc02918491818181858888f19350505050158015610ee3573d6000803e3d6000fd5b505050565b670de0b6b3a76400003410610efc57600080fd5b60003411610f0957600080fd5b670de0b6b3a764000060008281548110610f3357634e487b7160e01b600052603260045260246000fd5b6000918252602090912060049091020154610f5e90600160401b90046001600160401b031634611d88565b10610f6857600080fd5b60008181548110610f8957634e487b7160e01b600052603260045260246000fd5b6000918252602090912060049091020154600160801b90046001600160401b0316610fb357600080fd5b3460008281548110610fd557634e487b7160e01b600052603260045260246000fd5b600091825260209091206004909102018054600890611005908490600160401b90046001600160401b0316611da0565b92506101000a8154816001600160401b0302191690836001600160401b0316021790555050565b6064841161103957600080fd5b670de0b6b3a7640000341061104d57600080fd5b620f4240841061105c57600080fd5b6207a1208363ffffffff161061107157600080fd5b611079611aa0565b6001600160c01b0319871681526001600160401b033416602082015261109f8543611d88565b6001600160401b031660408201526001600160a01b03861660a082015260005463ffffffff90811660608301528416608082015282156110e15760c081018390525b81156110ef5760e081018290525b6000805460018101825590805281517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56360049092029182018054602085015160408601516060870151608088015167ffffffffffffffff1990941660c096871c1767ffffffffffffffff60401b1916600160401b6001600160401b03948516021767ffffffffffffffff60801b1916600160801b93909216929092021763ffffffff60c01b1916600160c01b63ffffffff92831602176001600160e01b0316600160e01b919092160217905560a08301517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564830180546001600160a01b0319166001600160a01b039092169190911790558201517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56582015560e0909101517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56690910155505050505050565b6001600160a01b03811660009081526005602052604090205460016112816103e843611dcb565b61128b9190611e53565b106112995761129981610d65565b6112a2816114e6565b50565b6000816112c457506007546000908152600460205260409020546112d5565b506000818152600460205260409020545b919050565b606482116112e757600080fd5b670de0b6b3a764000034106112fb57600080fd5b620f4240821061130a57600080fd5b6207a1208163ffffffff161061131f57600080fd5b611327611aa0565b6001600160c01b0319851681526001600160401b033416602082015261134d8343611d88565b6001600160401b03908116604083019081526001600160a01b0395861660a084019081526000805463ffffffff808216606088019081529781166080880190815260018301845592805286517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5636004909302928301805460208a015197519a51955167ffffffffffffffff1990911660c093841c1767ffffffffffffffff60401b1916600160401b988a16989098029790971767ffffffffffffffff60801b1916600160801b9a909816999099029690961763ffffffff60c01b1916600160c01b93821693909302929092176001600160e01b0316600160e01b94909216939093021790945592517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564840180546001600160a01b0319169190961617909455928301517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56582015560e0909201517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566909201919091555050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461151b57600080fd5b6001600160a01b03811660009081526005602052604090205461153d57600080fd5b600061154b6103e843611dcb565b611556906001611d88565b9050600460006115686103e843611dcb565b81526020019081526020016000205460001415611604578060075414156115c957600854156115c4576008546000908152600460208190526040822054916115b26103e843611dcb565b81526020810191909152604001600020555b611604565b60075415611604576007546000908152600460208190526040822054916115f26103e843611dcb565b81526020810191909152604001600020555b600081815260046020526040902054611649576007541580159061162a57508060075414155b1561164957600754600090815260046020526040808220548383529120555b806007541461165d57600780546008558190555b6001600160a01b03821660009081526006602090815260408083205484845260049092528220805491928392611694908490611e53565b909155506116a59050600183611e53565b6001600160a01b0384166000908152600560205260409020541161175f5780600460006116d3600186611e53565b815260200190815260200160002060008282546116f09190611e53565b909155506117019050600183611e53565b60085560046000611713600185611e53565b8152602001908152602001600020546000141561175f5760036000611739600185611e53565b815260200190815260200160002054600260008282546117599190611d88565b90915550505b50506001600160a01b031660009081526006602090815260408083208390556005909152812055565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146118005760405162461bcd60e51b815260206004820152601b60248201527f496e697469617465642062792077726f6e6720636f6e747261637400000000006044820152606401610473565b6001600160a01b038216600090815260056020526040902054156118585760405162461bcd60e51b815260206004820152600f60248201526e416c7265616479207374616b696e6760881b6044820152606401610473565b600081116118945760405162461bcd60e51b81526020600482015260096024820152684e6f20546f6b656e7360b81b6044820152606401610473565b60006118a26103e843611dcb565b6118ad906001611d88565b6001600160a01b0384166000908152600560209081526040808320849055838352600490915290205490915061190f57600754158015906118f057508060075414155b1561190f57600754600090815260046020526040808220548383529120555b60008181526004602052604081208054849283929161192f908490611d88565b90915550506001600160a01b03841660009081526006602052604090208190556007548214610ba0575060078054600855555050565b6000828152600460205260408120546119cd5760046000611987600186611e53565b8152602001908152602001600020546000146119cd57600460006119ac600186611e53565b81526020808201929092526040908101600090812054868252600490935220555b60008381526003602052604090205415611a96576001600160a01b038216600090815260066020908152604080832054868452600483528184205460039093529083205490929190611a20908490611e05565b611a2a9190611dcb565b600086815260046020908152604091829020548251848152918201899052818301869052606082015290519192506001600160a01b038616917fc652e5a6fbf70db834261cc5fa689d2b62011ae542c2c79939010ded9fdca2a79181900360800190a29150611a9a9050565b5060005b92915050565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915290565b80356001600160a01b03811681146112d557600080fd5b80356001600160c01b0319811681146112d557600080fd5b803563ffffffff811681146112d557600080fd5b600060208284031215611b38578081fd5b611b4182611ae4565b9392505050565b60008060408385031215611b5a578081fd5b611b6383611ae4565b946020939093013593505050565b60008060008060808587031215611b86578182fd5b611b8f85611afb565b9350611b9d60208601611ae4565b925060408501359150611bb260608601611b13565b905092959194509250565b60008060008060008060c08789031215611bd5578182fd5b611bde87611afb565b9550611bec60208801611ae4565b945060408701359350611c0160608801611b13565b92506080870135915060a087013590509295509295509295565b600080600060608486031215611c2f578283fd5b611c3884611afb565b95602085013595506040909401359392505050565b600060208284031215611c5e578081fd5b5035919050565b60008251815b81811015611c855760208186018101518583015201611c6b565b81811115611c935782828501525b509190910192915050565b602080825282518282018190526000919060409081850190868401855b82811015611d4b57815180516001600160c01b0319168552868101516001600160401b039081168887015286820151168686015260608082015163ffffffff908116918701919091526080808301519091169086015260a0808201516001600160a01b03169086015260c0808201519086015260e090810151908501526101009093019290850190600101611cbb565b5091979650505050505050565b6001600160c01b03199490941684526001600160a01b039290921660208401526040830152606082015260800190565b60008219821115611d9b57611d9b611e85565b500190565b60006001600160401b03808316818516808303821115611dc257611dc2611e85565b01949350505050565b600082611dda57611dda611e9b565b500490565b60006001600160401b0380841680611df957611df9611e9b565b92169190910492915050565b6000816000190483118215151615611e1f57611e1f611e85565b500290565b60006001600160401b0380831681851681830481118215151615611e4a57611e4a611e85565b02949350505050565b600082821015611e6557611e65611e85565b500390565b6000600019821415611e7e57611e7e611e85565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea26469706673582212202c1414a819fd8da61dd953e87dad3363f4e19b5163e8b14cedc90e4efb4f898364736f6c63430008020033",
  "bytecodeSha1": "e9a5b7f9233b1bd5622c8b3225b00fb6e270f9be",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.2+commit.661d1103"
  },
  "contractName": "AcriaNode",
  "coverageMap": {
    "branches": {
      "1": {
        "AcriaNode.cancel_stake": {
          "114": [
            4480,
            4508,
            true
          ],
          "115": [
            4618,
            4666,
            false
          ],
          "116": [
            4676,
            4708,
            false
          ],
          "117": [
            4719,
            4750,
            false
          ],
          "118": [
            4879,
            4901,
            false
          ],
          "119": [
            5055,
            5077,
            false
          ],
          "120": [
            5081,
            5113,
            false
          ],
          "121": [
            5205,
            5237,
            false
          ],
          "122": [
            5424,
            5458,
            false
          ],
          "123": [
            5562,
            5595,
            false
          ]
        },
        "AcriaNode.cancel_stake_withdraw": {
          "108": [
            4296,
            4347,
            false
          ]
        },
        "AcriaNode.create_request": {
          "110": [
            2098,
            2111,
            true
          ],
          "111": [
            2126,
            2144,
            true
          ],
          "112": [
            2159,
            2176,
            true
          ],
          "113": [
            2191,
            2207,
            true
          ]
        },
        "AcriaNode.create_request_with_data": {
          "102": [
            2734,
            2747,
            true
          ],
          "103": [
            2762,
            2780,
            true
          ],
          "104": [
            2795,
            2812,
            true
          ],
          "105": [
            2827,
            2843,
            true
          ],
          "106": [
            3158,
            3168,
            false
          ],
          "107": [
            3208,
            3230,
            false
          ]
        },
        "AcriaNode.fillRequest": {
          "85": [
            6880,
            6915,
            true
          ],
          "86": [
            6968,
            7016,
            false
          ],
          "87": [
            7026,
            7077,
            false
          ],
          "88": [
            7088,
            7119,
            false
          ],
          "89": [
            7131,
            7177,
            false
          ],
          "90": [
            7242,
            7264,
            false
          ],
          "91": [
            7276,
            7313,
            false
          ],
          "92": [
            7419,
            7457,
            false
          ],
          "93": [
            7711,
            7727,
            false
          ],
          "94": [
            7998,
            8007,
            false
          ],
          "95": [
            8011,
            8032,
            false
          ],
          "96": [
            8319,
            8326,
            false
          ],
          "97": [
            8509,
            8525,
            false
          ]
        },
        "AcriaNode.get_total_stake": {
          "109": [
            1598,
            1609,
            false
          ]
        },
        "AcriaNode.payout_stakes": {
          "98": [
            6414,
            6465,
            true
          ]
        },
        "AcriaNode.pump_fee": {
          "99": [
            1776,
            1794,
            true
          ],
          "100": [
            1808,
            1821,
            true
          ],
          "101": [
            1835,
            1872,
            true
          ]
        },
        "AcriaNode.start_stake": {
          "124": [
            3535,
            3563,
            true
          ],
          "125": [
            3608,
            3630,
            true
          ],
          "126": [
            3663,
            3674,
            true
          ],
          "127": [
            3838,
            3860,
            false
          ],
          "128": [
            3864,
            3896,
            false
          ],
          "129": [
            4090,
            4122,
            false
          ]
        }
      }
    },
    "statements": {
      "1": {
        "AcriaNode.cancel_stake": {
          "59": [
            4472,
            4509
          ],
          "60": [
            4514,
            4545
          ],
          "61": [
            4759,
            4846
          ],
          "62": [
            4910,
            4988
          ],
          "63": [
            5121,
            5182
          ],
          "64": [
            5244,
            5290
          ],
          "65": [
            5296,
            5327
          ],
          "66": [
            5383,
            5416
          ],
          "67": [
            5465,
            5500
          ],
          "68": [
            5506,
            5548
          ],
          "69": [
            5603,
            5652
          ],
          "70": [
            5668,
            5695
          ],
          "71": [
            5704,
            5725
          ]
        },
        "AcriaNode.cancel_stake_withdraw": {
          "44": [
            4353,
            4377
          ],
          "45": [
            4382,
            4405
          ]
        },
        "AcriaNode.create_request": {
          "48": [
            2090,
            2112
          ],
          "49": [
            2118,
            2145
          ],
          "50": [
            2151,
            2177
          ],
          "51": [
            2183,
            2208
          ],
          "52": [
            2251,
            2285
          ],
          "53": [
            2291,
            2326
          ],
          "54": [
            2332,
            2387
          ],
          "55": [
            2393,
            2424
          ],
          "56": [
            2430,
            2470
          ],
          "57": [
            2476,
            2513
          ],
          "58": [
            2519,
            2545
          ]
        },
        "AcriaNode.create_request_with_data": {
          "31": [
            2726,
            2748
          ],
          "32": [
            2754,
            2781
          ],
          "33": [
            2787,
            2813
          ],
          "34": [
            2819,
            2844
          ],
          "35": [
            2887,
            2921
          ],
          "36": [
            2927,
            2962
          ],
          "37": [
            2968,
            3023
          ],
          "38": [
            3029,
            3060
          ],
          "39": [
            3066,
            3106
          ],
          "40": [
            3112,
            3149
          ],
          "41": [
            3175,
            3199
          ],
          "42": [
            3237,
            3285
          ],
          "43": [
            3291,
            3317
          ]
        },
        "AcriaNode.fillRequest": {
          "1": [
            6872,
            6916
          ],
          "2": [
            7186,
            7209
          ],
          "3": [
            7322,
            7345
          ],
          "4": [
            7378,
            7401
          ],
          "5": [
            7736,
            7809
          ],
          "6": [
            7829,
            7857
          ],
          "7": [
            7881,
            7900
          ],
          "8": [
            7915,
            7933
          ],
          "9": [
            7941,
            7960
          ],
          "10": [
            8041,
            8140
          ],
          "11": [
            8160,
            8299
          ],
          "12": [
            8337,
            8390
          ],
          "13": [
            8419,
            8467
          ],
          "14": [
            8534,
            8601
          ],
          "15": [
            8624,
            8655
          ],
          "16": [
            8663,
            8681
          ]
        },
        "AcriaNode.get_requests": {
          "19": [
            8771,
            8786
          ]
        },
        "AcriaNode.get_total_stake": {
          "46": [
            1616,
            1655
          ],
          "47": [
            1675,
            1703
          ]
        },
        "AcriaNode.get_withdrawable": {
          "0": [
            8866,
            8885
          ]
        },
        "AcriaNode.payout_stake": {
          "81": [
            5905,
            5952
          ],
          "82": [
            6150,
            6229
          ],
          "83": [
            6240,
            6253
          ],
          "84": [
            6273,
            6281
          ]
        },
        "AcriaNode.payout_stakes": {
          "20": [
            6354,
            6401
          ],
          "21": [
            6406,
            6490
          ],
          "22": [
            6611,
            6653
          ],
          "23": [
            6601,
            6604
          ],
          "24": [
            6667,
            6715
          ],
          "25": [
            6723,
            6764
          ]
        },
        "AcriaNode.pump_fee": {
          "26": [
            1768,
            1795
          ],
          "27": [
            1800,
            1822
          ],
          "28": [
            1827,
            1873
          ],
          "29": [
            1878,
            1915
          ],
          "30": [
            1924,
            1961
          ]
        },
        "AcriaNode.start_stake": {
          "72": [
            3527,
            3595
          ],
          "73": [
            3600,
            3650
          ],
          "74": [
            3655,
            3688
          ],
          "75": [
            3758,
            3789
          ],
          "76": [
            3904,
            3965
          ],
          "77": [
            4011,
            4044
          ],
          "78": [
            4049,
            4078
          ],
          "79": [
            4129,
            4175
          ],
          "80": [
            4181,
            4212
          ]
        },
        "AcriaNode.withdraw": {
          "17": [
            3402,
            3418
          ],
          "18": [
            3427,
            3444
          ]
        }
      }
    }
  },
  "dependencies": [],
  "deployedBytecode": "60806040526004361061012a5760003560e01c806375ad5dbe116100ab578063c2927d851161006f578063c2927d8514610322578063e04161791461034f578063e19325381461036f578063f7ca0d661461038f578063fb10c7b1146103a5578063fcf6c903146103d25761012a565b806375ad5dbe1461024257806382e4eda4146102625780638d4b32231461028f5780638da5cb5b146102a25780639563dceb146102ee5761012a565b806364245d01116100f257806364245d01146101c75780636dd4e3ac146101dc5780636e5ab542146101fc57806370762d2f1461020f5780637568e9d2146102225761012a565b806308f438f71461012f57806309468b4c1461015857806315b3c6eb1461017a5780633ccfd60b14610190578063455bfbf2146101a5575b600080fd5b34801561013b57600080fd5b5061014560015481565b6040519081526020015b60405180910390f35b34801561016457600080fd5b50610178610173366004611c1b565b6103ff565b005b34801561018657600080fd5b5061014560075481565b34801561019c57600080fd5b50610178610ba6565b3480156101b157600080fd5b506101ba610c83565b60405161014f9190611c9e565b3480156101d357600080fd5b50600254610145565b3480156101e857600080fd5b506101786101f7366004611b27565b610d65565b61017861020a366004611c4d565b610ee8565b61017861021d366004611bbd565b61102c565b34801561022e57600080fd5b5061017861023d366004611b27565b61125a565b34801561024e57600080fd5b5061014561025d366004611c4d565b6112a5565b34801561026e57600080fd5b5061014561027d366004611b27565b60056020526000908152604090205481565b61017861029d366004611b71565b6112da565b3480156102ae57600080fd5b506102d67f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161014f565b3480156102fa57600080fd5b506102d67f000000000000000000000000000000000000000000000000000000000000000081565b34801561032e57600080fd5b5061014561033d366004611c4d565b60036020526000908152604090205481565b34801561035b57600080fd5b5061017861036a366004611b27565b6114e6565b34801561037b57600080fd5b5061017861038a366004611b48565b611788565b34801561039b57600080fd5b5061014560085481565b3480156103b157600080fd5b506101456103c0366004611c4d565b60046020526000908152604090205481565b3480156103de57600080fd5b506101456103ed366004611b27565b60066020526000908152604090205481565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461047c5760405162461bcd60e51b815260206004820152601c60248201527f5265737472696374656420746f20636f6e7472616374206f776e65720000000060448201526064015b60405180910390fd5b826001600160c01b031916600082815481106104a857634e487b7160e01b600052603260045260246000fd5b600091825260209091206004909102015460c01b6001600160c01b031916146104d057600080fd5b60006004816104e16103e843611dcb565b81526020019081526020016000205460001415610568576105046103e843611dcb565b61050f906001611d88565b6007541415610540576008541561053b576008546000908152600460205260409020541561053b575060015b610563565b600754156105635760075460009081526004602052604090205415610563575060015b61056c565b5060015b436000838154811061058e57634e487b7160e01b600052603260045260246000fd5b6000918252602090912060049091020154600160801b90046001600160401b031610610a695760008083815481106105d657634e487b7160e01b600052603260045260246000fd5b6000918252602082206001600490920201015481546001600160a01b039091169250600a9082908690811061061b57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600490910201546106469190600160401b90046001600160401b0316611ddf565b610651906008611e24565b6001600160401b03169050600080858154811061067e57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600001601c9054906101000a900463ffffffff16905060008086815481106106c457634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160020154905060008087815481106106fa57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060040201600301549050851561079957836000888154811061073657634e487b7160e01b600052603260045260246000fd5b60009182526020909120600490910201546107619190600160401b90046001600160401b0316611e53565b600360006107716103e843611dcb565b8152602001908152602001600020600082825461078e9190611d88565b909155506107f39050565b83600088815481106107bb57634e487b7160e01b600052603260045260246000fd5b60009182526020909120600490910201546107e69190600160401b90046001600160401b0316611e53565b6107f09085611d88565b93505b83600260008282546108059190611d88565b9091555050600080548890811061082c57634e487b7160e01b600052603260045260246000fd5b600091825260208220600490910201818155600180820180546001600160a01b031916905560028201839055600390910182905580549161086c83611e6a565b91905055506000826000148015610881575081155b1561092d57856001600160a01b03168463ffffffff168a6040516024016108aa91815260200190565b60408051601f198184030181529181526020820180516001600160e01b03166313e0b21760e11b179052516108df9190611c65565b60006040518083038160008787f1925050503d806000811461091d576040519150601f19603f3d011682016040523d82523d6000602084013e610922565b606091505b5050809150506109d9565b604051602481018a905260448101849052606481018390526001600160a01b0387169063ffffffff86169060840160408051601f198184030181529181526020820180516001600160e01b03166305d7f70360e21b179052516109909190611c65565b60006040518083038160008787f1925050503d80600081146109ce576040519150601f19603f3d011682016040523d82523d6000602084013e6109d3565b606091505b50909150505b80610a20577f86abf6250ebaadbb42dedf0794f338470dfba82eed923b669f0fce48a5ce5abb8a87878b604051610a139493929190611d58565b60405180910390a1610a5e565b7f910c973544a08bc7a636ea9436726896a35fb16763f6a536991139fa41a7f0e58a87878b604051610a559493929190611d58565b60405180910390a15b505050505050610ba0565b8015610ae95760008281548110610a9057634e487b7160e01b600052603260045260246000fd5b600091825260208220600490910201546001600160401b03600160401b9091041690600390610ac16103e843611dcb565b81526020019081526020016000206000828254610ade9190611d88565b90915550610b4f9050565b60008281548110610b0a57634e487b7160e01b600052603260045260246000fd5b906000526020600020906004020160000160089054906101000a90046001600160401b03166001600160401b031660026000828254610b499190611d88565b90915550505b60008281548110610b7057634e487b7160e01b600052603260045260246000fd5b6000918252602082206004909102018181556001810180546001600160a01b031916905560028101829055600301555b50505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610c1e5760405162461bcd60e51b815260206004820152601c60248201527f5265737472696374656420746f20636f6e7472616374206f776e6572000000006044820152606401610473565b6002805460009182905560405190916001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000169183156108fc0291849190818181858888f19350505050158015610c7f573d6000803e3d6000fd5b5050565b60606000805480602002602001604051908101604052809291908181526020016000905b82821015610d5c576000848152602090819020604080516101008101825260048602909201805460c081811b6001600160c01b0319168552600160401b82046001600160401b0390811686880152600160801b83041693850193909352600160c01b810463ffffffff9081166060860152600160e01b9091041660808401526001808201546001600160a01b031660a08501526002820154928401929092526003015460e08301529083529092019101610ca7565b50505050905090565b6001600160a01b038116600090815260056020526040902054610db95760405162461bcd60e51b815260206004820152600c60248201526b2737ba10309039ba30b5b2b960a11b6044820152606401610473565b6001600160a01b0381166000908152600560205260409020546001610de06103e843611dcb565b610dea9190611e53565b1015610e2f5760405162461bcd60e51b8152602060048201526014602482015273139bc8199d5b1b0818da58db19481cdd185ad95960621b6044820152606401610473565b6001600160a01b0381166000908152600560205260408120545b6001610e576103e843611dcb565b610e619190611e53565b8111610e8f57610e718184611965565b610e7b9083611d88565b915080610e8781611e6a565b915050610e49565b50610e9c6103e843611dcb565b6001600160a01b038316600081815260056020526040808220939093559151909183156108fc02918491818181858888f19350505050158015610ee3573d6000803e3d6000fd5b505050565b670de0b6b3a76400003410610efc57600080fd5b60003411610f0957600080fd5b670de0b6b3a764000060008281548110610f3357634e487b7160e01b600052603260045260246000fd5b6000918252602090912060049091020154610f5e90600160401b90046001600160401b031634611d88565b10610f6857600080fd5b60008181548110610f8957634e487b7160e01b600052603260045260246000fd5b6000918252602090912060049091020154600160801b90046001600160401b0316610fb357600080fd5b3460008281548110610fd557634e487b7160e01b600052603260045260246000fd5b600091825260209091206004909102018054600890611005908490600160401b90046001600160401b0316611da0565b92506101000a8154816001600160401b0302191690836001600160401b0316021790555050565b6064841161103957600080fd5b670de0b6b3a7640000341061104d57600080fd5b620f4240841061105c57600080fd5b6207a1208363ffffffff161061107157600080fd5b611079611aa0565b6001600160c01b0319871681526001600160401b033416602082015261109f8543611d88565b6001600160401b031660408201526001600160a01b03861660a082015260005463ffffffff90811660608301528416608082015282156110e15760c081018390525b81156110ef5760e081018290525b6000805460018101825590805281517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56360049092029182018054602085015160408601516060870151608088015167ffffffffffffffff1990941660c096871c1767ffffffffffffffff60401b1916600160401b6001600160401b03948516021767ffffffffffffffff60801b1916600160801b93909216929092021763ffffffff60c01b1916600160c01b63ffffffff92831602176001600160e01b0316600160e01b919092160217905560a08301517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564830180546001600160a01b0319166001600160a01b039092169190911790558201517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56582015560e0909101517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56690910155505050505050565b6001600160a01b03811660009081526005602052604090205460016112816103e843611dcb565b61128b9190611e53565b106112995761129981610d65565b6112a2816114e6565b50565b6000816112c457506007546000908152600460205260409020546112d5565b506000818152600460205260409020545b919050565b606482116112e757600080fd5b670de0b6b3a764000034106112fb57600080fd5b620f4240821061130a57600080fd5b6207a1208163ffffffff161061131f57600080fd5b611327611aa0565b6001600160c01b0319851681526001600160401b033416602082015261134d8343611d88565b6001600160401b03908116604083019081526001600160a01b0395861660a084019081526000805463ffffffff808216606088019081529781166080880190815260018301845592805286517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5636004909302928301805460208a015197519a51955167ffffffffffffffff1990911660c093841c1767ffffffffffffffff60401b1916600160401b988a16989098029790971767ffffffffffffffff60801b1916600160801b9a909816999099029690961763ffffffff60c01b1916600160c01b93821693909302929092176001600160e01b0316600160e01b94909216939093021790945592517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e564840180546001600160a01b0319169190961617909455928301517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e56582015560e0909201517f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e566909201919091555050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461151b57600080fd5b6001600160a01b03811660009081526005602052604090205461153d57600080fd5b600061154b6103e843611dcb565b611556906001611d88565b9050600460006115686103e843611dcb565b81526020019081526020016000205460001415611604578060075414156115c957600854156115c4576008546000908152600460208190526040822054916115b26103e843611dcb565b81526020810191909152604001600020555b611604565b60075415611604576007546000908152600460208190526040822054916115f26103e843611dcb565b81526020810191909152604001600020555b600081815260046020526040902054611649576007541580159061162a57508060075414155b1561164957600754600090815260046020526040808220548383529120555b806007541461165d57600780546008558190555b6001600160a01b03821660009081526006602090815260408083205484845260049092528220805491928392611694908490611e53565b909155506116a59050600183611e53565b6001600160a01b0384166000908152600560205260409020541161175f5780600460006116d3600186611e53565b815260200190815260200160002060008282546116f09190611e53565b909155506117019050600183611e53565b60085560046000611713600185611e53565b8152602001908152602001600020546000141561175f5760036000611739600185611e53565b815260200190815260200160002054600260008282546117599190611d88565b90915550505b50506001600160a01b031660009081526006602090815260408083208390556005909152812055565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146118005760405162461bcd60e51b815260206004820152601b60248201527f496e697469617465642062792077726f6e6720636f6e747261637400000000006044820152606401610473565b6001600160a01b038216600090815260056020526040902054156118585760405162461bcd60e51b815260206004820152600f60248201526e416c7265616479207374616b696e6760881b6044820152606401610473565b600081116118945760405162461bcd60e51b81526020600482015260096024820152684e6f20546f6b656e7360b81b6044820152606401610473565b60006118a26103e843611dcb565b6118ad906001611d88565b6001600160a01b0384166000908152600560209081526040808320849055838352600490915290205490915061190f57600754158015906118f057508060075414155b1561190f57600754600090815260046020526040808220548383529120555b60008181526004602052604081208054849283929161192f908490611d88565b90915550506001600160a01b03841660009081526006602052604090208190556007548214610ba0575060078054600855555050565b6000828152600460205260408120546119cd5760046000611987600186611e53565b8152602001908152602001600020546000146119cd57600460006119ac600186611e53565b81526020808201929092526040908101600090812054868252600490935220555b60008381526003602052604090205415611a96576001600160a01b038216600090815260066020908152604080832054868452600483528184205460039093529083205490929190611a20908490611e05565b611a2a9190611dcb565b600086815260046020908152604091829020548251848152918201899052818301869052606082015290519192506001600160a01b038616917fc652e5a6fbf70db834261cc5fa689d2b62011ae542c2c79939010ded9fdca2a79181900360800190a29150611a9a9050565b5060005b92915050565b6040805161010081018252600080825260208201819052918101829052606081018290526080810182905260a0810182905260c0810182905260e081019190915290565b80356001600160a01b03811681146112d557600080fd5b80356001600160c01b0319811681146112d557600080fd5b803563ffffffff811681146112d557600080fd5b600060208284031215611b38578081fd5b611b4182611ae4565b9392505050565b60008060408385031215611b5a578081fd5b611b6383611ae4565b946020939093013593505050565b60008060008060808587031215611b86578182fd5b611b8f85611afb565b9350611b9d60208601611ae4565b925060408501359150611bb260608601611b13565b905092959194509250565b60008060008060008060c08789031215611bd5578182fd5b611bde87611afb565b9550611bec60208801611ae4565b945060408701359350611c0160608801611b13565b92506080870135915060a087013590509295509295509295565b600080600060608486031215611c2f578283fd5b611c3884611afb565b95602085013595506040909401359392505050565b600060208284031215611c5e578081fd5b5035919050565b60008251815b81811015611c855760208186018101518583015201611c6b565b81811115611c935782828501525b509190910192915050565b602080825282518282018190526000919060409081850190868401855b82811015611d4b57815180516001600160c01b0319168552868101516001600160401b039081168887015286820151168686015260608082015163ffffffff908116918701919091526080808301519091169086015260a0808201516001600160a01b03169086015260c0808201519086015260e090810151908501526101009093019290850190600101611cbb565b5091979650505050505050565b6001600160c01b03199490941684526001600160a01b039290921660208401526040830152606082015260800190565b60008219821115611d9b57611d9b611e85565b500190565b60006001600160401b03808316818516808303821115611dc257611dc2611e85565b01949350505050565b600082611dda57611dda611e9b565b500490565b60006001600160401b0380841680611df957611df9611e9b565b92169190910492915050565b6000816000190483118215151615611e1f57611e1f611e85565b500290565b60006001600160401b0380831681851681830481118215151615611e4a57611e4a611e85565b02949350505050565b600082821015611e6557611e65611e85565b500390565b6000600019821415611e7e57611e7e611e85565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fdfea26469706673582212202c1414a819fd8da61dd953e87dad3363f4e19b5163e8b14cedc90e4efb4f898364736f6c63430008020033",
  "deployedSourceMap": "129:8774:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;750:36;;;;;;;;;;;;;;;;;;;7860:25:13;;;7848:2;7833:18;750:36:1;;;;;;;;6778:1916;;;;;;;;;;-1:-1:-1;6778:1916:1;;;;;:::i;:::-;;:::i;:::-;;1026:36;;;;;;;;;;;;;;;;3331:118;;;;;;;;;;;;;:::i;8703:93::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;8803:92::-;;;;;;;;;;-1:-1:-1;8873:12:1;;8803:92;;6300:469;;;;;;;;;;-1:-1:-1;6300:469:1;;;;;:::i;:::-;;:::i;1718:248::-;;;;;;:::i;:::-;;:::i;2559:763::-;;;;;;:::i;:::-;;:::i;4231:179::-;;;;;;;;;;-1:-1:-1;4231:179:1;;;;;:::i;:::-;;:::i;1520:193::-;;;;;;;;;;-1:-1:-1;1520:193:1;;;;;:::i;:::-;;:::i;930:41::-;;;;;;;;;;-1:-1:-1;930:41:1;;;;;:::i;:::-;;;;;;;;;;;;;;1975:575;;;;;;:::i;:::-;;:::i;658:38::-;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3327:32:13;;;;3309:51;;3297:2;3282:18;658:38:1;3264:102:13;612:39:1;;;;;;;;;;;;;;;821:53;;;;;;;;;;-1:-1:-1;821:53:1;;;;;:::i;:::-;;;;;;;;;;;;;;4419:1315;;;;;;;;;;-1:-1:-1;4419:1315:1;;;;;:::i;:::-;;:::i;3458:764::-;;;;;;;;;;-1:-1:-1;3458:764:1;;;;;:::i;:::-;;:::i;1066:45::-;;;;;;;;;;;;;;;;878:48;;;;;;;;;;-1:-1:-1;878:48:1;;;;;:::i;:::-;;;;;;;;;;;;;;975:47;;;;;;;;;;-1:-1:-1;975:47:1;;;;;:::i;:::-;;;;;;;;;;;;;;6778:1916;1450:5;-1:-1:-1;;;;;1436:19:1;:10;:19;1421:78;;;;-1:-1:-1;;;1421:78:1;;6866:2:13;1421:78:1;;;6848:21:13;6905:2;6885:18;;;6878:30;6944;6924:18;;;6917:58;6992:18;;1421:78:1;;;;;;;;;6880:8:::1;:11:::0;;-1:-1:-1;;;;;;6880:35:1;::::1;::::0;:8;6889:1;;6880:11;::::1;;;-1:-1:-1::0;;;6880:11:1::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:21:::0;::::1;;-1:-1:-1::0;;;;;;6880:35:1::1;;6872:44;;;::::0;::::1;;6929:21;6968:13;6929:21:::0;6982:28:::1;1150:4;6982:12;:28;:::i;:::-;6968:43;;;;;;;;;;;;7015:1;6968:48;6965:442;;;7047:28;1150:4;7047:12;:28;:::i;:::-;:30;::::0;7076:1:::1;7047:30;:::i;:::-;7026:17;;:51;7023:336;;;7088:26;::::0;:31;7085:132:::1;;7145:26;::::0;7131:41:::1;::::0;;;:13:::1;:41;::::0;;;;;:46;7128:81:::1;;-1:-1:-1::0;7205:4:1::1;7128:81;7023:336;;;7242:17;::::0;:22;7239:114:::1;;7290:17;::::0;7276:32:::1;::::0;;;:13:::1;:32;::::0;;;;;:37;7273:72:::1;;-1:-1:-1::0;7341:4:1::1;7273:72;6965:442;;;-1:-1:-1::0;7397:4:1::1;6965:442;7445:12;7419:8;7428:1;7419:11;;;;;;-1:-1:-1::0;;;7419:11:1::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:22:::0;-1:-1:-1;;;7419:22:1;::::1;-1:-1:-1::0;;;;;7419:22:1::1;:38;7416:1270;;7466:16;7485:8:::0;7494:1:::1;7485:11;;;;;;-1:-1:-1::0;;;7485:11:1::1;;;;;;;;;;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;;:20;;::::0;7527:11;;-1:-1:-1;;;;;7485:20:1;;::::1;::::0;-1:-1:-1;7543:2:1::1;::::0;7485:11;;7536:1;;7527:11;::::1;;;-1:-1:-1::0;;;7527:11:1::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:15:::0;:18:::1;::::0;;-1:-1:-1;;;7527:15:1;::::1;-1:-1:-1::0;;;;;7527:15:1::1;:18;:::i;:::-;:20;::::0;7546:1:::1;7527:20;:::i;:::-;-1:-1:-1::0;;;;;7513:34:1::1;;;7555:14;7572:8:::0;7581:1:::1;7572:11;;;;;;-1:-1:-1::0;;;7572:11:1::1;;;;;;;;;;;;;;;;;;;:19;;;;;;;;;;;;7555:36;;7599:12;7614:8:::0;7623:1:::1;7614:11;;;;;;-1:-1:-1::0;;;7614:11:1::1;;;;;;;;;;;;;;;;;;;:16;;;7599:31;;7638:24;7665:8:::0;7674:1:::1;7665:11;;;;;;-1:-1:-1::0;;;7665:11:1::1;;;;;;;;;;;;;;;;;;;:28;;;7638:55;;7711:16;7708:149;;;7806:3;7788:8;7797:1;7788:11;;;;;;-1:-1:-1::0;;;7788:11:1::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:15:::0;:21:::1;::::0;;-1:-1:-1;;;7788:15:1;::::1;-1:-1:-1::0;;;;;7788:15:1::1;:21;:::i;:::-;7736:18;:48;7755:28;1150:4;7755:12;:28;:::i;:::-;7736:48;;;;;;;;;;;;:73;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;7708:149:1::1;::::0;-1:-1:-1;7708:149:1::1;;7854:3;7836:8;7845:1;7836:11;;;;;;-1:-1:-1::0;;;7836:11:1::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:15:::0;:21:::1;::::0;;-1:-1:-1;;;7836:15:1;::::1;-1:-1:-1::0;;;;;7836:15:1::1;:21;:::i;:::-;7829:28;::::0;;::::1;:::i;:::-;;;7708:149;7897:3;7881:12;;:19;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;7922:8:1::1;:11:::0;;7931:1;;7922:11;::::1;;;-1:-1:-1::0;;;7922:11:1::1;;;;;;;;;;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;;7915:18:::0;;;;;;::::1;::::0;;-1:-1:-1;;;;;;7915:18:1::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;;::::1;::::0;;;7941:19;;;::::1;::::0;::::1;:::i;:::-;;;;;;7975:12;7998:4;8006:1;7998:9;:34;;;;-1:-1:-1::0;8011:21:1;;7998:34:::1;7995:304;;;8082:57;::::0;::::1;::::0;::::1;7860:25:13::0;;;-1:-1:-1;;;;;8055:13:1;::::1;::::0;:85:::1;::::0;::::1;::::0;7833:18:13;;8082:57:1::1;::::0;;-1:-1:-1;;8082:57:1;;::::1;::::0;;;;;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;8082:57:1::1;-1:-1:-1::0;;;8082:57:1::1;::::0;;8055:85;::::1;::::0;8082:57;8055:85:::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8041:99;;;;;7995:304;;;8201:97;::::0;;::::1;::::0;::::1;8098:25:13::0;;;8139:18;;;8132:34;;;8182:18;;;;8175:34;;;8201:97:1;;;;;;;;;;8071:18:13;;;;8201:97:1;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;8201:97:1::1;-1:-1:-1::0;;;8201:97:1::1;::::0;;8174:125;;-1:-1:-1;;;;;8174:13:1;::::1;::::0;:125:::1;::::0;::::1;::::0;::::1;::::0;8201:97;8174:125:::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;8160:139:1;;-1:-1:-1;;7995:304:1::1;8319:7;8315:161;;8342:48;::::0;;-1:-1:-1;;;;;;5422:41:13;;5404:60;;-1:-1:-1;;;;;5500:32:13;;5495:2;5480:18;;5473:60;5549:18;;;5542:34;;;5607:2;5592:18;;5585:34;;;8342:48:1::1;::::0;5391:3:13;5376:19;8342:48:1::1;;;;;;;8315:161;;;8424:43;::::0;;-1:-1:-1;;;;;;5422:41:13;;5404:60;;-1:-1:-1;;;;;5500:32:13;;5495:2;5480:18;;5473:60;5549:18;;;5542:34;;;5607:2;5592:18;;5585:34;;;8424:43:1::1;::::0;5391:3:13;5376:19;8424:43:1::1;;;;;;;8315:161;7416:1270;;;;;;;;;8509:16;8506:149;;;8586:8;8595:1;8586:11;;;;;;-1:-1:-1::0;;;8586:11:1::1;;;;;;;;;;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;;:15:::0;-1:-1:-1;;;8586:15:1;::::1;-1:-1:-1::0;;;;;8586:15:1::1;::::0;8534:18:::1;::::0;8553:28:::1;1150:4;8553:12;:28;:::i;:::-;8534:48;;;;;;;;;;;;:67;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;8506:149:1::1;::::0;-1:-1:-1;8506:149:1::1;;8640:8;8649:1;8640:11;;;;;;-1:-1:-1::0;;;8640:11:1::1;;;;;;;;;;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;;:15:::0;8624:12:::1;:31:::0;;-1:-1:-1;;;8640:15:1;;::::1;-1:-1:-1::0;;;;;8640:15:1::1;::::0;8624:12;;:31:::1;::::0;8640:15;;8624:31:::1;:::i;:::-;::::0;;;-1:-1:-1;;8506:149:1::1;8670:8;8679:1;8670:11;;;;;;-1:-1:-1::0;;;8670:11:1::1;;;;;;;;;;::::0;;;::::1;::::0;;::::1;::::0;;;::::1;;8663:18:::0;;;;;::::1;::::0;;-1:-1:-1;;;;;;8663:18:1::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;;::::0;7416:1270:::1;1505:1;6778:1916:::0;;;:::o;3331:118::-;1450:5;-1:-1:-1;;;;;1436:19:1;:10;:19;1421:78;;;;-1:-1:-1;;;1421:78:1;;6866:2:13;1421:78:1;;;6848:21:13;6905:2;6885:18;;;6878:30;6944;6924:18;;;6917:58;6992:18;;1421:78:1;6838:178:13;1421:78:1;3385:12:::1;::::0;;3373:9:::1;3402:16:::0;;;;3427:17:::1;::::0;3385:12;;3427:5:::1;-1:-1:-1::0;;;;;3427:14:1::1;::::0;:17:::1;::::0;::::1;;::::0;3385:12;;3427:17;;3373:9;3427:17;3385:12;3427:14;:17;::::1;;;;;;;;;;;;;::::0;::::1;;;;;;1505:1;3331:118::o:0;8703:93::-;8747:16;8778:8;8771:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;8771:15:1;;;-1:-1:-1;;;8771:15:1;;-1:-1:-1;;;;;8771:15:1;;;;;;;-1:-1:-1;;;8771:15:1;;;;;;;;;;-1:-1:-1;;;8771:15:1;;;;;;;;;;-1:-1:-1;;;8771:15:1;;;;-1:-1:-1;8771:15:1;;;-1:-1:-1;8771:15:1;;;;-1:-1:-1;;;;;8771:15:1;-1:-1:-1;8771:15:1;;;;;;;;;;;;;;;;;-1:-1:-1;8771:15:1;;;;;;;;;;;;;;;;;;;;8703:93;:::o;6300:469::-;-1:-1:-1;;;;;6362:17:1;;;;;;:6;:17;;;;;;6354:47;;;;-1:-1:-1;;;6354:47:1;;6525:2:13;6354:47:1;;;6507:21:13;6564:2;6544:18;;;6537:30;-1:-1:-1;;;6583:18:13;;;6576:42;6635:18;;6354:47:1;6497:162:13;6354:47:1;-1:-1:-1;;;;;6448:17:1;;;;;;:6;:17;;;;;;-1:-1:-1;6414:28:1;1150:4;6414:12;:28;:::i;:::-;:30;;;;:::i;:::-;:51;;6406:84;;;;-1:-1:-1;;;6406:84:1;;6176:2:13;6406:84:1;;;6158:21:13;6215:2;6195:18;;;6188:30;-1:-1:-1;;;6234:18:13;;;6227:50;6294:18;;6406:84:1;6148:170:13;6406:84:1;-1:-1:-1;;;;;6548:17:1;;6499:20;6548:17;;;:6;:17;;;;;;6532:127;6599:1;6570:28;1150:4;6570:12;:28;:::i;:::-;:30;;;;:::i;:::-;6567:1;:33;6532:127;;6627:26;6640:1;6643:9;6627:12;:26::i;:::-;6611:42;;;;:::i;:::-;;-1:-1:-1;6601:3:1;;;;:::i;:::-;;;;6532:127;;;-1:-1:-1;6687:28:1;1150:4;6687:12;:28;:::i;:::-;-1:-1:-1;;;;;6667:17:1;;;;;;:6;:17;;;;;;:48;;;;6723:41;;6667:17;;6723:41;;;;;;;;6667:17;6723:41;;6667:17;6723:41;;;;;;;;;;;;;;;;;;;;;6300:469;;:::o;1718:248::-;1788:6;1776:9;:18;1768:27;;;;;;1820:1;1808:9;:13;1800:22;;;;;;1866:6;1847:8;1856:2;1847:12;;;;;;-1:-1:-1;;;1847:12:1;;;;;;;;;;;;;;;;;;;;;;:16;1835:28;;-1:-1:-1;;;1847:16:1;;-1:-1:-1;;;;;1847:16:1;1835:9;:28;:::i;:::-;:37;1827:46;;;;;;1886:8;1895:2;1886:12;;;;;;-1:-1:-1;;;1886:12:1;;;;;;;;;;;;;;;;;;;;;;:23;-1:-1:-1;;;1886:23:1;;-1:-1:-1;;;;;1886:23:1;1878:37;;;;;;1951:9;1924:8;1933:2;1924:12;;;;;;-1:-1:-1;;;1924:12:1;;;;;;;;;;;;;;;;;;;;;;:37;;:16;;:37;;;;-1:-1:-1;;;1924:37:1;;-1:-1:-1;;;;;1924:37:1;;:::i;:::-;;;-1:-1:-1;;;;;1924:37:1;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1718:248:1:o;2559:763::-;2744:3;2734:7;:13;2726:22;;;;;;2774:6;2762:9;:18;2754:27;;;;;;2805:7;2795;:17;2787:26;;;;;;2837:6;2827:7;:16;;;2819:25;;;;;;2855:26;;:::i;:::-;-1:-1:-1;;;;;;2887:34:1;;;;2952:9;-1:-1:-1;;;;;2927:35:1;:15;;;:35;3000:22;3015:7;3000:12;:22;:::i;:::-;-1:-1:-1;;;;;2968:55:1;-1:-1:-1;2968:22:1;;:55;-1:-1:-1;;;;;3029:31:1;;-1:-1:-1;3029:20:1;;:31;-1:-1:-1;3090:15:1;3066:40;;;;:14;;;:40;3112:37;;:19;;;:37;3158:10;;3155:44;;3175:16;;;:24;;;3155:44;3208:22;;3205:80;;3237:28;;;:48;;;3205:80;3291:8;:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3291:26:1;;;;;;;;-1:-1:-1;;;;3291:26:1;-1:-1:-1;;;;;;;;3291:26:1;;;;;-1:-1:-1;;;;3291:26:1;-1:-1:-1;;;3291:26:1;;;;;;;;;-1:-1:-1;;;;3291:26:1;-1:-1:-1;;;;3291:26:1;;;;;-1:-1:-1;;;;;3291:26:1;-1:-1:-1;;;3291:26:1;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;3291:26:1;-1:-1:-1;;;;;3291:26:1;;;;;;;;;;;;;;;;-1:-1:-1;3291:26:1;;;;;;;;;-1:-1:-1;;;;;;2559:763:1:o;4231:179::-;-1:-1:-1;;;;;4330:17:1;;;;;;:6;:17;;;;;;-1:-1:-1;4296:28:1;1150:4;4296:12;:28;:::i;:::-;:30;;;;:::i;:::-;:51;4293:84;;4353:24;4367:9;4353:13;:24::i;:::-;4382:23;4395:9;4382:12;:23::i;:::-;4231:179;:::o;1520:193::-;1582:7;1598:11;1595:114;;-1:-1:-1;1637:17:1;;1623:32;;;;:13;:32;;;;;;1616:39;;1595:114;-1:-1:-1;1682:21:1;;;;:13;:21;;;;;;1595:114;1520:193;;;:::o;1975:575::-;2108:3;2098:7;:13;2090:22;;;;;;2138:6;2126:9;:18;2118:27;;;;;;2169:7;2159;:17;2151:26;;;;;;2201:6;2191:7;:16;;;2183:25;;;;;;2219:26;;:::i;:::-;-1:-1:-1;;;;;;2251:34:1;;;;2316:9;-1:-1:-1;;;;;2291:35:1;:15;;;:35;2364:22;2379:7;2364:12;:22;:::i;:::-;-1:-1:-1;;;;;2332:55:1;;;-1:-1:-1;2332:22:1;;:55;;;-1:-1:-1;;;;;2393:31:1;;;-1:-1:-1;2393:20:1;;:31;;;-1:-1:-1;2454:15:1;;2430:40;;;;:14;;;:40;;;2476:37;;;:19;;;:37;;;-1:-1:-1;2519:26:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;2519:26:1;;;;;;;;;-1:-1:-1;;2519:26:1;;;;;;;;-1:-1:-1;;;;2519:26:1;-1:-1:-1;;;2519:26:1;;;;;;;;;;;-1:-1:-1;;;;2519:26:1;-1:-1:-1;;;2519:26:1;;;;;;;;;;;;-1:-1:-1;;;;2519:26:1;-1:-1:-1;;;2519:26:1;;;;;;;;;;;-1:-1:-1;;;;;2519:26:1;-1:-1:-1;;;2519:26:1;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;2519:26:1;;;;;;;;;;;;;;;;;-1:-1:-1;2519:26:1;;;;;;;;;;;;-1:-1:-1;;1975:575:1:o;4419:1315::-;4494:14;-1:-1:-1;;;;;4480:28:1;:10;:28;4472:37;;;;;;-1:-1:-1;;;;;4522:17:1;;;;;;:6;:17;;;;;;4514:31;;;;;;4554:19;4576:28;1150:4;4576:12;:28;:::i;:::-;:30;;4605:1;4576:30;:::i;:::-;4554:52;-1:-1:-1;4618:13:1;:43;4632:28;1150:4;4632:12;:28;:::i;:::-;4618:43;;;;;;;;;;;;4665:1;4618:48;4615:392;;;4697:11;4676:17;;:32;4673:329;;;4719:26;;:31;4716:138;;4819:26;;4805:41;;;;:13;:41;;;;;;;;;4773:28;1150:4;4773:12;:28;:::i;:::-;4759:43;;;;;;;;;;;-1:-1:-1;4759:43:1;:87;4716:138;4673:329;;;4879:17;;:22;4876:120;;4970:17;;4956:32;;;;:13;:32;;;;;;;;;4924:28;1150:4;4924:12;:28;:::i;:::-;4910:43;;;;;;;;;;;-1:-1:-1;4910:43:1;:78;4876:120;5014:26;;;;:13;:26;;;;;;5011:183;;5055:17;;:22;;;;:58;;;5102:11;5081:17;;:32;;5055:58;5052:137;;;5164:17;;5150:32;;;;:13;:32;;;;;;;5121:26;;;;;:61;5052:137;5226:11;5205:17;;:32;5202:131;;5273:17;;;5244:26;:46;5296:31;;;5202:131;-1:-1:-1;;;;;5355:23:1;;5341:11;5355:23;;;:12;:23;;;;;;;;;5383:26;;;:13;:26;;;;;:33;;5355:23;;;;5383:33;;5355:23;;5383:33;:::i;:::-;;;;-1:-1:-1;5445:13:1;;-1:-1:-1;5457:1:1;5445:11;:13;:::i;:::-;-1:-1:-1;;;;;5424:17:1;;;;;;:6;:17;;;;;;:34;5421:243;;5497:3;5465:13;:28;5479:13;5491:1;5479:11;:13;:::i;:::-;5465:28;;;;;;;;;;;;:35;;;;;;;:::i;:::-;;;;-1:-1:-1;5535:13:1;;-1:-1:-1;5547:1:1;5535:11;:13;:::i;:::-;5506:26;:42;5562:13;:28;5576:13;5588:1;5576:11;:13;:::i;:::-;5562:28;;;;;;;;;;;;5594:1;5562:33;5559:100;;;5619:18;:33;5638:13;5650:1;5638:11;:13;:::i;:::-;5619:33;;;;;;;;;;;;5603:12;;:49;;;;;;;:::i;:::-;;;;-1:-1:-1;;5559:100:1;-1:-1:-1;;;;;;;5668:23:1;5694:1;5668:23;;;:12;:23;;;;;;;;:27;;;5704:6;:17;;;;;:21;4419:1315::o;3458:764::-;3549:14;-1:-1:-1;;;;;3535:28:1;:10;:28;3527:68;;;;-1:-1:-1;;;3527:68:1;;7560:2:13;3527:68:1;;;7542:21:13;7599:2;7579:18;;;7572:30;7638:29;7618:18;;;7611:57;7685:18;;3527:68:1;7532:177:13;3527:68:1;-1:-1:-1;;;;;3608:17:1;;;;;;:6;:17;;;;;;:22;3600:50;;;;-1:-1:-1;;;3600:50:1;;5832:2:13;3600:50:1;;;5814:21:13;5871:2;5851:18;;;5844:30;-1:-1:-1;;;5890:18:13;;;5883:45;5945:18;;3600:50:1;5804:165:13;3600:50:1;3673:1;3663:7;:11;3655:33;;;;-1:-1:-1;;;3655:33:1;;7223:2:13;3655:33:1;;;7205:21:13;7262:1;7242:18;;;7235:29;-1:-1:-1;;;7280:18:13;;;7273:39;7329:18;;3655:33:1;7195:158:13;3655:33:1;3697:19;3719:28;1150:4;3719:12;:28;:::i;:::-;:30;;3748:1;3719:30;:::i;:::-;-1:-1:-1;;;;;3758:17:1;;;;;;:6;:17;;;;;;;;:31;;;3797:26;;;:13;:26;;;;;;3758:31;;-1:-1:-1;3794:183:1;;3838:17;;:22;;;;:58;;;3885:11;3864:17;;:32;;3838:58;3835:137;;;3947:17;;3933:32;;;;:13;:32;;;;;;;3904:26;;;;;:61;3835:137;3985:11;4011:26;;;:13;:26;;;;;:33;;3999:7;;;;4011:26;:33;;3999:7;;4011:33;:::i;:::-;;;;-1:-1:-1;;;;;;;4049:23:1;;;;;;:12;:23;;;;;:29;;;4090:17;;:32;;4087:131;;-1:-1:-1;4158:17:1;;;4129:26;:46;4181:31;-1:-1:-1;;3458:764:1:o;5743:548::-;5817:7;5833:21;;;:13;:21;;;;;;5830:134;;5869:13;:23;5883:8;5890:1;5883:6;:8;:::i;:::-;5869:23;;;;;;;;;;;;5896:1;5869:28;5866:93;;5929:13;:23;5943:8;5950:1;5943:6;:8;:::i;:::-;5929:23;;;;;;;;;;;;;;-1:-1:-1;5929:23:1;;;;5905:21;;;:13;:21;;;;:47;5866:93;6004:1;5975:26;;;:18;:26;;;;;;:30;5972:315;;-1:-1:-1;;;;;6033:23:1;;6012:18;6033:23;;;:12;:23;;;;;;;;;6122:21;;;:13;:21;;;;;;6084:18;:26;;;;;;;6033:23;;6012:18;6122:21;6084:37;;6033:23;;6084:37;:::i;:::-;:59;;;;:::i;:::-;6207:21;;;;:13;:21;;;;;;;;;;6155:74;;8451:25:13;;;8492:18;;;8485:34;;;8535:18;;;8528:34;;;8593:2;8578:18;;8571:34;6155:74:1;;8451:25:13;;-1:-1:-1;;;;;;6155:74:1;;;;;;;;8438:3:13;6155:74:1;;;6247:6;-1:-1:-1;6240:13:1;;-1:-1:-1;6240:13:1;5972:315;-1:-1:-1;6280:1:1;5972:315;5743:548;;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:173:13:-;82:20;;-1:-1:-1;;;;;131:31:13;;121:42;;111:2;;177:1;174;167:12;192:181;259:20;;-1:-1:-1;;;;;;308:40:13;;298:51;;288:2;;363:1;360;353:12;378:163;445:20;;505:10;494:22;;484:33;;474:2;;531:1;528;521:12;546:196;;658:2;646:9;637:7;633:23;629:32;626:2;;;679:6;671;664:22;626:2;707:29;726:9;707:29;:::i;:::-;697:39;616:126;-1:-1:-1;;;616:126:13:o;747:264::-;;;876:2;864:9;855:7;851:23;847:32;844:2;;;897:6;889;882:22;844:2;925:29;944:9;925:29;:::i;:::-;915:39;1001:2;986:18;;;;973:32;;-1:-1:-1;;;834:177:13:o;1016:409::-;;;;;1177:3;1165:9;1156:7;1152:23;1148:33;1145:2;;;1199:6;1191;1184:22;1145:2;1227:28;1245:9;1227:28;:::i;:::-;1217:38;;1274;1308:2;1297:9;1293:18;1274:38;:::i;:::-;1264:48;;1359:2;1348:9;1344:18;1331:32;1321:42;;1382:37;1415:2;1404:9;1400:18;1382:37;:::i;:::-;1372:47;;1135:290;;;;;;;:::o;1430:547::-;;;;;;;1625:3;1613:9;1604:7;1600:23;1596:33;1593:2;;;1647:6;1639;1632:22;1593:2;1675:28;1693:9;1675:28;:::i;:::-;1665:38;;1722;1756:2;1745:9;1741:18;1722:38;:::i;:::-;1712:48;;1807:2;1796:9;1792:18;1779:32;1769:42;;1830:37;1863:2;1852:9;1848:18;1830:37;:::i;:::-;1820:47;;1914:3;1903:9;1899:19;1886:33;1876:43;;1966:3;1955:9;1951:19;1938:33;1928:43;;1583:394;;;;;;;;:::o;1982:330::-;;;;2127:2;2115:9;2106:7;2102:23;2098:32;2095:2;;;2148:6;2140;2133:22;2095:2;2176:28;2194:9;2176:28;:::i;:::-;2166:38;2251:2;2236:18;;2223:32;;-1:-1:-1;2302:2:13;2287:18;;;2274:32;;2085:227;-1:-1:-1;;;2085:227:13:o;2317:190::-;;2429:2;2417:9;2408:7;2404:23;2400:32;2397:2;;;2450:6;2442;2435:22;2397:2;-1:-1:-1;2478:23:13;;2387:120;-1:-1:-1;2387:120:13:o;2728:430::-;;2895:6;2889:13;2920:3;2932:129;2946:6;2943:1;2940:13;2932:129;;;3044:4;3028:14;;;3024:25;;3018:32;3005:11;;;2998:53;2961:12;2932:129;;;3079:6;3076:1;3073:13;3070:2;;;3114:3;3105:6;3100:3;3096:16;3089:29;3070:2;-1:-1:-1;3136:16:13;;;;;2865:293;-1:-1:-1;;2865:293:13:o;3595:1574::-;3814:2;3866:21;;;3936:13;;3839:18;;;3958:22;;;3595:1574;;3814:2;3999;;4017:18;;;;4058:15;;;3595:1574;4104:1039;4118:6;4115:1;4112:13;4104:1039;;;4177:13;;4219:9;;-1:-1:-1;;;;;;4215:44:13;4203:57;;4299:11;;;4293:18;-1:-1:-1;;;;;4386:21:13;;;4372:12;;;4365:43;4452:11;;;4446:18;4442:27;4428:12;;;4421:49;4493:4;4538:11;;;4532:18;2705:10;2694:22;;;4597:12;;;2682:35;;;;4633:4;4678:11;;;4672:18;2694:22;;;4737:12;;;2682:35;4773:4;4818:11;;;4812:18;-1:-1:-1;;;;;2586:31:13;4886:12;;;2574:44;-1:-1:-1;4966:11:13;;;4960:18;4946:12;;;4939:40;5002:4;5046:11;;;5040:18;5026:12;;;5019:40;5088:6;5079:16;;;;5118:15;;;;-1:-1:-1;4133:9:13;4104:1039;;;-1:-1:-1;5160:3:13;;3794:1375;-1:-1:-1;;;;;;;3794:1375:13:o;8616:128::-;;8687:1;8683:6;8680:1;8677:13;8674:2;;;8693:18;;:::i;:::-;-1:-1:-1;8729:9:13;;8664:80::o;8749:236::-;;-1:-1:-1;;;;;8854:10:13;;;8884;;;8914:12;;;8906:21;;8903:2;;;8930:18;;:::i;:::-;8966:13;;8796:189;-1:-1:-1;;;;8796:189:13:o;8990:120::-;;9056:1;9046:2;;9061:18;;:::i;:::-;-1:-1:-1;9095:9:13;;9036:74::o;9115:199::-;;-1:-1:-1;;;;;9218:10:13;;;;9237:2;;9254:18;;:::i;:::-;9292:10;;9288:20;;;;;9160:154;-1:-1:-1;;9160:154:13:o;9319:168::-;;9425:1;9421;9417:6;9413:14;9410:1;9407:21;9402:1;9395:9;9388:17;9384:45;9381:2;;;9432:18;;:::i;:::-;-1:-1:-1;9472:9:13;;9371:116::o;9492:270::-;;-1:-1:-1;;;;;9601:10:13;;;9631;;;9664:11;;9657:19;9686:12;;;9678:21;;9653:47;9650:2;;;9703:18;;:::i;:::-;9743:13;;9543:219;-1:-1:-1;;;;9543:219:13:o;9767:125::-;;9835:1;9832;9829:8;9826:2;;;9840:18;;:::i;:::-;-1:-1:-1;9877:9:13;;9816:76::o;9897:135::-;;-1:-1:-1;;9957:17:13;;9954:2;;;9977:18;;:::i;:::-;-1:-1:-1;10024:1:13;10013:13;;9944:88::o;10037:127::-;10098:10;10093:3;10089:20;10086:1;10079:31;10129:4;10126:1;10119:15;10153:4;10150:1;10143:15;10169:127;10230:10;10225:3;10221:20;10218:1;10211:31;10261:4;10258:1;10251:15;10285:4;10282:1;10275:15",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    129,
    8903
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x12A JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x75AD5DBE GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xC2927D85 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xC2927D85 EQ PUSH2 0x322 JUMPI DUP1 PUSH4 0xE0416179 EQ PUSH2 0x34F JUMPI DUP1 PUSH4 0xE1932538 EQ PUSH2 0x36F JUMPI DUP1 PUSH4 0xF7CA0D66 EQ PUSH2 0x38F JUMPI DUP1 PUSH4 0xFB10C7B1 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0xFCF6C903 EQ PUSH2 0x3D2 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x75AD5DBE EQ PUSH2 0x242 JUMPI DUP1 PUSH4 0x82E4EDA4 EQ PUSH2 0x262 JUMPI DUP1 PUSH4 0x8D4B3223 EQ PUSH2 0x28F JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x2A2 JUMPI DUP1 PUSH4 0x9563DCEB EQ PUSH2 0x2EE JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x64245D01 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x64245D01 EQ PUSH2 0x1C7 JUMPI DUP1 PUSH4 0x6DD4E3AC EQ PUSH2 0x1DC JUMPI DUP1 PUSH4 0x6E5AB542 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x70762D2F EQ PUSH2 0x20F JUMPI DUP1 PUSH4 0x7568E9D2 EQ PUSH2 0x222 JUMPI PUSH2 0x12A JUMP JUMPDEST DUP1 PUSH4 0x8F438F7 EQ PUSH2 0x12F JUMPI DUP1 PUSH4 0x9468B4C EQ PUSH2 0x158 JUMPI DUP1 PUSH4 0x15B3C6EB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x190 JUMPI DUP1 PUSH4 0x455BFBF2 EQ PUSH2 0x1A5 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x13B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x164 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH2 0x173 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C1B JUMP JUMPDEST PUSH2 0x3FF JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x186 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH1 0x7 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x19C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH2 0xBA6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1BA PUSH2 0xC83 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14F SWAP2 SWAP1 PUSH2 0x1C9E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x145 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH2 0x1F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0xD65 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x20A CALLDATASIZE PUSH1 0x4 PUSH2 0x1C4D JUMP JUMPDEST PUSH2 0xEE8 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x21D CALLDATASIZE PUSH1 0x4 PUSH2 0x1BBD JUMP JUMPDEST PUSH2 0x102C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x22E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0x125A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x24E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x25D CALLDATASIZE PUSH1 0x4 PUSH2 0x1C4D JUMP JUMPDEST PUSH2 0x12A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x26E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x27D CALLDATASIZE PUSH1 0x4 PUSH2 0x1B27 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH2 0x178 PUSH2 0x29D CALLDATASIZE PUSH1 0x4 PUSH2 0x1B71 JUMP JUMPDEST PUSH2 0x12DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH32 0x0 DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x14F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2FA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D6 PUSH32 0x0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x32E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x33D CALLDATASIZE PUSH1 0x4 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH2 0x36A CALLDATASIZE PUSH1 0x4 PUSH2 0x1B27 JUMP JUMPDEST PUSH2 0x14E6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x178 PUSH2 0x38A CALLDATASIZE PUSH1 0x4 PUSH2 0x1B48 JUMP JUMPDEST PUSH2 0x1788 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH1 0x8 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B1 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x3C0 CALLDATASIZE PUSH1 0x4 PUSH2 0x1C4D JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DE JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x145 PUSH2 0x3ED CALLDATASIZE PUSH1 0x4 PUSH2 0x1B27 JUMP JUMPDEST PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x47C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265737472696374656420746F20636F6E7472616374206F776E657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT AND PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x4A8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0xC0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT AND EQ PUSH2 0x4D0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 DUP2 PUSH2 0x4E1 PUSH2 0x3E8 NUMBER PUSH2 0x1DCB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x568 JUMPI PUSH2 0x504 PUSH2 0x3E8 NUMBER PUSH2 0x1DCB JUMP JUMPDEST PUSH2 0x50F SWAP1 PUSH1 0x1 PUSH2 0x1D88 JUMP JUMPDEST PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0x540 JUMPI PUSH1 0x8 SLOAD ISZERO PUSH2 0x53B JUMPI PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x53B JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x563 JUMP JUMPDEST PUSH1 0x7 SLOAD ISZERO PUSH2 0x563 JUMPI PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x563 JUMPI POP PUSH1 0x1 JUMPDEST PUSH2 0x56C JUMP JUMPDEST POP PUSH1 0x1 JUMPDEST NUMBER PUSH1 0x0 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x58E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND LT PUSH2 0xA69 JUMPI PUSH1 0x0 DUP1 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x5D6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x1 PUSH1 0x4 SWAP1 SWAP3 MUL ADD ADD SLOAD DUP2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP3 POP PUSH1 0xA SWAP1 DUP3 SWAP1 DUP7 SWAP1 DUP2 LT PUSH2 0x61B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH2 0x646 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1DDF JUMP JUMPDEST PUSH2 0x651 SWAP1 PUSH1 0x8 PUSH2 0x1E24 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND SWAP1 POP PUSH1 0x0 DUP1 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0x67E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 ADD PUSH1 0x1C SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH4 0xFFFFFFFF AND SWAP1 POP PUSH1 0x0 DUP1 DUP7 DUP2 SLOAD DUP2 LT PUSH2 0x6C4 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x2 ADD SLOAD SWAP1 POP PUSH1 0x0 DUP1 DUP8 DUP2 SLOAD DUP2 LT PUSH2 0x6FA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x3 ADD SLOAD SWAP1 POP DUP6 ISZERO PUSH2 0x799 JUMPI DUP4 PUSH1 0x0 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x736 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH2 0x761 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1E53 JUMP JUMPDEST PUSH1 0x3 PUSH1 0x0 PUSH2 0x771 PUSH2 0x3E8 NUMBER PUSH2 0x1DCB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x78E SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x7F3 SWAP1 POP JUMP JUMPDEST DUP4 PUSH1 0x0 DUP9 DUP2 SLOAD DUP2 LT PUSH2 0x7BB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH2 0x7E6 SWAP2 SWAP1 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x7F0 SWAP1 DUP6 PUSH2 0x1D88 JUMP JUMPDEST SWAP4 POP JUMPDEST DUP4 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x805 SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x0 DUP1 SLOAD DUP9 SWAP1 DUP2 LT PUSH2 0x82C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP2 DUP2 SSTORE PUSH1 0x1 DUP1 DUP3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x2 DUP3 ADD DUP4 SWAP1 SSTORE PUSH1 0x3 SWAP1 SWAP2 ADD DUP3 SWAP1 SSTORE DUP1 SLOAD SWAP2 PUSH2 0x86C DUP4 PUSH2 0x1E6A JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH1 0x0 DUP3 PUSH1 0x0 EQ DUP1 ISZERO PUSH2 0x881 JUMPI POP DUP2 ISZERO JUMPDEST ISZERO PUSH2 0x92D JUMPI DUP6 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH4 0xFFFFFFFF AND DUP11 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x8AA SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x13E0B217 PUSH1 0xE1 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x8DF SWAP2 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x91D JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x922 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP DUP1 SWAP2 POP POP PUSH2 0x9D9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x24 DUP2 ADD DUP11 SWAP1 MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP1 PUSH4 0xFFFFFFFF DUP7 AND SWAP1 PUSH1 0x84 ADD PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP2 DUP2 MSTORE PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH4 0x5D7F703 PUSH1 0xE2 SHL OR SWAP1 MSTORE MLOAD PUSH2 0x990 SWAP2 SWAP1 PUSH2 0x1C65 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP8 CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH1 0x0 DUP2 EQ PUSH2 0x9CE JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH1 0x0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x9D3 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP1 SWAP2 POP POP JUMPDEST DUP1 PUSH2 0xA20 JUMPI PUSH32 0x86ABF6250EBAADBB42DEDF0794F338470DFBA82EED923B669F0FCE48A5CE5ABB DUP11 DUP8 DUP8 DUP12 PUSH1 0x40 MLOAD PUSH2 0xA13 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH2 0xA5E JUMP JUMPDEST PUSH32 0x910C973544A08BC7A636EA9436726896A35FB16763F6A536991139FA41A7F0E5 DUP11 DUP8 DUP8 DUP12 PUSH1 0x40 MLOAD PUSH2 0xA55 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1D58 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP PUSH2 0xBA0 JUMP JUMPDEST DUP1 ISZERO PUSH2 0xAE9 JUMPI PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xA90 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB PUSH1 0x1 PUSH1 0x40 SHL SWAP1 SWAP2 DIV AND SWAP1 PUSH1 0x3 SWAP1 PUSH2 0xAC1 PUSH2 0x3E8 NUMBER PUSH2 0x1DCB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xADE SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0xB4F SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB0A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0xB49 SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xB70 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP2 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x2 DUP2 ADD DUP3 SWAP1 SSTORE PUSH1 0x3 ADD SSTORE JUMPDEST POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0xC1E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1C PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5265737472696374656420746F20636F6E7472616374206F776E657200000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x473 JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 SWAP1 SSTORE PUSH1 0x40 MLOAD SWAP1 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 SWAP1 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xC7F JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x0 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xD5C JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x4 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD PUSH1 0xC0 DUP2 DUP2 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT AND DUP6 MSTORE PUSH1 0x1 PUSH1 0x40 SHL DUP3 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND DUP7 DUP9 ADD MSTORE PUSH1 0x1 PUSH1 0x80 SHL DUP4 DIV AND SWAP4 DUP6 ADD SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x1 PUSH1 0xC0 SHL DUP2 DIV PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH1 0x60 DUP7 ADD MSTORE PUSH1 0x1 PUSH1 0xE0 SHL SWAP1 SWAP2 DIV AND PUSH1 0x80 DUP5 ADD MSTORE PUSH1 0x1 DUP1 DUP3 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0xA0 DUP6 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 ADD SLOAD PUSH1 0xE0 DUP4 ADD MSTORE SWAP1 DUP4 MSTORE SWAP1 SWAP3 ADD SWAP2 ADD PUSH2 0xCA7 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0xDB9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xC PUSH1 0x24 DUP3 ADD MSTORE PUSH12 0x2737BA10309039BA30B5B2B9 PUSH1 0xA1 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x473 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH2 0xDE0 PUSH2 0x3E8 NUMBER PUSH2 0x1DCB JUMP JUMPDEST PUSH2 0xDEA SWAP2 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST LT ISZERO PUSH2 0xE2F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x139BC8199D5B1B0818DA58DB19481CDD185AD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x473 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD JUMPDEST PUSH1 0x1 PUSH2 0xE57 PUSH2 0x3E8 NUMBER PUSH2 0x1DCB JUMP JUMPDEST PUSH2 0xE61 SWAP2 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST DUP2 GT PUSH2 0xE8F JUMPI PUSH2 0xE71 DUP2 DUP5 PUSH2 0x1965 JUMP JUMPDEST PUSH2 0xE7B SWAP1 DUP4 PUSH2 0x1D88 JUMP JUMPDEST SWAP2 POP DUP1 PUSH2 0xE87 DUP2 PUSH2 0x1E6A JUMP JUMPDEST SWAP2 POP POP PUSH2 0xE49 JUMP JUMPDEST POP PUSH2 0xE9C PUSH2 0x3E8 NUMBER PUSH2 0x1DCB JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SWAP4 SWAP1 SWAP4 SSTORE SWAP2 MLOAD SWAP1 SWAP2 DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 DUP5 SWAP2 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0xEE3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE LT PUSH2 0xEFC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 CALLVALUE GT PUSH2 0xF09 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF33 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH2 0xF5E SWAP1 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND CALLVALUE PUSH2 0x1D88 JUMP JUMPDEST LT PUSH2 0xF68 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xF89 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SLOAD PUSH1 0x1 PUSH1 0x80 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0xFB3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE PUSH1 0x0 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xFD5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x8 SWAP1 PUSH2 0x1005 SWAP1 DUP5 SWAP1 PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH2 0x1DA0 JUMP JUMPDEST SWAP3 POP PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH1 0x64 DUP5 GT PUSH2 0x1039 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE LT PUSH2 0x104D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xF4240 DUP5 LT PUSH2 0x105C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x7A120 DUP4 PUSH4 0xFFFFFFFF AND LT PUSH2 0x1071 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1079 PUSH2 0x1AA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT DUP8 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB CALLVALUE AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x109F DUP6 NUMBER PUSH2 0x1D88 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB AND PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND PUSH1 0xA0 DUP3 ADD MSTORE PUSH1 0x0 SLOAD PUSH4 0xFFFFFFFF SWAP1 DUP2 AND PUSH1 0x60 DUP4 ADD MSTORE DUP5 AND PUSH1 0x80 DUP3 ADD MSTORE DUP3 ISZERO PUSH2 0x10E1 JUMPI PUSH1 0xC0 DUP2 ADD DUP4 SWAP1 MSTORE JUMPDEST DUP2 ISZERO PUSH2 0x10EF JUMPI PUSH1 0xE0 DUP2 ADD DUP3 SWAP1 MSTORE JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP1 MSTORE DUP2 MLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 PUSH1 0x4 SWAP1 SWAP3 MUL SWAP2 DUP3 ADD DUP1 SLOAD PUSH1 0x20 DUP6 ADD MLOAD PUSH1 0x40 DUP7 ADD MLOAD PUSH1 0x60 DUP8 ADD MLOAD PUSH1 0x80 DUP9 ADD MLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT SWAP1 SWAP5 AND PUSH1 0xC0 SWAP7 DUP8 SHR OR PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP5 DUP6 AND MUL OR PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP4 SWAP1 SWAP3 AND SWAP3 SWAP1 SWAP3 MUL OR PUSH4 0xFFFFFFFF PUSH1 0xC0 SHL NOT AND PUSH1 0x1 PUSH1 0xC0 SHL PUSH4 0xFFFFFFFF SWAP3 DUP4 AND MUL OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0xE0 SHL SWAP2 SWAP1 SWAP3 AND MUL OR SWAP1 SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP3 ADD MLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E565 DUP3 ADD SSTORE PUSH1 0xE0 SWAP1 SWAP2 ADD MLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566 SWAP1 SWAP2 ADD SSTORE POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH2 0x1281 PUSH2 0x3E8 NUMBER PUSH2 0x1DCB JUMP JUMPDEST PUSH2 0x128B SWAP2 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST LT PUSH2 0x1299 JUMPI PUSH2 0x1299 DUP2 PUSH2 0xD65 JUMP JUMPDEST PUSH2 0x12A2 DUP2 PUSH2 0x14E6 JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH2 0x12C4 JUMPI POP PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x12D5 JUMP JUMPDEST POP PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x64 DUP3 GT PUSH2 0x12E7 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH8 0xDE0B6B3A7640000 CALLVALUE LT PUSH2 0x12FB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0xF4240 DUP3 LT PUSH2 0x130A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH3 0x7A120 DUP2 PUSH4 0xFFFFFFFF AND LT PUSH2 0x131F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x1327 PUSH2 0x1AA0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT DUP6 AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB CALLVALUE AND PUSH1 0x20 DUP3 ADD MSTORE PUSH2 0x134D DUP4 NUMBER PUSH2 0x1D88 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND PUSH1 0x40 DUP4 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND PUSH1 0xA0 DUP5 ADD SWAP1 DUP2 MSTORE PUSH1 0x0 DUP1 SLOAD PUSH4 0xFFFFFFFF DUP1 DUP3 AND PUSH1 0x60 DUP9 ADD SWAP1 DUP2 MSTORE SWAP8 DUP2 AND PUSH1 0x80 DUP9 ADD SWAP1 DUP2 MSTORE PUSH1 0x1 DUP4 ADD DUP5 SSTORE SWAP3 DUP1 MSTORE DUP7 MLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563 PUSH1 0x4 SWAP1 SWAP4 MUL SWAP3 DUP4 ADD DUP1 SLOAD PUSH1 0x20 DUP11 ADD MLOAD SWAP8 MLOAD SWAP11 MLOAD SWAP6 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT SWAP1 SWAP2 AND PUSH1 0xC0 SWAP4 DUP5 SHR OR PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL SWAP9 DUP11 AND SWAP9 SWAP1 SWAP9 MUL SWAP8 SWAP1 SWAP8 OR PUSH8 0xFFFFFFFFFFFFFFFF PUSH1 0x80 SHL NOT AND PUSH1 0x1 PUSH1 0x80 SHL SWAP11 SWAP1 SWAP9 AND SWAP10 SWAP1 SWAP10 MUL SWAP7 SWAP1 SWAP7 OR PUSH4 0xFFFFFFFF PUSH1 0xC0 SHL NOT AND PUSH1 0x1 PUSH1 0xC0 SHL SWAP4 DUP3 AND SWAP4 SWAP1 SWAP4 MUL SWAP3 SWAP1 SWAP3 OR PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB AND PUSH1 0x1 PUSH1 0xE0 SHL SWAP5 SWAP1 SWAP3 AND SWAP4 SWAP1 SWAP4 MUL OR SWAP1 SWAP5 SSTORE SWAP3 MLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564 DUP5 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP2 SWAP1 SWAP7 AND OR SWAP1 SWAP5 SSTORE SWAP3 DUP4 ADD MLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E565 DUP3 ADD SSTORE PUSH1 0xE0 SWAP1 SWAP3 ADD MLOAD PUSH32 0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566 SWAP1 SWAP3 ADD SWAP2 SWAP1 SWAP2 SSTORE POP POP JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x151B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x153D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x154B PUSH2 0x3E8 NUMBER PUSH2 0x1DCB JUMP JUMPDEST PUSH2 0x1556 SWAP1 PUSH1 0x1 PUSH2 0x1D88 JUMP JUMPDEST SWAP1 POP PUSH1 0x4 PUSH1 0x0 PUSH2 0x1568 PUSH2 0x3E8 NUMBER PUSH2 0x1DCB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x1604 JUMPI DUP1 PUSH1 0x7 SLOAD EQ ISZERO PUSH2 0x15C9 JUMPI PUSH1 0x8 SLOAD ISZERO PUSH2 0x15C4 JUMPI PUSH1 0x8 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP2 PUSH2 0x15B2 PUSH2 0x3E8 NUMBER PUSH2 0x1DCB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SSTORE JUMPDEST PUSH2 0x1604 JUMP JUMPDEST PUSH1 0x7 SLOAD ISZERO PUSH2 0x1604 JUMPI PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SLOAD SWAP2 PUSH2 0x15F2 PUSH2 0x3E8 NUMBER PUSH2 0x1DCB JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH2 0x1649 JUMPI PUSH1 0x7 SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x162A JUMPI POP DUP1 PUSH1 0x7 SLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x1649 JUMPI PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP4 DUP4 MSTORE SWAP2 KECCAK256 SSTORE JUMPDEST DUP1 PUSH1 0x7 SLOAD EQ PUSH2 0x165D JUMPI PUSH1 0x7 DUP1 SLOAD PUSH1 0x8 SSTORE DUP2 SWAP1 SSTORE JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP5 DUP5 MSTORE PUSH1 0x4 SWAP1 SWAP3 MSTORE DUP3 KECCAK256 DUP1 SLOAD SWAP2 SWAP3 DUP4 SWAP3 PUSH2 0x1694 SWAP1 DUP5 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x16A5 SWAP1 POP PUSH1 0x1 DUP4 PUSH2 0x1E53 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD GT PUSH2 0x175F JUMPI DUP1 PUSH1 0x4 PUSH1 0x0 PUSH2 0x16D3 PUSH1 0x1 DUP7 PUSH2 0x1E53 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x16F0 SWAP2 SWAP1 PUSH2 0x1E53 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP PUSH2 0x1701 SWAP1 POP PUSH1 0x1 DUP4 PUSH2 0x1E53 JUMP JUMPDEST PUSH1 0x8 SSTORE PUSH1 0x4 PUSH1 0x0 PUSH2 0x1713 PUSH1 0x1 DUP6 PUSH2 0x1E53 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x0 EQ ISZERO PUSH2 0x175F JUMPI PUSH1 0x3 PUSH1 0x0 PUSH2 0x1739 PUSH1 0x1 DUP6 PUSH2 0x1E53 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x1759 SWAP2 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP JUMPDEST POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 SWAP1 SSTORE PUSH1 0x5 SWAP1 SWAP2 MSTORE DUP2 KECCAK256 SSTORE JUMP JUMPDEST CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x1800 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1B PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E697469617465642062792077726F6E6720636F6E74726163740000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x473 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x1858 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x416C7265616479207374616B696E67 PUSH1 0x88 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x473 JUMP JUMPDEST PUSH1 0x0 DUP2 GT PUSH2 0x1894 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x9 PUSH1 0x24 DUP3 ADD MSTORE PUSH9 0x4E6F20546F6B656E73 PUSH1 0xB8 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x473 JUMP JUMPDEST PUSH1 0x0 PUSH2 0x18A2 PUSH2 0x3E8 NUMBER PUSH2 0x1DCB JUMP JUMPDEST PUSH2 0x18AD SWAP1 PUSH1 0x1 PUSH2 0x1D88 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP5 SWAP1 SSTORE DUP4 DUP4 MSTORE PUSH1 0x4 SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD SWAP1 SWAP2 POP PUSH2 0x190F JUMPI PUSH1 0x7 SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x18F0 JUMPI POP DUP1 PUSH1 0x7 SLOAD EQ ISZERO JUMPDEST ISZERO PUSH2 0x190F JUMPI PUSH1 0x7 SLOAD PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 SLOAD DUP4 DUP4 MSTORE SWAP2 KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 DUP4 SWAP3 SWAP2 PUSH2 0x192F SWAP1 DUP5 SWAP1 PUSH2 0x1D88 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 SWAP1 SSTORE PUSH1 0x7 SLOAD DUP3 EQ PUSH2 0xBA0 JUMPI POP PUSH1 0x7 DUP1 SLOAD PUSH1 0x8 SSTORE SSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD PUSH2 0x19CD JUMPI PUSH1 0x4 PUSH1 0x0 PUSH2 0x1987 PUSH1 0x1 DUP7 PUSH2 0x1E53 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 SLOAD PUSH1 0x0 EQ PUSH2 0x19CD JUMPI PUSH1 0x4 PUSH1 0x0 PUSH2 0x19AC PUSH1 0x1 DUP7 PUSH2 0x1E53 JUMP JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 SLOAD DUP7 DUP3 MSTORE PUSH1 0x4 SWAP1 SWAP4 MSTORE KECCAK256 SSTORE JUMPDEST PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x1A96 JUMPI PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x6 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SLOAD DUP7 DUP5 MSTORE PUSH1 0x4 DUP4 MSTORE DUP2 DUP5 KECCAK256 SLOAD PUSH1 0x3 SWAP1 SWAP4 MSTORE SWAP1 DUP4 KECCAK256 SLOAD SWAP1 SWAP3 SWAP2 SWAP1 PUSH2 0x1A20 SWAP1 DUP5 SWAP1 PUSH2 0x1E05 JUMP JUMPDEST PUSH2 0x1A2A SWAP2 SWAP1 PUSH2 0x1DCB JUMP JUMPDEST PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 SLOAD DUP3 MLOAD DUP5 DUP2 MSTORE SWAP2 DUP3 ADD DUP10 SWAP1 MSTORE DUP2 DUP4 ADD DUP7 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD MSTORE SWAP1 MLOAD SWAP2 SWAP3 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 PUSH32 0xC652E5A6FBF70DB834261CC5FA689D2B62011AE542C2C79939010DED9FDCA2A7 SWAP2 DUP2 SWAP1 SUB PUSH1 0x80 ADD SWAP1 LOG2 SWAP2 POP PUSH2 0x1A9A SWAP1 POP JUMP JUMPDEST POP PUSH1 0x0 JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH2 0x100 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x80 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xA0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xC0 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0xE0 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x12D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x12D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH4 0xFFFFFFFF DUP2 AND DUP2 EQ PUSH2 0x12D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1B38 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1B41 DUP3 PUSH2 0x1AE4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1B5A JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x1B63 DUP4 PUSH2 0x1AE4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x1B86 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1B8F DUP6 PUSH2 0x1AFB JUMP JUMPDEST SWAP4 POP PUSH2 0x1B9D PUSH1 0x20 DUP7 ADD PUSH2 0x1AE4 JUMP JUMPDEST SWAP3 POP PUSH1 0x40 DUP6 ADD CALLDATALOAD SWAP2 POP PUSH2 0x1BB2 PUSH1 0x60 DUP7 ADD PUSH2 0x1B13 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1BD5 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x1BDE DUP8 PUSH2 0x1AFB JUMP JUMPDEST SWAP6 POP PUSH2 0x1BEC PUSH1 0x20 DUP9 ADD PUSH2 0x1AE4 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD SWAP4 POP PUSH2 0x1C01 PUSH1 0x60 DUP9 ADD PUSH2 0x1B13 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD SWAP1 POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1C2F JUMPI DUP3 DUP4 REVERT JUMPDEST PUSH2 0x1C38 DUP5 PUSH2 0x1AFB JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1C5E JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 MLOAD DUP2 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1C85 JUMPI PUSH1 0x20 DUP2 DUP7 ADD DUP2 ADD MLOAD DUP6 DUP4 ADD MSTORE ADD PUSH2 0x1C6B JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x1C93 JUMPI DUP3 DUP3 DUP6 ADD MSTORE JUMPDEST POP SWAP2 SWAP1 SWAP2 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE DUP3 MLOAD DUP3 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x0 SWAP2 SWAP1 PUSH1 0x40 SWAP1 DUP2 DUP6 ADD SWAP1 DUP7 DUP5 ADD DUP6 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1D4B JUMPI DUP2 MLOAD DUP1 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT AND DUP6 MSTORE DUP7 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND DUP9 DUP8 ADD MSTORE DUP7 DUP3 ADD MLOAD AND DUP7 DUP7 ADD MSTORE PUSH1 0x60 DUP1 DUP3 ADD MLOAD PUSH4 0xFFFFFFFF SWAP1 DUP2 AND SWAP2 DUP8 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x80 DUP1 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP7 ADD MSTORE PUSH1 0xA0 DUP1 DUP3 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 DUP7 ADD MSTORE PUSH1 0xC0 DUP1 DUP3 ADD MLOAD SWAP1 DUP7 ADD MSTORE PUSH1 0xE0 SWAP1 DUP2 ADD MLOAD SWAP1 DUP6 ADD MSTORE PUSH2 0x100 SWAP1 SWAP4 ADD SWAP3 SWAP1 DUP6 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x1CBB JUMP JUMPDEST POP SWAP2 SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xC0 SHL SUB NOT SWAP5 SWAP1 SWAP5 AND DUP5 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND PUSH1 0x20 DUP5 ADD MSTORE PUSH1 0x40 DUP4 ADD MSTORE PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x1D9B JUMPI PUSH2 0x1D9B PUSH2 0x1E85 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 AND DUP2 DUP6 AND DUP1 DUP4 SUB DUP3 GT ISZERO PUSH2 0x1DC2 JUMPI PUSH2 0x1DC2 PUSH2 0x1E85 JUMP JUMPDEST ADD SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x1DDA JUMPI PUSH2 0x1DDA PUSH2 0x1E9B JUMP JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP5 AND DUP1 PUSH2 0x1DF9 JUMPI PUSH2 0x1DF9 PUSH2 0x1E9B JUMP JUMPDEST SWAP3 AND SWAP2 SWAP1 SWAP2 DIV SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1E1F JUMPI PUSH2 0x1E1F PUSH2 0x1E85 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP4 AND DUP2 DUP6 AND DUP2 DUP4 DIV DUP2 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x1E4A JUMPI PUSH2 0x1E4A PUSH2 0x1E85 JUMP JUMPDEST MUL SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0x1E65 JUMPI PUSH2 0x1E65 PUSH2 0x1E85 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1E7E JUMPI PUSH2 0x1E7E PUSH2 0x1E85 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2C EQ EQ 0xA8 NOT REVERT DUP14 0xA6 SAR 0xD9 MSTORE8 0xE8 PUSH30 0xAD3363F4E19B5163E8B14CEDC90E4EFB4F898364736F6C63430008020033 ",
  "pcMap": {
    "0": {
      "offset": [
        129,
        8903
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "8": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "LT",
      "path": "1"
    },
    "9": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12A"
    },
    "12": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "13": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "CALLDATALOAD",
      "path": "1"
    },
    "16": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "SHR",
      "path": "1"
    },
    "19": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "DUP1",
      "path": "1"
    },
    "20": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x75AD5DBE"
    },
    "25": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "GT",
      "path": "1"
    },
    "26": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAB"
    },
    "29": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "30": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "DUP1",
      "path": "1"
    },
    "31": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xC2927D85"
    },
    "36": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "GT",
      "path": "1"
    },
    "37": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6F"
    },
    "40": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "41": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "DUP1",
      "path": "1"
    },
    "42": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xC2927D85"
    },
    "47": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "EQ",
      "path": "1"
    },
    "48": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x322"
    },
    "51": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "52": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "DUP1",
      "path": "1"
    },
    "53": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE0416179"
    },
    "58": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "EQ",
      "path": "1"
    },
    "59": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x34F"
    },
    "62": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "63": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "DUP1",
      "path": "1"
    },
    "64": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xE1932538"
    },
    "69": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "EQ",
      "path": "1"
    },
    "70": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36F"
    },
    "73": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "74": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "DUP1",
      "path": "1"
    },
    "75": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xF7CA0D66"
    },
    "80": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "EQ",
      "path": "1"
    },
    "81": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x38F"
    },
    "84": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "85": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "DUP1",
      "path": "1"
    },
    "86": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFB10C7B1"
    },
    "91": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "EQ",
      "path": "1"
    },
    "92": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3A5"
    },
    "95": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "96": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "DUP1",
      "path": "1"
    },
    "97": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFCF6C903"
    },
    "102": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "EQ",
      "path": "1"
    },
    "103": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3D2"
    },
    "106": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "107": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12A"
    },
    "110": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMP",
      "path": "1"
    },
    "111": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "112": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "DUP1",
      "path": "1"
    },
    "113": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x75AD5DBE"
    },
    "118": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "EQ",
      "path": "1"
    },
    "119": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x242"
    },
    "122": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "123": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "DUP1",
      "path": "1"
    },
    "124": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x82E4EDA4"
    },
    "129": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "EQ",
      "path": "1"
    },
    "130": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x262"
    },
    "133": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "134": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "DUP1",
      "path": "1"
    },
    "135": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8D4B3223"
    },
    "140": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "EQ",
      "path": "1"
    },
    "141": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x28F"
    },
    "144": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "145": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "DUP1",
      "path": "1"
    },
    "146": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8DA5CB5B"
    },
    "151": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "EQ",
      "path": "1"
    },
    "152": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2A2"
    },
    "155": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "156": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "DUP1",
      "path": "1"
    },
    "157": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x9563DCEB"
    },
    "162": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "EQ",
      "path": "1"
    },
    "163": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2EE"
    },
    "166": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "167": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12A"
    },
    "170": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMP",
      "path": "1"
    },
    "171": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "172": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "DUP1",
      "path": "1"
    },
    "173": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x64245D01"
    },
    "178": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "GT",
      "path": "1"
    },
    "179": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF2"
    },
    "182": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "183": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "DUP1",
      "path": "1"
    },
    "184": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x64245D01"
    },
    "189": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "EQ",
      "path": "1"
    },
    "190": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C7"
    },
    "193": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "194": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "DUP1",
      "path": "1"
    },
    "195": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6DD4E3AC"
    },
    "200": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "EQ",
      "path": "1"
    },
    "201": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DC"
    },
    "204": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "205": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "DUP1",
      "path": "1"
    },
    "206": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x6E5AB542"
    },
    "211": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "EQ",
      "path": "1"
    },
    "212": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1FC"
    },
    "215": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "216": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "DUP1",
      "path": "1"
    },
    "217": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x70762D2F"
    },
    "222": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "EQ",
      "path": "1"
    },
    "223": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20F"
    },
    "226": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "227": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "DUP1",
      "path": "1"
    },
    "228": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x7568E9D2"
    },
    "233": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "EQ",
      "path": "1"
    },
    "234": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x222"
    },
    "237": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "238": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12A"
    },
    "241": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMP",
      "path": "1"
    },
    "242": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "243": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "DUP1",
      "path": "1"
    },
    "244": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x8F438F7"
    },
    "249": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "EQ",
      "path": "1"
    },
    "250": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12F"
    },
    "253": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "254": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "DUP1",
      "path": "1"
    },
    "255": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x9468B4C"
    },
    "260": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "EQ",
      "path": "1"
    },
    "261": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x158"
    },
    "264": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "265": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "DUP1",
      "path": "1"
    },
    "266": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x15B3C6EB"
    },
    "271": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "EQ",
      "path": "1"
    },
    "272": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x17A"
    },
    "275": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "276": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "DUP1",
      "path": "1"
    },
    "277": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x3CCFD60B"
    },
    "282": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "EQ",
      "path": "1"
    },
    "283": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x190"
    },
    "286": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "287": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "DUP1",
      "path": "1"
    },
    "288": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x455BFBF2"
    },
    "293": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "EQ",
      "path": "1"
    },
    "294": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A5"
    },
    "297": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "298": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "299": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "301": {
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "DUP1",
      "path": "1"
    },
    "302": {
      "first_revert": true,
      "fn": null,
      "offset": [
        129,
        8903
      ],
      "op": "REVERT",
      "path": "1"
    },
    "303": {
      "offset": [
        750,
        786
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "304": {
      "fn": null,
      "offset": [
        750,
        786
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "305": {
      "fn": null,
      "offset": [
        750,
        786
      ],
      "op": "DUP1",
      "path": "1"
    },
    "306": {
      "fn": null,
      "offset": [
        750,
        786
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "307": {
      "fn": null,
      "offset": [
        750,
        786
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x13B"
    },
    "310": {
      "fn": null,
      "offset": [
        750,
        786
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "311": {
      "fn": null,
      "offset": [
        750,
        786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "313": {
      "fn": null,
      "offset": [
        750,
        786
      ],
      "op": "DUP1",
      "path": "1"
    },
    "314": {
      "fn": null,
      "offset": [
        750,
        786
      ],
      "op": "REVERT",
      "path": "1"
    },
    "315": {
      "fn": null,
      "offset": [
        750,
        786
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "316": {
      "fn": null,
      "offset": [
        750,
        786
      ],
      "op": "POP",
      "path": "1"
    },
    "317": {
      "fn": null,
      "offset": [
        750,
        786
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x145"
    },
    "320": {
      "fn": null,
      "offset": [
        750,
        786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "322": {
      "fn": null,
      "offset": [
        750,
        786
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "323": {
      "fn": null,
      "offset": [
        750,
        786
      ],
      "op": "DUP2",
      "path": "1"
    },
    "324": {
      "fn": null,
      "offset": [
        750,
        786
      ],
      "op": "JUMP",
      "path": "1"
    },
    "325": {
      "fn": null,
      "offset": [
        750,
        786
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "326": {
      "fn": null,
      "offset": [
        750,
        786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "328": {
      "fn": null,
      "offset": [
        750,
        786
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "329": {
      "op": "SWAP1"
    },
    "330": {
      "op": "DUP2"
    },
    "331": {
      "op": "MSTORE"
    },
    "332": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "334": {
      "op": "ADD"
    },
    "335": {
      "offset": [
        750,
        786
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "336": {
      "fn": null,
      "offset": [
        750,
        786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "338": {
      "fn": null,
      "offset": [
        750,
        786
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "339": {
      "fn": null,
      "offset": [
        750,
        786
      ],
      "op": "DUP1",
      "path": "1"
    },
    "340": {
      "fn": null,
      "offset": [
        750,
        786
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "341": {
      "fn": null,
      "offset": [
        750,
        786
      ],
      "op": "SUB",
      "path": "1"
    },
    "342": {
      "fn": null,
      "offset": [
        750,
        786
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "343": {
      "fn": null,
      "offset": [
        750,
        786
      ],
      "op": "RETURN",
      "path": "1"
    },
    "344": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6778,
        8694
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "345": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6778,
        8694
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "346": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6778,
        8694
      ],
      "op": "DUP1",
      "path": "1"
    },
    "347": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6778,
        8694
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "348": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6778,
        8694
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x164"
    },
    "351": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6778,
        8694
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "352": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6778,
        8694
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "354": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6778,
        8694
      ],
      "op": "DUP1",
      "path": "1"
    },
    "355": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6778,
        8694
      ],
      "op": "REVERT",
      "path": "1"
    },
    "356": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6778,
        8694
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "357": {
      "op": "POP"
    },
    "358": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6778,
        8694
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x178"
    },
    "361": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6778,
        8694
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x173"
    },
    "364": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6778,
        8694
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "365": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6778,
        8694
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "367": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6778,
        8694
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C1B"
    },
    "370": {
      "fn": "AcriaNode.fillRequest",
      "jump": "i",
      "offset": [
        6778,
        8694
      ],
      "op": "JUMP",
      "path": "1"
    },
    "371": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6778,
        8694
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "372": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6778,
        8694
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3FF"
    },
    "375": {
      "fn": "AcriaNode.fillRequest",
      "jump": "i",
      "offset": [
        6778,
        8694
      ],
      "op": "JUMP",
      "path": "1"
    },
    "376": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6778,
        8694
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "377": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6778,
        8694
      ],
      "op": "STOP",
      "path": "1"
    },
    "378": {
      "offset": [
        1026,
        1062
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "379": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1026,
        1062
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "380": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP1",
      "path": "1"
    },
    "381": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1026,
        1062
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "382": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x186"
    },
    "385": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1026,
        1062
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "386": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "388": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP1",
      "path": "1"
    },
    "389": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1026,
        1062
      ],
      "op": "REVERT",
      "path": "1"
    },
    "390": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1026,
        1062
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "391": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1026,
        1062
      ],
      "op": "POP",
      "path": "1"
    },
    "392": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x145"
    },
    "395": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1026,
        1062
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "397": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1026,
        1062
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "398": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1026,
        1062
      ],
      "op": "DUP2",
      "path": "1"
    },
    "399": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1026,
        1062
      ],
      "op": "JUMP",
      "path": "1"
    },
    "400": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3331,
        3449
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "401": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3331,
        3449
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "402": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3331,
        3449
      ],
      "op": "DUP1",
      "path": "1"
    },
    "403": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3331,
        3449
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "404": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3331,
        3449
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19C"
    },
    "407": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3331,
        3449
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "408": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3331,
        3449
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "410": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3331,
        3449
      ],
      "op": "DUP1",
      "path": "1"
    },
    "411": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3331,
        3449
      ],
      "op": "REVERT",
      "path": "1"
    },
    "412": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3331,
        3449
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "413": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3331,
        3449
      ],
      "op": "POP",
      "path": "1"
    },
    "414": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3331,
        3449
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x178"
    },
    "417": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3331,
        3449
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBA6"
    },
    "420": {
      "fn": "AcriaNode.withdraw",
      "jump": "i",
      "offset": [
        3331,
        3449
      ],
      "op": "JUMP",
      "path": "1"
    },
    "421": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8703,
        8796
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "422": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8703,
        8796
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "423": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8703,
        8796
      ],
      "op": "DUP1",
      "path": "1"
    },
    "424": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8703,
        8796
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "425": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8703,
        8796
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B1"
    },
    "428": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8703,
        8796
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "429": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8703,
        8796
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "431": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8703,
        8796
      ],
      "op": "DUP1",
      "path": "1"
    },
    "432": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8703,
        8796
      ],
      "op": "REVERT",
      "path": "1"
    },
    "433": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8703,
        8796
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "434": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8703,
        8796
      ],
      "op": "POP",
      "path": "1"
    },
    "435": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8703,
        8796
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BA"
    },
    "438": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8703,
        8796
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC83"
    },
    "441": {
      "fn": "AcriaNode.get_requests",
      "jump": "i",
      "offset": [
        8703,
        8796
      ],
      "op": "JUMP",
      "path": "1"
    },
    "442": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8703,
        8796
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "443": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8703,
        8796
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "445": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8703,
        8796
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "446": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8703,
        8796
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14F"
    },
    "449": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8703,
        8796
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "450": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8703,
        8796
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "451": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8703,
        8796
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C9E"
    },
    "454": {
      "fn": "AcriaNode.get_requests",
      "jump": "i",
      "offset": [
        8703,
        8796
      ],
      "op": "JUMP",
      "path": "1"
    },
    "455": {
      "fn": "AcriaNode.get_withdrawable",
      "offset": [
        8803,
        8895
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "456": {
      "fn": "AcriaNode.get_withdrawable",
      "offset": [
        8803,
        8895
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "457": {
      "fn": "AcriaNode.get_withdrawable",
      "offset": [
        8803,
        8895
      ],
      "op": "DUP1",
      "path": "1"
    },
    "458": {
      "fn": "AcriaNode.get_withdrawable",
      "offset": [
        8803,
        8895
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "459": {
      "fn": "AcriaNode.get_withdrawable",
      "offset": [
        8803,
        8895
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D3"
    },
    "462": {
      "fn": "AcriaNode.get_withdrawable",
      "offset": [
        8803,
        8895
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "463": {
      "fn": "AcriaNode.get_withdrawable",
      "offset": [
        8803,
        8895
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "465": {
      "fn": "AcriaNode.get_withdrawable",
      "offset": [
        8803,
        8895
      ],
      "op": "DUP1",
      "path": "1"
    },
    "466": {
      "fn": "AcriaNode.get_withdrawable",
      "offset": [
        8803,
        8895
      ],
      "op": "REVERT",
      "path": "1"
    },
    "467": {
      "fn": "AcriaNode.get_withdrawable",
      "offset": [
        8803,
        8895
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "468": {
      "op": "POP"
    },
    "469": {
      "fn": "AcriaNode.get_withdrawable",
      "offset": [
        8873,
        8885
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 0,
      "value": "0x2"
    },
    "471": {
      "fn": "AcriaNode.get_withdrawable",
      "offset": [
        8873,
        8885
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "472": {
      "fn": "AcriaNode.get_withdrawable",
      "offset": [
        8803,
        8895
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x145"
    },
    "475": {
      "fn": "AcriaNode.get_withdrawable",
      "offset": [
        8803,
        8895
      ],
      "op": "JUMP",
      "path": "1"
    },
    "476": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6300,
        6769
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "477": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6300,
        6769
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "478": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6300,
        6769
      ],
      "op": "DUP1",
      "path": "1"
    },
    "479": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6300,
        6769
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "480": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6300,
        6769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E8"
    },
    "483": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6300,
        6769
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "484": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6300,
        6769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "486": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6300,
        6769
      ],
      "op": "DUP1",
      "path": "1"
    },
    "487": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6300,
        6769
      ],
      "op": "REVERT",
      "path": "1"
    },
    "488": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6300,
        6769
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "489": {
      "op": "POP"
    },
    "490": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6300,
        6769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x178"
    },
    "493": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6300,
        6769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1F7"
    },
    "496": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6300,
        6769
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "497": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6300,
        6769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "499": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6300,
        6769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B27"
    },
    "502": {
      "fn": "AcriaNode.payout_stakes",
      "jump": "i",
      "offset": [
        6300,
        6769
      ],
      "op": "JUMP",
      "path": "1"
    },
    "503": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6300,
        6769
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "504": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6300,
        6769
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD65"
    },
    "507": {
      "fn": "AcriaNode.payout_stakes",
      "jump": "i",
      "offset": [
        6300,
        6769
      ],
      "op": "JUMP",
      "path": "1"
    },
    "508": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1718,
        1966
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "509": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1718,
        1966
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x178"
    },
    "512": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1718,
        1966
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x20A"
    },
    "515": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1718,
        1966
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "516": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1718,
        1966
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "518": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1718,
        1966
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C4D"
    },
    "521": {
      "fn": "AcriaNode.pump_fee",
      "jump": "i",
      "offset": [
        1718,
        1966
      ],
      "op": "JUMP",
      "path": "1"
    },
    "522": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1718,
        1966
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "523": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1718,
        1966
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEE8"
    },
    "526": {
      "fn": "AcriaNode.pump_fee",
      "jump": "i",
      "offset": [
        1718,
        1966
      ],
      "op": "JUMP",
      "path": "1"
    },
    "527": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2559,
        3322
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "528": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2559,
        3322
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x178"
    },
    "531": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2559,
        3322
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x21D"
    },
    "534": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2559,
        3322
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "535": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2559,
        3322
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "537": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2559,
        3322
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1BBD"
    },
    "540": {
      "fn": "AcriaNode.create_request_with_data",
      "jump": "i",
      "offset": [
        2559,
        3322
      ],
      "op": "JUMP",
      "path": "1"
    },
    "541": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2559,
        3322
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "542": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2559,
        3322
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x102C"
    },
    "545": {
      "fn": "AcriaNode.create_request_with_data",
      "jump": "i",
      "offset": [
        2559,
        3322
      ],
      "op": "JUMP",
      "path": "1"
    },
    "546": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4231,
        4410
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "547": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4231,
        4410
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "548": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4231,
        4410
      ],
      "op": "DUP1",
      "path": "1"
    },
    "549": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4231,
        4410
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "550": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4231,
        4410
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x22E"
    },
    "553": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4231,
        4410
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "554": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4231,
        4410
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "556": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4231,
        4410
      ],
      "op": "DUP1",
      "path": "1"
    },
    "557": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4231,
        4410
      ],
      "op": "REVERT",
      "path": "1"
    },
    "558": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4231,
        4410
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "559": {
      "op": "POP"
    },
    "560": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4231,
        4410
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x178"
    },
    "563": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4231,
        4410
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x23D"
    },
    "566": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4231,
        4410
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "567": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4231,
        4410
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "569": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4231,
        4410
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B27"
    },
    "572": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "jump": "i",
      "offset": [
        4231,
        4410
      ],
      "op": "JUMP",
      "path": "1"
    },
    "573": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4231,
        4410
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "574": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4231,
        4410
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x125A"
    },
    "577": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "jump": "i",
      "offset": [
        4231,
        4410
      ],
      "op": "JUMP",
      "path": "1"
    },
    "578": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1520,
        1713
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "579": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1520,
        1713
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "580": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1520,
        1713
      ],
      "op": "DUP1",
      "path": "1"
    },
    "581": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1520,
        1713
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "582": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1520,
        1713
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x24E"
    },
    "585": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1520,
        1713
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "586": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1520,
        1713
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "588": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1520,
        1713
      ],
      "op": "DUP1",
      "path": "1"
    },
    "589": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1520,
        1713
      ],
      "op": "REVERT",
      "path": "1"
    },
    "590": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1520,
        1713
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "591": {
      "op": "POP"
    },
    "592": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1520,
        1713
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x145"
    },
    "595": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1520,
        1713
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x25D"
    },
    "598": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1520,
        1713
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "599": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1520,
        1713
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "601": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1520,
        1713
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C4D"
    },
    "604": {
      "fn": "AcriaNode.get_total_stake",
      "jump": "i",
      "offset": [
        1520,
        1713
      ],
      "op": "JUMP",
      "path": "1"
    },
    "605": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1520,
        1713
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "606": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1520,
        1713
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12A5"
    },
    "609": {
      "fn": "AcriaNode.get_total_stake",
      "jump": "i",
      "offset": [
        1520,
        1713
      ],
      "op": "JUMP",
      "path": "1"
    },
    "610": {
      "offset": [
        930,
        971
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "611": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        930,
        971
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "612": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        930,
        971
      ],
      "op": "DUP1",
      "path": "1"
    },
    "613": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        930,
        971
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "614": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        930,
        971
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x26E"
    },
    "617": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        930,
        971
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "618": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        930,
        971
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "620": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        930,
        971
      ],
      "op": "DUP1",
      "path": "1"
    },
    "621": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        930,
        971
      ],
      "op": "REVERT",
      "path": "1"
    },
    "622": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        930,
        971
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "623": {
      "op": "POP"
    },
    "624": {
      "offset": [
        930,
        971
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x145"
    },
    "627": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        930,
        971
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x27D"
    },
    "630": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        930,
        971
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "631": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        930,
        971
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "633": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        930,
        971
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B27"
    },
    "636": {
      "fn": "AcriaNode.get_total_stake",
      "jump": "i",
      "offset": [
        930,
        971
      ],
      "op": "JUMP",
      "path": "1"
    },
    "637": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        930,
        971
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "638": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        930,
        971
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "640": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        930,
        971
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "642": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        930,
        971
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "643": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        930,
        971
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "645": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        930,
        971
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "646": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        930,
        971
      ],
      "op": "DUP2",
      "path": "1"
    },
    "647": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        930,
        971
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "648": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        930,
        971
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "650": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        930,
        971
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "651": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        930,
        971
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "652": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        930,
        971
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "653": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        930,
        971
      ],
      "op": "DUP2",
      "path": "1"
    },
    "654": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        930,
        971
      ],
      "op": "JUMP",
      "path": "1"
    },
    "655": {
      "fn": "AcriaNode.create_request",
      "offset": [
        1975,
        2550
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "656": {
      "fn": "AcriaNode.create_request",
      "offset": [
        1975,
        2550
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x178"
    },
    "659": {
      "fn": "AcriaNode.create_request",
      "offset": [
        1975,
        2550
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x29D"
    },
    "662": {
      "fn": "AcriaNode.create_request",
      "offset": [
        1975,
        2550
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "663": {
      "fn": "AcriaNode.create_request",
      "offset": [
        1975,
        2550
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "665": {
      "fn": "AcriaNode.create_request",
      "offset": [
        1975,
        2550
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B71"
    },
    "668": {
      "fn": "AcriaNode.create_request",
      "jump": "i",
      "offset": [
        1975,
        2550
      ],
      "op": "JUMP",
      "path": "1"
    },
    "669": {
      "fn": "AcriaNode.create_request",
      "offset": [
        1975,
        2550
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "670": {
      "fn": "AcriaNode.create_request",
      "offset": [
        1975,
        2550
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12DA"
    },
    "673": {
      "fn": "AcriaNode.create_request",
      "jump": "i",
      "offset": [
        1975,
        2550
      ],
      "op": "JUMP",
      "path": "1"
    },
    "674": {
      "offset": [
        658,
        696
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "675": {
      "fn": "AcriaNode.create_request",
      "offset": [
        658,
        696
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "676": {
      "fn": "AcriaNode.create_request",
      "offset": [
        658,
        696
      ],
      "op": "DUP1",
      "path": "1"
    },
    "677": {
      "fn": "AcriaNode.create_request",
      "offset": [
        658,
        696
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "678": {
      "fn": "AcriaNode.create_request",
      "offset": [
        658,
        696
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2AE"
    },
    "681": {
      "fn": "AcriaNode.create_request",
      "offset": [
        658,
        696
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "682": {
      "fn": "AcriaNode.create_request",
      "offset": [
        658,
        696
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "684": {
      "fn": "AcriaNode.create_request",
      "offset": [
        658,
        696
      ],
      "op": "DUP1",
      "path": "1"
    },
    "685": {
      "fn": "AcriaNode.create_request",
      "offset": [
        658,
        696
      ],
      "op": "REVERT",
      "path": "1"
    },
    "686": {
      "fn": "AcriaNode.create_request",
      "offset": [
        658,
        696
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "687": {
      "fn": "AcriaNode.create_request",
      "offset": [
        658,
        696
      ],
      "op": "POP",
      "path": "1"
    },
    "688": {
      "fn": "AcriaNode.create_request",
      "offset": [
        658,
        696
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D6"
    },
    "691": {
      "fn": "AcriaNode.create_request",
      "offset": [
        658,
        696
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x0"
    },
    "724": {
      "fn": "AcriaNode.create_request",
      "offset": [
        658,
        696
      ],
      "op": "DUP2",
      "path": "1"
    },
    "725": {
      "fn": "AcriaNode.create_request",
      "offset": [
        658,
        696
      ],
      "op": "JUMP",
      "path": "1"
    },
    "726": {
      "fn": "AcriaNode.create_request",
      "offset": [
        658,
        696
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "727": {
      "fn": "AcriaNode.create_request",
      "offset": [
        658,
        696
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "729": {
      "fn": "AcriaNode.create_request",
      "offset": [
        658,
        696
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "730": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "732": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "734": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "736": {
      "op": "SHL"
    },
    "737": {
      "op": "SUB"
    },
    "738": {
      "op": "SWAP1"
    },
    "739": {
      "op": "SWAP2"
    },
    "740": {
      "op": "AND"
    },
    "741": {
      "op": "DUP2"
    },
    "742": {
      "op": "MSTORE"
    },
    "743": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "745": {
      "op": "ADD"
    },
    "746": {
      "op": "PUSH2",
      "value": "0x14F"
    },
    "749": {
      "offset": [
        658,
        696
      ],
      "op": "JUMP",
      "path": "1"
    },
    "750": {
      "op": "JUMPDEST"
    },
    "751": {
      "offset": [
        612,
        651
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "752": {
      "fn": "AcriaNode.create_request",
      "offset": [
        612,
        651
      ],
      "op": "DUP1",
      "path": "1"
    },
    "753": {
      "fn": "AcriaNode.create_request",
      "offset": [
        612,
        651
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "754": {
      "fn": "AcriaNode.create_request",
      "offset": [
        612,
        651
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2FA"
    },
    "757": {
      "fn": "AcriaNode.create_request",
      "offset": [
        612,
        651
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "758": {
      "fn": "AcriaNode.create_request",
      "offset": [
        612,
        651
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "760": {
      "fn": "AcriaNode.create_request",
      "offset": [
        612,
        651
      ],
      "op": "DUP1",
      "path": "1"
    },
    "761": {
      "fn": "AcriaNode.create_request",
      "offset": [
        612,
        651
      ],
      "op": "REVERT",
      "path": "1"
    },
    "762": {
      "fn": "AcriaNode.create_request",
      "offset": [
        612,
        651
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "763": {
      "fn": "AcriaNode.create_request",
      "offset": [
        612,
        651
      ],
      "op": "POP",
      "path": "1"
    },
    "764": {
      "fn": "AcriaNode.create_request",
      "offset": [
        612,
        651
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x2D6"
    },
    "767": {
      "fn": "AcriaNode.create_request",
      "offset": [
        612,
        651
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x0"
    },
    "800": {
      "fn": "AcriaNode.create_request",
      "offset": [
        612,
        651
      ],
      "op": "DUP2",
      "path": "1"
    },
    "801": {
      "fn": "AcriaNode.create_request",
      "offset": [
        612,
        651
      ],
      "op": "JUMP",
      "path": "1"
    },
    "802": {
      "fn": "AcriaNode.create_request",
      "offset": [
        612,
        651
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "803": {
      "offset": [
        821,
        874
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "804": {
      "fn": "AcriaNode.create_request",
      "offset": [
        821,
        874
      ],
      "op": "DUP1",
      "path": "1"
    },
    "805": {
      "fn": "AcriaNode.create_request",
      "offset": [
        821,
        874
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "806": {
      "fn": "AcriaNode.create_request",
      "offset": [
        821,
        874
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x32E"
    },
    "809": {
      "fn": "AcriaNode.create_request",
      "offset": [
        821,
        874
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "810": {
      "fn": "AcriaNode.create_request",
      "offset": [
        821,
        874
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "812": {
      "fn": "AcriaNode.create_request",
      "offset": [
        821,
        874
      ],
      "op": "DUP1",
      "path": "1"
    },
    "813": {
      "fn": "AcriaNode.create_request",
      "offset": [
        821,
        874
      ],
      "op": "REVERT",
      "path": "1"
    },
    "814": {
      "fn": "AcriaNode.create_request",
      "offset": [
        821,
        874
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "815": {
      "fn": "AcriaNode.create_request",
      "offset": [
        821,
        874
      ],
      "op": "POP",
      "path": "1"
    },
    "816": {
      "op": "PUSH2",
      "value": "0x145"
    },
    "819": {
      "offset": [
        821,
        874
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x33D"
    },
    "822": {
      "fn": "AcriaNode.create_request",
      "offset": [
        821,
        874
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "823": {
      "fn": "AcriaNode.create_request",
      "offset": [
        821,
        874
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "825": {
      "fn": "AcriaNode.create_request",
      "offset": [
        821,
        874
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C4D"
    },
    "828": {
      "fn": "AcriaNode.create_request",
      "offset": [
        821,
        874
      ],
      "op": "JUMP",
      "path": "1"
    },
    "829": {
      "fn": "AcriaNode.create_request",
      "jump": "i",
      "offset": [
        821,
        874
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "830": {
      "fn": "AcriaNode.create_request",
      "offset": [
        821,
        874
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "832": {
      "fn": "AcriaNode.create_request",
      "offset": [
        821,
        874
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "834": {
      "fn": "AcriaNode.create_request",
      "offset": [
        821,
        874
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "835": {
      "fn": "AcriaNode.create_request",
      "offset": [
        821,
        874
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "837": {
      "fn": "AcriaNode.create_request",
      "offset": [
        821,
        874
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "838": {
      "fn": "AcriaNode.create_request",
      "offset": [
        821,
        874
      ],
      "op": "DUP2",
      "path": "1"
    },
    "839": {
      "fn": "AcriaNode.create_request",
      "offset": [
        821,
        874
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "840": {
      "fn": "AcriaNode.create_request",
      "offset": [
        821,
        874
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "842": {
      "fn": "AcriaNode.create_request",
      "offset": [
        821,
        874
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "843": {
      "fn": "AcriaNode.create_request",
      "offset": [
        821,
        874
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "844": {
      "fn": "AcriaNode.create_request",
      "offset": [
        821,
        874
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "845": {
      "fn": "AcriaNode.create_request",
      "offset": [
        821,
        874
      ],
      "op": "DUP2",
      "path": "1"
    },
    "846": {
      "fn": "AcriaNode.create_request",
      "offset": [
        821,
        874
      ],
      "op": "JUMP",
      "path": "1"
    },
    "847": {
      "fn": "AcriaNode.create_request",
      "offset": [
        821,
        874
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "848": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4419,
        5734
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "849": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4419,
        5734
      ],
      "op": "DUP1",
      "path": "1"
    },
    "850": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4419,
        5734
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "851": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4419,
        5734
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x35B"
    },
    "854": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4419,
        5734
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "855": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4419,
        5734
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "857": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4419,
        5734
      ],
      "op": "DUP1",
      "path": "1"
    },
    "858": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4419,
        5734
      ],
      "op": "REVERT",
      "path": "1"
    },
    "859": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4419,
        5734
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "860": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4419,
        5734
      ],
      "op": "POP",
      "path": "1"
    },
    "861": {
      "op": "PUSH2",
      "value": "0x178"
    },
    "864": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4419,
        5734
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x36A"
    },
    "867": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4419,
        5734
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "868": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4419,
        5734
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "870": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4419,
        5734
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B27"
    },
    "873": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4419,
        5734
      ],
      "op": "JUMP",
      "path": "1"
    },
    "874": {
      "fn": "AcriaNode.cancel_stake",
      "jump": "i",
      "offset": [
        4419,
        5734
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "875": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4419,
        5734
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14E6"
    },
    "878": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4419,
        5734
      ],
      "op": "JUMP",
      "path": "1"
    },
    "879": {
      "fn": "AcriaNode.cancel_stake",
      "jump": "i",
      "offset": [
        4419,
        5734
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "880": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3458,
        4222
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "881": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3458,
        4222
      ],
      "op": "DUP1",
      "path": "1"
    },
    "882": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3458,
        4222
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "883": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3458,
        4222
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x37B"
    },
    "886": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3458,
        4222
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "887": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3458,
        4222
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "889": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3458,
        4222
      ],
      "op": "DUP1",
      "path": "1"
    },
    "890": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3458,
        4222
      ],
      "op": "REVERT",
      "path": "1"
    },
    "891": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3458,
        4222
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "892": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3458,
        4222
      ],
      "op": "POP",
      "path": "1"
    },
    "893": {
      "op": "PUSH2",
      "value": "0x178"
    },
    "896": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3458,
        4222
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x38A"
    },
    "899": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3458,
        4222
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "900": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3458,
        4222
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "902": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3458,
        4222
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B48"
    },
    "905": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3458,
        4222
      ],
      "op": "JUMP",
      "path": "1"
    },
    "906": {
      "fn": "AcriaNode.start_stake",
      "jump": "i",
      "offset": [
        3458,
        4222
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "907": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3458,
        4222
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1788"
    },
    "910": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3458,
        4222
      ],
      "op": "JUMP",
      "path": "1"
    },
    "911": {
      "fn": "AcriaNode.start_stake",
      "jump": "i",
      "offset": [
        3458,
        4222
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "912": {
      "offset": [
        1066,
        1111
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "913": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        1066,
        1111
      ],
      "op": "DUP1",
      "path": "1"
    },
    "914": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        1066,
        1111
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "915": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        1066,
        1111
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x39B"
    },
    "918": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        1066,
        1111
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "919": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        1066,
        1111
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "921": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        1066,
        1111
      ],
      "op": "DUP1",
      "path": "1"
    },
    "922": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        1066,
        1111
      ],
      "op": "REVERT",
      "path": "1"
    },
    "923": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        1066,
        1111
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "924": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        1066,
        1111
      ],
      "op": "POP",
      "path": "1"
    },
    "925": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        1066,
        1111
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x145"
    },
    "928": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        1066,
        1111
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "930": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        1066,
        1111
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "931": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        1066,
        1111
      ],
      "op": "DUP2",
      "path": "1"
    },
    "932": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        1066,
        1111
      ],
      "op": "JUMP",
      "path": "1"
    },
    "933": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        1066,
        1111
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "934": {
      "offset": [
        878,
        926
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "935": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        878,
        926
      ],
      "op": "DUP1",
      "path": "1"
    },
    "936": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        878,
        926
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "937": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        878,
        926
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3B1"
    },
    "940": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        878,
        926
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "941": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        878,
        926
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "943": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        878,
        926
      ],
      "op": "DUP1",
      "path": "1"
    },
    "944": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        878,
        926
      ],
      "op": "REVERT",
      "path": "1"
    },
    "945": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        878,
        926
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "946": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        878,
        926
      ],
      "op": "POP",
      "path": "1"
    },
    "947": {
      "op": "PUSH2",
      "value": "0x145"
    },
    "950": {
      "offset": [
        878,
        926
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3C0"
    },
    "953": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        878,
        926
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "954": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        878,
        926
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "956": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        878,
        926
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C4D"
    },
    "959": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        878,
        926
      ],
      "op": "JUMP",
      "path": "1"
    },
    "960": {
      "fn": "AcriaNode.start_stake",
      "jump": "i",
      "offset": [
        878,
        926
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "961": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        878,
        926
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "963": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        878,
        926
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "965": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        878,
        926
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "966": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        878,
        926
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "968": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        878,
        926
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "969": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        878,
        926
      ],
      "op": "DUP2",
      "path": "1"
    },
    "970": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        878,
        926
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "971": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        878,
        926
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "973": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        878,
        926
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "974": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        878,
        926
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "975": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        878,
        926
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "976": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        878,
        926
      ],
      "op": "DUP2",
      "path": "1"
    },
    "977": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        878,
        926
      ],
      "op": "JUMP",
      "path": "1"
    },
    "978": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        878,
        926
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "979": {
      "offset": [
        975,
        1022
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "980": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        975,
        1022
      ],
      "op": "DUP1",
      "path": "1"
    },
    "981": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        975,
        1022
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "982": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        975,
        1022
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3DE"
    },
    "985": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        975,
        1022
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "986": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        975,
        1022
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "988": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        975,
        1022
      ],
      "op": "DUP1",
      "path": "1"
    },
    "989": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        975,
        1022
      ],
      "op": "REVERT",
      "path": "1"
    },
    "990": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        975,
        1022
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "991": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        975,
        1022
      ],
      "op": "POP",
      "path": "1"
    },
    "992": {
      "op": "PUSH2",
      "value": "0x145"
    },
    "995": {
      "offset": [
        975,
        1022
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3ED"
    },
    "998": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        975,
        1022
      ],
      "op": "CALLDATASIZE",
      "path": "1"
    },
    "999": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        975,
        1022
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1001": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        975,
        1022
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1B27"
    },
    "1004": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        975,
        1022
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1005": {
      "fn": "AcriaNode.start_stake",
      "jump": "i",
      "offset": [
        975,
        1022
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1006": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        975,
        1022
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "1008": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        975,
        1022
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1010": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        975,
        1022
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1011": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        975,
        1022
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1013": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        975,
        1022
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1014": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        975,
        1022
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1015": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        975,
        1022
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1016": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        975,
        1022
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1018": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        975,
        1022
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1019": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        975,
        1022
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1020": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        975,
        1022
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1021": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        975,
        1022
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1022": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        975,
        1022
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1023": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        975,
        1022
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1024": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6778,
        8694
      ],
      "op": "CALLER",
      "path": "1"
    },
    "1025": {
      "offset": [
        1450,
        1455
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1027": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1029": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "1031": {
      "op": "SHL"
    },
    "1032": {
      "op": "SUB"
    },
    "1033": {
      "op": "PUSH32",
      "value": "0x0"
    },
    "1066": {
      "offset": [
        1436,
        1455
      ],
      "op": "AND",
      "path": "1"
    },
    "1067": {
      "offset": [
        1436,
        1446
      ],
      "op": "EQ",
      "path": "1"
    },
    "1068": {
      "offset": [
        1436,
        1455
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x47C"
    },
    "1071": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1421,
        1499
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1072": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1421,
        1499
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1074": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1421,
        1499
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1075": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1421,
        1499
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "1079": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "1081": {
      "op": "SHL"
    },
    "1082": {
      "op": "DUP2"
    },
    "1083": {
      "offset": [
        1421,
        1499
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1084": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1421,
        1499
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1086": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1088": {
      "offset": [
        1421,
        1499
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1089": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1421,
        1499
      ],
      "op": "ADD",
      "path": "1"
    },
    "1090": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1421,
        1499
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1091": {
      "op": "PUSH1",
      "value": "0x1C"
    },
    "1093": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "1095": {
      "op": "DUP3"
    },
    "1096": {
      "op": "ADD"
    },
    "1097": {
      "op": "MSTORE"
    },
    "1098": {
      "op": "PUSH32",
      "value": "0x5265737472696374656420746F20636F6E7472616374206F776E657200000000"
    },
    "1131": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "1133": {
      "op": "DUP3"
    },
    "1134": {
      "op": "ADD"
    },
    "1135": {
      "op": "MSTORE"
    },
    "1136": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "1138": {
      "op": "ADD"
    },
    "1139": {
      "op": "JUMPDEST"
    },
    "1140": {
      "offset": [
        1421,
        1499
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1142": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1421,
        1499
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "1143": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1421,
        1499
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1144": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1421,
        1499
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1145": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1421,
        1499
      ],
      "op": "SUB",
      "path": "1"
    },
    "1146": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1421,
        1499
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1147": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1421,
        1499
      ],
      "op": "REVERT",
      "optimizer_revert": true,
      "path": "1"
    },
    "1148": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1421,
        1499
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1149": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        1421,
        1499
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1150": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6888
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 1,
      "value": "0x1"
    },
    "1152": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6891
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1154": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6891
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xC0"
    },
    "1156": {
      "op": "SHL"
    },
    "1157": {
      "op": "SUB"
    },
    "1158": {
      "op": "NOT"
    },
    "1159": {
      "op": "AND"
    },
    "1160": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1162": {
      "op": "DUP3"
    },
    "1163": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6915
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1164": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6915
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1165": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6915
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1166": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6888
      ],
      "op": "LT",
      "path": "1"
    },
    "1167": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6889,
        6890
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4A8"
    },
    "1170": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6889,
        6890
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1171": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6891
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4E487B71"
    },
    "1176": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6891
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "1178": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6891
      ],
      "op": "SHL",
      "path": "1"
    },
    "1179": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6891
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1181": {
      "op": "MSTORE"
    },
    "1182": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1184": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1186": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6891
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1187": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6891
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1189": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6891
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1191": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6891
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1192": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6891
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1193": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6891
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1195": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6891
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1196": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6891
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1197": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6891
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1198": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6891
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1200": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6891
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1201": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6891
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1202": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6891
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1203": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6891
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1205": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6891
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1206": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6891
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1207": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6891
      ],
      "op": "MUL",
      "path": "1"
    },
    "1208": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6891
      ],
      "op": "ADD",
      "path": "1"
    },
    "1209": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6891
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1210": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6891
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xC0"
    },
    "1212": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6891
      ],
      "op": "SHL",
      "path": "1"
    },
    "1213": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6891
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1215": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6901
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1217": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6901
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xC0"
    },
    "1219": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6901
      ],
      "op": "SHL",
      "path": "1"
    },
    "1220": {
      "op": "SUB"
    },
    "1221": {
      "op": "NOT"
    },
    "1222": {
      "op": "AND"
    },
    "1223": {
      "op": "EQ"
    },
    "1224": {
      "op": "PUSH2",
      "value": "0x4D0"
    },
    "1227": {
      "op": "JUMPI"
    },
    "1228": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1230": {
      "branch": 85,
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6880,
        6915
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1231": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6872,
        6916
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1232": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6872,
        6916
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1233": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6872,
        6916
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1235": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6872,
        6916
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1237": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6872,
        6916
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1238": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6872,
        6916
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x4E1"
    },
    "1241": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6929,
        6950
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E8"
    },
    "1244": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6968,
        6981
      ],
      "op": "NUMBER",
      "path": "1"
    },
    "1245": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6929,
        6950
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DCB"
    },
    "1248": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6982,
        7010
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1249": {
      "offset": [
        1150,
        1154
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1250": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6982,
        6994
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1251": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6982,
        7010
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1252": {
      "fn": "AcriaNode.fillRequest",
      "jump": "i",
      "offset": [
        6982,
        7010
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1254": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6982,
        7010
      ],
      "op": "ADD",
      "path": "1"
    },
    "1255": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6968,
        7011
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1256": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6968,
        7011
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1257": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6968,
        7011
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1258": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6968,
        7011
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1260": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6968,
        7011
      ],
      "op": "ADD",
      "path": "1"
    },
    "1261": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6968,
        7011
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1263": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6968,
        7011
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1264": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6968,
        7011
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1265": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6968,
        7011
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1267": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6968,
        7011
      ],
      "op": "EQ",
      "path": "1"
    },
    "1268": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6968,
        7011
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1269": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6968,
        7011
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x568"
    },
    "1272": {
      "branch": 85,
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7015,
        7016
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1273": {
      "branch": 86,
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6968,
        7016
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x504"
    },
    "1276": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6965,
        7407
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E8"
    },
    "1279": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6965,
        7407
      ],
      "op": "NUMBER",
      "path": "1"
    },
    "1280": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6965,
        7407
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DCB"
    },
    "1283": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7047,
        7075
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1284": {
      "offset": [
        1150,
        1154
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1285": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7047,
        7059
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x50F"
    },
    "1288": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7047,
        7075
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1289": {
      "fn": "AcriaNode.fillRequest",
      "jump": "i",
      "offset": [
        7047,
        7075
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1291": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7047,
        7075
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D88"
    },
    "1294": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7047,
        7077
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1295": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7047,
        7077
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1296": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7076,
        7077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "1298": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7047,
        7077
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1299": {
      "fn": "AcriaNode.fillRequest",
      "jump": "i",
      "offset": [
        7047,
        7077
      ],
      "op": "EQ",
      "path": "1"
    },
    "1300": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7047,
        7077
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1301": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7026,
        7043
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x540"
    },
    "1304": {
      "branch": 86,
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7026,
        7043
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1305": {
      "branch": 87,
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7026,
        7077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "1307": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7023,
        7359
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1308": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7023,
        7359
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1309": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7023,
        7359
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x53B"
    },
    "1312": {
      "branch": 87,
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7088,
        7114
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1313": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7088,
        7114
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "1315": {
      "branch": 88,
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7088,
        7119
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1316": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7085,
        7217
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1318": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7085,
        7217
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1319": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7145,
        7171
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1320": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7145,
        7171
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1321": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7131,
        7172
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1323": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7131,
        7172
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1325": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7131,
        7172
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1326": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7131,
        7172
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1328": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7131,
        7144
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1329": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7131,
        7172
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1330": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7131,
        7172
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1331": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7131,
        7172
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1332": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7131,
        7172
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x53B"
    },
    "1335": {
      "branch": 88,
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7131,
        7172
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1336": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7131,
        7172
      ],
      "op": "POP",
      "path": "1"
    },
    "1337": {
      "branch": 89,
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7131,
        7177
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1339": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7128,
        7209
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1340": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7128,
        7209
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x563"
    },
    "1343": {
      "op": "JUMP"
    },
    "1344": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7205,
        7209
      ],
      "op": "JUMPDEST",
      "path": "1",
      "statement": 2
    },
    "1345": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7128,
        7209
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "1347": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7023,
        7359
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1348": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7023,
        7359
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1349": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7023,
        7359
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x563"
    },
    "1352": {
      "branch": 89,
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7242,
        7259
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1353": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7242,
        7259
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "1355": {
      "branch": 90,
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7242,
        7264
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1356": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7239,
        7353
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1358": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7239,
        7353
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1359": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7290,
        7307
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1360": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7290,
        7307
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1361": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7276,
        7308
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1363": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7276,
        7308
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1365": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7276,
        7308
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1366": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7276,
        7308
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1368": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7276,
        7289
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1369": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7276,
        7308
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1370": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7276,
        7308
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1371": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7276,
        7308
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1372": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7276,
        7308
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x563"
    },
    "1375": {
      "branch": 90,
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7276,
        7308
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1376": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7276,
        7308
      ],
      "op": "POP",
      "path": "1"
    },
    "1377": {
      "branch": 91,
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7276,
        7313
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1379": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7273,
        7345
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1380": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7273,
        7345
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x56C"
    },
    "1383": {
      "op": "JUMP"
    },
    "1384": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7341,
        7345
      ],
      "op": "JUMPDEST",
      "path": "1",
      "statement": 3
    },
    "1385": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7273,
        7345
      ],
      "op": "POP",
      "path": "1"
    },
    "1386": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6965,
        7407
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1388": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6965,
        7407
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1389": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6965,
        7407
      ],
      "op": "NUMBER",
      "path": "1"
    },
    "1390": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1392": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7397,
        7401
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 4
    },
    "1393": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6965,
        7407
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1394": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7445,
        7457
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1395": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7427
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1396": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7428,
        7429
      ],
      "op": "LT",
      "path": "1"
    },
    "1397": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7430
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x58E"
    },
    "1400": {
      "branch": 91,
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7430
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1401": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7430
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4E487B71"
    },
    "1406": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7430
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "1408": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7430
      ],
      "op": "SHL",
      "path": "1"
    },
    "1409": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7430
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1411": {
      "op": "MSTORE"
    },
    "1412": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1414": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1416": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7430
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1417": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7430
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1419": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7430
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1421": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7430
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1422": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7430
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1423": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7430
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1425": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7430
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1426": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7430
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1427": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7430
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1428": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7430
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1430": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7430
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1431": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7430
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1432": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7430
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1433": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7430
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1435": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7430
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1436": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7430
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1437": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7430
      ],
      "op": "MUL",
      "path": "1"
    },
    "1438": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7430
      ],
      "op": "ADD",
      "path": "1"
    },
    "1439": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7430
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1440": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7430
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1442": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7430
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "1444": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7430
      ],
      "op": "SHL",
      "path": "1"
    },
    "1445": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7441
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1446": {
      "op": "DIV"
    },
    "1447": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1449": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1451": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1453": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7441
      ],
      "op": "SHL",
      "path": "1"
    },
    "1454": {
      "op": "SUB"
    },
    "1455": {
      "op": "AND"
    },
    "1456": {
      "op": "LT"
    },
    "1457": {
      "op": "PUSH2",
      "value": "0xA69"
    },
    "1460": {
      "op": "JUMPI"
    },
    "1461": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1463": {
      "branch": 92,
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7419,
        7457
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1464": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7416,
        8686
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1465": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7416,
        8686
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1466": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7466,
        7482
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1467": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7493
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1468": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7494,
        7495
      ],
      "op": "LT",
      "path": "1"
    },
    "1469": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x5D6"
    },
    "1472": {
      "branch": 92,
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1473": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4E487B71"
    },
    "1478": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "1480": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "SHL",
      "path": "1"
    },
    "1481": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1483": {
      "op": "MSTORE"
    },
    "1484": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1486": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1488": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1489": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1491": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1493": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1494": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1495": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1497": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1498": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1499": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1500": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1502": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1503": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1504": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1506": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1508": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1509": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "1510": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "MUL",
      "path": "1"
    },
    "1511": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "ADD",
      "path": "1"
    },
    "1512": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "ADD",
      "path": "1"
    },
    "1513": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1514": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1515": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1516": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7505
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1518": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7505
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1520": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7505
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "1522": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7538
      ],
      "op": "SHL",
      "path": "1"
    },
    "1523": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7538
      ],
      "op": "SUB",
      "path": "1"
    },
    "1524": {
      "op": "SWAP1"
    },
    "1525": {
      "op": "SWAP2"
    },
    "1526": {
      "op": "AND"
    },
    "1527": {
      "op": "SWAP3"
    },
    "1528": {
      "op": "POP"
    },
    "1529": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7505
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA"
    },
    "1531": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7505
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1532": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7505
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1533": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7505
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1534": {
      "op": "DUP7"
    },
    "1535": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7543,
        7545
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1536": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7543,
        7545
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1537": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "LT",
      "path": "1"
    },
    "1538": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7485,
        7496
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x61B"
    },
    "1541": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7536,
        7537
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1542": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7536,
        7537
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4E487B71"
    },
    "1547": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "1549": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7538
      ],
      "op": "SHL",
      "path": "1"
    },
    "1550": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1552": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7538
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1553": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1555": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1557": {
      "op": "MSTORE"
    },
    "1558": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1560": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1562": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7538
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1563": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7538
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1564": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1566": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7538
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1567": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7538
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1568": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7538
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1569": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1571": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7538
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1572": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7538
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1573": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7538
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1574": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1576": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7538
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1577": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7538
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1578": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7538
      ],
      "op": "MUL",
      "path": "1"
    },
    "1579": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7538
      ],
      "op": "ADD",
      "path": "1"
    },
    "1580": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7538
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1581": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7538
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x646"
    },
    "1584": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7538
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1585": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7538
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1586": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7538
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1588": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7542
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1590": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7545
      ],
      "op": "SHL",
      "path": "1"
    },
    "1591": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7545
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1592": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7545
      ],
      "op": "DIV",
      "path": "1"
    },
    "1593": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1595": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1597": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1599": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7542
      ],
      "op": "SHL",
      "path": "1"
    },
    "1600": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7542
      ],
      "op": "SUB",
      "path": "1"
    },
    "1601": {
      "op": "AND"
    },
    "1602": {
      "op": "PUSH2",
      "value": "0x1DDF"
    },
    "1605": {
      "op": "JUMP"
    },
    "1606": {
      "op": "JUMPDEST"
    },
    "1607": {
      "op": "PUSH2",
      "value": "0x651"
    },
    "1610": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7542
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1611": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7545
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "1613": {
      "fn": "AcriaNode.fillRequest",
      "jump": "i",
      "offset": [
        7527,
        7545
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E24"
    },
    "1616": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7545
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1617": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7547
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1618": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7547
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1620": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7546,
        7547
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1622": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7547
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1624": {
      "fn": "AcriaNode.fillRequest",
      "jump": "i",
      "offset": [
        7527,
        7547
      ],
      "op": "SHL",
      "path": "1"
    },
    "1625": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7527,
        7547
      ],
      "op": "SUB",
      "path": "1"
    },
    "1626": {
      "op": "AND"
    },
    "1627": {
      "op": "SWAP1"
    },
    "1628": {
      "op": "POP"
    },
    "1629": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "1631": {
      "op": "DUP1"
    },
    "1632": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7513,
        7547
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1633": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7513,
        7547
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1634": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7513,
        7547
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1635": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7555,
        7569
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1636": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7580
      ],
      "op": "LT",
      "path": "1"
    },
    "1637": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7581,
        7582
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x67E"
    },
    "1640": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7583
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1641": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7583
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4E487B71"
    },
    "1646": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7583
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "1648": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7583
      ],
      "op": "SHL",
      "path": "1"
    },
    "1649": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7583
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1651": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7583
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1652": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1654": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1656": {
      "op": "MSTORE"
    },
    "1657": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7583
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1659": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7583
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1661": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7583
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1662": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7583
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1663": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7583
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1664": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7583
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1666": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7583
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1667": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7583
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1669": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7583
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1671": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7583
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1672": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7583
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1673": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7583
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1675": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7583
      ],
      "op": "MUL",
      "path": "1"
    },
    "1676": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7583
      ],
      "op": "ADD",
      "path": "1"
    },
    "1677": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7583
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1679": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7583
      ],
      "op": "ADD",
      "path": "1"
    },
    "1680": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7583
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1C"
    },
    "1682": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7583
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1683": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7583
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1684": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1685": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7591
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "1688": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7591
      ],
      "op": "EXP",
      "path": "1"
    },
    "1689": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1690": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7591
      ],
      "op": "DIV",
      "path": "1"
    },
    "1691": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7591
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "1696": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7591
      ],
      "op": "AND",
      "path": "1"
    },
    "1697": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7591
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1698": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7591
      ],
      "op": "POP",
      "path": "1"
    },
    "1699": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7591
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1701": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7591
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1702": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7572,
        7591
      ],
      "op": "DUP7",
      "path": "1"
    },
    "1703": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7555,
        7591
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1704": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7555,
        7591
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1705": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7599,
        7611
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1706": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7622
      ],
      "op": "LT",
      "path": "1"
    },
    "1707": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7623,
        7624
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6C4"
    },
    "1710": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7625
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1711": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7625
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4E487B71"
    },
    "1716": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7625
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "1718": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7625
      ],
      "op": "SHL",
      "path": "1"
    },
    "1719": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7625
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1721": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7625
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1722": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1724": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1726": {
      "op": "MSTORE"
    },
    "1727": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7625
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1729": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7625
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1731": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7625
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1732": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7625
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1733": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7625
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1734": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7625
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1736": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7625
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1737": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7625
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1739": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7625
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1741": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7625
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1742": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7625
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1743": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7625
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1745": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7625
      ],
      "op": "MUL",
      "path": "1"
    },
    "1746": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7625
      ],
      "op": "ADD",
      "path": "1"
    },
    "1747": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7625
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "1749": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7625
      ],
      "op": "ADD",
      "path": "1"
    },
    "1750": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7625
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1751": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7625
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1752": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7625
      ],
      "op": "POP",
      "path": "1"
    },
    "1753": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7630
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1755": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7630
      ],
      "op": "DUP1",
      "path": "1"
    },
    "1756": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7614,
        7630
      ],
      "op": "DUP8",
      "path": "1"
    },
    "1757": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7599,
        7630
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1758": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7599,
        7630
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1759": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7638,
        7662
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1760": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7673
      ],
      "op": "LT",
      "path": "1"
    },
    "1761": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7674,
        7675
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x6FA"
    },
    "1764": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7676
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1765": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7676
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4E487B71"
    },
    "1770": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7676
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "1772": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7676
      ],
      "op": "SHL",
      "path": "1"
    },
    "1773": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7676
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1775": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7676
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1776": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1778": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1780": {
      "op": "MSTORE"
    },
    "1781": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7676
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1783": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7676
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1785": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7676
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1786": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7676
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1787": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7676
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1788": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7676
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1790": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7676
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1791": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7676
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1793": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7676
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1795": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7676
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1796": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7676
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1797": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7676
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1799": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7676
      ],
      "op": "MUL",
      "path": "1"
    },
    "1800": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7676
      ],
      "op": "ADD",
      "path": "1"
    },
    "1801": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7676
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "1803": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7676
      ],
      "op": "ADD",
      "path": "1"
    },
    "1804": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7676
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1805": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7676
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1806": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7676
      ],
      "op": "POP",
      "path": "1"
    },
    "1807": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7693
      ],
      "op": "DUP6",
      "path": "1"
    },
    "1808": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7693
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "1809": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7665,
        7693
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x799"
    },
    "1812": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7638,
        7693
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1813": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7638,
        7693
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1814": {
      "branch": 93,
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7711,
        7727
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1816": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7708,
        7857
      ],
      "op": "DUP9",
      "path": "1"
    },
    "1817": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7708,
        7857
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1818": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7708,
        7857
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1819": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7806,
        7809
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 5
    },
    "1820": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7796
      ],
      "op": "LT",
      "path": "1"
    },
    "1821": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7797,
        7798
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x736"
    },
    "1824": {
      "branch": 93,
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7799
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1825": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7799
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4E487B71"
    },
    "1830": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7799
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "1832": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7799
      ],
      "op": "SHL",
      "path": "1"
    },
    "1833": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7799
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1835": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7799
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1836": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1838": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1840": {
      "op": "MSTORE"
    },
    "1841": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7799
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1843": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7799
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1845": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7799
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1846": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7799
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1847": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7799
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1849": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7799
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1850": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7799
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1851": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7799
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1852": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7799
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1854": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7799
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1855": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7799
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1856": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7799
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1857": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7799
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1859": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7799
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1860": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7799
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1861": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7799
      ],
      "op": "MUL",
      "path": "1"
    },
    "1862": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7799
      ],
      "op": "ADD",
      "path": "1"
    },
    "1863": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7799
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1864": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7799
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x761"
    },
    "1867": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7799
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1868": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7799
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1869": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7799
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "1871": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7803
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "1873": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7809
      ],
      "op": "SHL",
      "path": "1"
    },
    "1874": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7809
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1875": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7809
      ],
      "op": "DIV",
      "path": "1"
    },
    "1876": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1878": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "1880": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "1882": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7803
      ],
      "op": "SHL",
      "path": "1"
    },
    "1883": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7803
      ],
      "op": "SUB",
      "path": "1"
    },
    "1884": {
      "op": "AND"
    },
    "1885": {
      "op": "PUSH2",
      "value": "0x1E53"
    },
    "1888": {
      "op": "JUMP"
    },
    "1889": {
      "op": "JUMPDEST"
    },
    "1890": {
      "op": "PUSH1",
      "value": "0x3"
    },
    "1892": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7803
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1894": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7809
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x771"
    },
    "1897": {
      "fn": "AcriaNode.fillRequest",
      "jump": "i",
      "offset": [
        7788,
        7809
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E8"
    },
    "1900": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7788,
        7809
      ],
      "op": "NUMBER",
      "path": "1"
    },
    "1901": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7736,
        7754
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DCB"
    },
    "1904": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7736,
        7784
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1905": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7755,
        7783
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1906": {
      "offset": [
        1150,
        1154
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1907": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7755,
        7767
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1908": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7755,
        7783
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1910": {
      "fn": "AcriaNode.fillRequest",
      "jump": "i",
      "offset": [
        7755,
        7783
      ],
      "op": "ADD",
      "path": "1"
    },
    "1911": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7755,
        7783
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1912": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7736,
        7784
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1913": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7736,
        7784
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1914": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7736,
        7784
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1916": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7736,
        7784
      ],
      "op": "ADD",
      "path": "1"
    },
    "1917": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7736,
        7784
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1919": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7736,
        7784
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1920": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7736,
        7784
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1922": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7736,
        7784
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1923": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7736,
        7784
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1924": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7736,
        7784
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1925": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7736,
        7784
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x78E"
    },
    "1928": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7736,
        7784
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1929": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7736,
        7809
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1930": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7736,
        7809
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D88"
    },
    "1933": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7736,
        7809
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1934": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7736,
        7809
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1935": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7736,
        7809
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1936": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7736,
        7809
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1937": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7736,
        7809
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "1938": {
      "fn": "AcriaNode.fillRequest",
      "jump": "i",
      "offset": [
        7736,
        7809
      ],
      "op": "POP",
      "path": "1"
    },
    "1939": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7736,
        7809
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7F3"
    },
    "1942": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7736,
        7809
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1943": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7736,
        7809
      ],
      "op": "POP",
      "path": "1"
    },
    "1944": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7736,
        7809
      ],
      "op": "JUMP",
      "path": "1"
    },
    "1945": {
      "op": "JUMPDEST"
    },
    "1946": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7708,
        7857
      ],
      "op": "DUP4",
      "path": "1"
    },
    "1947": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7708,
        7857
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1949": {
      "op": "DUP9"
    },
    "1950": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7708,
        7857
      ],
      "op": "DUP2",
      "path": "1"
    },
    "1951": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7708,
        7857
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1952": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7854,
        7857
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 6
    },
    "1953": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7844
      ],
      "op": "LT",
      "path": "1"
    },
    "1954": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7845,
        7846
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7BB"
    },
    "1957": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7847
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "1958": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7847
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4E487B71"
    },
    "1963": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "1965": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7847
      ],
      "op": "SHL",
      "path": "1"
    },
    "1966": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1968": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7847
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1969": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "1971": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "1973": {
      "op": "MSTORE"
    },
    "1974": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "1976": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1978": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7847
      ],
      "op": "REVERT",
      "path": "1"
    },
    "1979": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7847
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "1980": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "1982": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7847
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1983": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7847
      ],
      "op": "DUP3",
      "path": "1"
    },
    "1984": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7847
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "1985": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "1987": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7847
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1988": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7847
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1989": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7847
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "1990": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "1992": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7847
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "1993": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7847
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "1994": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7847
      ],
      "op": "MUL",
      "path": "1"
    },
    "1995": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7847
      ],
      "op": "ADD",
      "path": "1"
    },
    "1996": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7847
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "1997": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7847
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x7E6"
    },
    "2000": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7847
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2001": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7847
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2002": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7847
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2004": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7851
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2006": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7857
      ],
      "op": "SHL",
      "path": "1"
    },
    "2007": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7857
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2008": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7857
      ],
      "op": "DIV",
      "path": "1"
    },
    "2009": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2011": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2013": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2015": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7851
      ],
      "op": "SHL",
      "path": "1"
    },
    "2016": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7851
      ],
      "op": "SUB",
      "path": "1"
    },
    "2017": {
      "op": "AND"
    },
    "2018": {
      "op": "PUSH2",
      "value": "0x1E53"
    },
    "2021": {
      "op": "JUMP"
    },
    "2022": {
      "op": "JUMPDEST"
    },
    "2023": {
      "op": "PUSH2",
      "value": "0x7F0"
    },
    "2026": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7851
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2027": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7857
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2028": {
      "fn": "AcriaNode.fillRequest",
      "jump": "i",
      "offset": [
        7836,
        7857
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D88"
    },
    "2031": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7836,
        7857
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2032": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7829,
        7857
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2033": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7829,
        7857
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2034": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7829,
        7857
      ],
      "op": "POP",
      "path": "1"
    },
    "2035": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7829,
        7857
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2036": {
      "fn": "AcriaNode.fillRequest",
      "jump": "i",
      "offset": [
        7829,
        7857
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2037": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7829,
        7857
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "2039": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7829,
        7857
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2041": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7829,
        7857
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2042": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7708,
        7857
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2043": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7897,
        7900
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 7
    },
    "2044": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7881,
        7893
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x805"
    },
    "2047": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7881,
        7893
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2048": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7881,
        7900
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2049": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7881,
        7900
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D88"
    },
    "2052": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7881,
        7900
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2053": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7881,
        7900
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2054": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7881,
        7900
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2055": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7881,
        7900
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2056": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7881,
        7900
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2057": {
      "fn": "AcriaNode.fillRequest",
      "jump": "i",
      "offset": [
        7881,
        7900
      ],
      "op": "POP",
      "path": "1"
    },
    "2058": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7881,
        7900
      ],
      "op": "POP",
      "path": "1"
    },
    "2059": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7881,
        7900
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2061": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7881,
        7900
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2062": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7881,
        7900
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2063": {
      "op": "DUP9"
    },
    "2064": {
      "op": "SWAP1"
    },
    "2065": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7930
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 8
    },
    "2066": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7933
      ],
      "op": "LT",
      "path": "1"
    },
    "2067": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7933
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x82C"
    },
    "2070": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7931,
        7932
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2071": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7931,
        7932
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4E487B71"
    },
    "2076": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7933
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "2078": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7933
      ],
      "op": "SHL",
      "path": "1"
    },
    "2079": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7933
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2081": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7933
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2082": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "2084": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2086": {
      "op": "MSTORE"
    },
    "2087": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7933
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2089": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7933
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2091": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7933
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2092": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7933
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2093": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7933
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2095": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7933
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2096": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7933
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2097": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7933
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2098": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7933
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2100": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7933
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2101": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7933
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2102": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7933
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2104": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7933
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2105": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7933
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2106": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7933
      ],
      "op": "MUL",
      "path": "1"
    },
    "2107": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7933
      ],
      "op": "ADD",
      "path": "1"
    },
    "2108": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7933
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2109": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7933
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2110": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7933
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2111": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7933
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2113": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7933
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2114": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7922,
        7933
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2115": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7915,
        7933
      ],
      "op": "ADD",
      "path": "1"
    },
    "2116": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7915,
        7933
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2117": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7915,
        7933
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2118": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7915,
        7933
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2120": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7915,
        7933
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2122": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7915,
        7933
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "2124": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7915,
        7933
      ],
      "op": "SHL",
      "path": "1"
    },
    "2125": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7915,
        7933
      ],
      "op": "SUB",
      "path": "1"
    },
    "2126": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7915,
        7933
      ],
      "op": "NOT",
      "path": "1"
    },
    "2127": {
      "op": "AND"
    },
    "2128": {
      "op": "SWAP1"
    },
    "2129": {
      "op": "SSTORE"
    },
    "2130": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2132": {
      "op": "DUP3"
    },
    "2133": {
      "op": "ADD"
    },
    "2134": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7915,
        7933
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2135": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7915,
        7933
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2136": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7915,
        7933
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2137": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7915,
        7933
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "2139": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7915,
        7933
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2140": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7915,
        7933
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2141": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7915,
        7933
      ],
      "op": "ADD",
      "path": "1"
    },
    "2142": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7915,
        7933
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2143": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7915,
        7933
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2144": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7915,
        7933
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2145": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7915,
        7933
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2146": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7915,
        7933
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2147": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7915,
        7933
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2148": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7915,
        7933
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x86C"
    },
    "2151": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7915,
        7933
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2152": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7915,
        7933
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E6A"
    },
    "2155": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7941,
        7960
      ],
      "op": "JUMP",
      "path": "1",
      "statement": 9
    },
    "2156": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7941,
        7960
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2157": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7941,
        7960
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2158": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7941,
        7960
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2159": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7941,
        7960
      ],
      "op": "POP",
      "path": "1"
    },
    "2160": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7941,
        7960
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2161": {
      "fn": "AcriaNode.fillRequest",
      "jump": "i",
      "offset": [
        7941,
        7960
      ],
      "op": "POP",
      "path": "1"
    },
    "2162": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7941,
        7960
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2164": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7941,
        7960
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2165": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7941,
        7960
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2167": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7941,
        7960
      ],
      "op": "EQ",
      "path": "1"
    },
    "2168": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7941,
        7960
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2169": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7941,
        7960
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2170": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7975,
        7987
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x881"
    },
    "2173": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7998,
        8002
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2174": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8006,
        8007
      ],
      "op": "POP",
      "path": "1"
    },
    "2175": {
      "branch": 94,
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7998,
        8007
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2176": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7998,
        8032
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2177": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7998,
        8032
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2178": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7998,
        8032
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "2179": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7998,
        8032
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x92D"
    },
    "2182": {
      "op": "JUMPI"
    },
    "2183": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8011,
        8032
      ],
      "op": "DUP6",
      "path": "1"
    },
    "2184": {
      "branch": 95,
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8011,
        8032
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2186": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7998,
        8032
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2188": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7995,
        8299
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "2190": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7995,
        8299
      ],
      "op": "SHL",
      "path": "1"
    },
    "2191": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7995,
        8299
      ],
      "op": "SUB",
      "path": "1"
    },
    "2192": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8082,
        8139
      ],
      "op": "AND",
      "path": "1",
      "statement": 10
    },
    "2193": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8082,
        8139
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2194": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8082,
        8139
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2199": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8082,
        8139
      ],
      "op": "AND",
      "path": "1"
    },
    "2200": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8082,
        8139
      ],
      "op": "DUP11",
      "path": "1"
    },
    "2201": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2203": {
      "op": "MLOAD"
    },
    "2204": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2206": {
      "op": "ADD"
    },
    "2207": {
      "op": "PUSH2",
      "value": "0x8AA"
    },
    "2210": {
      "op": "SWAP2"
    },
    "2211": {
      "op": "DUP2"
    },
    "2212": {
      "op": "MSTORE"
    },
    "2213": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8068
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2215": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8068
      ],
      "op": "ADD",
      "path": "1"
    },
    "2216": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8068
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2217": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2218": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2219": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2221": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2222": {
      "op": "MLOAD"
    },
    "2223": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2225": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8082,
        8139
      ],
      "op": "NOT",
      "path": "1"
    },
    "2226": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8082,
        8139
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2227": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8082,
        8139
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2228": {
      "op": "SUB"
    },
    "2229": {
      "op": "ADD"
    },
    "2230": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8082,
        8139
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2231": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8082,
        8139
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2232": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8082,
        8139
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2233": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8082,
        8139
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2234": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8082,
        8139
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2235": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8082,
        8139
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2237": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8082,
        8139
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2238": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8082,
        8139
      ],
      "op": "ADD",
      "path": "1"
    },
    "2239": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8082,
        8139
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2240": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8082,
        8139
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2241": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8082,
        8139
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2243": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8082,
        8139
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2245": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8082,
        8139
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "2247": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8082,
        8139
      ],
      "op": "SHL",
      "path": "1"
    },
    "2248": {
      "op": "SUB"
    },
    "2249": {
      "op": "AND"
    },
    "2250": {
      "op": "PUSH4",
      "value": "0x13E0B217"
    },
    "2255": {
      "op": "PUSH1",
      "value": "0xE1"
    },
    "2257": {
      "op": "SHL"
    },
    "2258": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8082,
        8139
      ],
      "op": "OR",
      "path": "1"
    },
    "2259": {
      "op": "SWAP1"
    },
    "2260": {
      "op": "MSTORE"
    },
    "2261": {
      "op": "MLOAD"
    },
    "2262": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8082,
        8139
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8DF"
    },
    "2265": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8082,
        8139
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2266": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8082,
        8139
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2267": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C65"
    },
    "2270": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2271": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2272": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8082,
        8139
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2274": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2276": {
      "fn": "AcriaNode.fillRequest",
      "jump": "i",
      "offset": [
        8055,
        8140
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2277": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2278": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2279": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "SUB",
      "path": "1"
    },
    "2280": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2281": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2283": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2284": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2285": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "CALL",
      "path": "1"
    },
    "2286": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2287": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "POP",
      "path": "1"
    },
    "2288": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "POP",
      "path": "1"
    },
    "2289": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "POP",
      "path": "1"
    },
    "2290": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2291": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2292": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2294": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2295": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "EQ",
      "path": "1"
    },
    "2296": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x91D"
    },
    "2299": {
      "branch": 95,
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2300": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2302": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2303": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2304": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "POP",
      "path": "1"
    },
    "2305": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2307": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "NOT",
      "path": "1"
    },
    "2308": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3F"
    },
    "2310": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2311": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "ADD",
      "path": "1"
    },
    "2312": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "AND",
      "path": "1"
    },
    "2313": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2314": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "ADD",
      "path": "1"
    },
    "2315": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2317": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2318": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2319": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2320": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2321": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2322": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2324": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2326": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2327": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "ADD",
      "path": "1"
    },
    "2328": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2329": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x922"
    },
    "2332": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2333": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2334": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "2336": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2337": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "POP",
      "path": "1"
    },
    "2338": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2339": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "POP",
      "path": "1"
    },
    "2340": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "POP",
      "path": "1"
    },
    "2341": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2342": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2343": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8055,
        8140
      ],
      "op": "POP",
      "path": "1"
    },
    "2344": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8041,
        8140
      ],
      "op": "POP",
      "path": "1"
    },
    "2345": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8041,
        8140
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9D9"
    },
    "2348": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8041,
        8140
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2349": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8041,
        8140
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2350": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8041,
        8140
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2352": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7995,
        8299
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2353": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7995,
        8299
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2355": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7995,
        8299
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2356": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8201,
        8298
      ],
      "op": "ADD",
      "path": "1",
      "statement": 11
    },
    "2357": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8201,
        8298
      ],
      "op": "DUP11",
      "path": "1"
    },
    "2358": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8201,
        8298
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2359": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8201,
        8298
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2360": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8201,
        8298
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "2362": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8201,
        8298
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2363": {
      "op": "ADD"
    },
    "2364": {
      "op": "DUP5"
    },
    "2365": {
      "op": "SWAP1"
    },
    "2366": {
      "op": "MSTORE"
    },
    "2367": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "2369": {
      "op": "DUP2"
    },
    "2370": {
      "op": "ADD"
    },
    "2371": {
      "op": "DUP4"
    },
    "2372": {
      "op": "SWAP1"
    },
    "2373": {
      "op": "MSTORE"
    },
    "2374": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2376": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2378": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "2380": {
      "op": "SHL"
    },
    "2381": {
      "op": "SUB"
    },
    "2382": {
      "op": "DUP8"
    },
    "2383": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8201,
        8298
      ],
      "op": "AND",
      "path": "1"
    },
    "2384": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8201,
        8298
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2385": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8201,
        8298
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "2390": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8201,
        8298
      ],
      "op": "DUP7",
      "path": "1"
    },
    "2391": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8201,
        8298
      ],
      "op": "AND",
      "path": "1"
    },
    "2392": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8201,
        8298
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2393": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8201,
        8298
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x84"
    },
    "2395": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8201,
        8298
      ],
      "op": "ADD",
      "path": "1"
    },
    "2396": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8201,
        8298
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2398": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8201,
        8298
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2399": {
      "op": "MLOAD"
    },
    "2400": {
      "op": "PUSH1",
      "value": "0x1F"
    },
    "2402": {
      "op": "NOT"
    },
    "2403": {
      "op": "DUP2"
    },
    "2404": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8201,
        8298
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2405": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8201,
        8298
      ],
      "op": "SUB",
      "path": "1"
    },
    "2406": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8201,
        8298
      ],
      "op": "ADD",
      "path": "1"
    },
    "2407": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8201,
        8298
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2408": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8201,
        8298
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2409": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8201,
        8298
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2410": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8201,
        8298
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2411": {
      "op": "MSTORE"
    },
    "2412": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2414": {
      "op": "DUP3"
    },
    "2415": {
      "op": "ADD"
    },
    "2416": {
      "op": "DUP1"
    },
    "2417": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8201,
        8298
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2418": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2420": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2422": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2424": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8201,
        8298
      ],
      "op": "SHL",
      "path": "1"
    },
    "2425": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8201,
        8298
      ],
      "op": "SUB",
      "path": "1"
    },
    "2426": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8201,
        8298
      ],
      "op": "AND",
      "path": "1"
    },
    "2427": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x5D7F703"
    },
    "2432": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE2"
    },
    "2434": {
      "op": "SHL"
    },
    "2435": {
      "op": "OR"
    },
    "2436": {
      "op": "SWAP1"
    },
    "2437": {
      "op": "MSTORE"
    },
    "2438": {
      "op": "MLOAD"
    },
    "2439": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8187
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x990"
    },
    "2442": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8187
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2443": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8187
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2444": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1C65"
    },
    "2447": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2448": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2449": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2451": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2453": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2454": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8201,
        8298
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2455": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "DUP4",
      "path": "1"
    },
    "2456": {
      "fn": "AcriaNode.fillRequest",
      "jump": "i",
      "offset": [
        8174,
        8299
      ],
      "op": "SUB",
      "path": "1"
    },
    "2457": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2458": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2460": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2461": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2462": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "CALL",
      "path": "1"
    },
    "2463": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "2464": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "POP",
      "path": "1"
    },
    "2465": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "POP",
      "path": "1"
    },
    "2466": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "POP",
      "path": "1"
    },
    "2467": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2468": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2469": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2471": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2472": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "EQ",
      "path": "1"
    },
    "2473": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9CE"
    },
    "2476": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2477": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2479": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2480": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2481": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "POP",
      "path": "1"
    },
    "2482": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1F"
    },
    "2484": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "NOT",
      "path": "1"
    },
    "2485": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3F"
    },
    "2487": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2488": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "ADD",
      "path": "1"
    },
    "2489": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "AND",
      "path": "1"
    },
    "2490": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2491": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "ADD",
      "path": "1"
    },
    "2492": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2494": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2495": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2496": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2497": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2498": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "2499": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2501": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2503": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "DUP5",
      "path": "1"
    },
    "2504": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "ADD",
      "path": "1"
    },
    "2505": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "RETURNDATACOPY",
      "path": "1"
    },
    "2506": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x9D3"
    },
    "2509": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2510": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2511": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "2513": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2514": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "POP",
      "path": "1"
    },
    "2515": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2516": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "POP",
      "path": "1"
    },
    "2517": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2518": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2519": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "POP",
      "path": "1"
    },
    "2520": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "POP",
      "path": "1"
    },
    "2521": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2522": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8174,
        8299
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2523": {
      "op": "PUSH2",
      "value": "0xA20"
    },
    "2526": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8160,
        8299
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2527": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8160,
        8299
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x86ABF6250EBAADBB42DEDF0794F338470DFBA82EED923B669F0FCE48A5CE5ABB"
    },
    "2560": {
      "op": "DUP11"
    },
    "2561": {
      "op": "DUP8"
    },
    "2562": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7995,
        8299
      ],
      "op": "DUP8",
      "path": "1"
    },
    "2563": {
      "branch": 96,
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8319,
        8326
      ],
      "op": "DUP12",
      "path": "1"
    },
    "2564": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8315,
        8476
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2566": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8315,
        8476
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2567": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8342,
        8390
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 12,
      "value": "0xA13"
    },
    "2570": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8342,
        8390
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "2571": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8342,
        8390
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "2572": {
      "op": "SWAP3"
    },
    "2573": {
      "op": "SWAP2"
    },
    "2574": {
      "op": "SWAP1"
    },
    "2575": {
      "op": "PUSH2",
      "value": "0x1D58"
    },
    "2578": {
      "op": "JUMP"
    },
    "2579": {
      "op": "JUMPDEST"
    },
    "2580": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2582": {
      "op": "MLOAD"
    },
    "2583": {
      "op": "DUP1"
    },
    "2584": {
      "op": "SWAP2"
    },
    "2585": {
      "op": "SUB"
    },
    "2586": {
      "op": "SWAP1"
    },
    "2587": {
      "op": "LOG1"
    },
    "2588": {
      "op": "PUSH2",
      "value": "0xA5E"
    },
    "2591": {
      "op": "JUMP"
    },
    "2592": {
      "op": "JUMPDEST"
    },
    "2593": {
      "op": "PUSH32",
      "value": "0x910C973544A08BC7A636EA9436726896A35FB16763F6A536991139FA41A7F0E5"
    },
    "2626": {
      "op": "DUP11"
    },
    "2627": {
      "op": "DUP8"
    },
    "2628": {
      "op": "DUP8"
    },
    "2629": {
      "op": "DUP12"
    },
    "2630": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2632": {
      "op": "MLOAD"
    },
    "2633": {
      "op": "PUSH2",
      "value": "0xA55"
    },
    "2636": {
      "op": "SWAP5"
    },
    "2637": {
      "op": "SWAP4"
    },
    "2638": {
      "op": "SWAP3"
    },
    "2639": {
      "op": "SWAP2"
    },
    "2640": {
      "op": "SWAP1"
    },
    "2641": {
      "op": "PUSH2",
      "value": "0x1D58"
    },
    "2644": {
      "op": "JUMP"
    },
    "2645": {
      "op": "JUMPDEST"
    },
    "2646": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "2648": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8342,
        8390
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "2649": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8342,
        8390
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2650": {
      "op": "SWAP2"
    },
    "2651": {
      "op": "SUB"
    },
    "2652": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8342,
        8390
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2653": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8342,
        8390
      ],
      "op": "LOG1",
      "path": "1"
    },
    "2654": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8342,
        8390
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2655": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8342,
        8390
      ],
      "op": "POP",
      "path": "1"
    },
    "2656": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8342,
        8390
      ],
      "op": "POP",
      "path": "1"
    },
    "2657": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8342,
        8390
      ],
      "op": "POP",
      "path": "1"
    },
    "2658": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8342,
        8390
      ],
      "op": "POP",
      "path": "1"
    },
    "2659": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8315,
        8476
      ],
      "op": "POP",
      "path": "1"
    },
    "2660": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8315,
        8476
      ],
      "op": "POP",
      "path": "1"
    },
    "2661": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8315,
        8476
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBA0"
    },
    "2664": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8424,
        8467
      ],
      "op": "JUMP",
      "path": "1",
      "statement": 13
    },
    "2665": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8424,
        8467
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2666": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8424,
        8467
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2667": {
      "op": "ISZERO"
    },
    "2668": {
      "op": "PUSH2",
      "value": "0xAE9"
    },
    "2671": {
      "op": "JUMPI"
    },
    "2672": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2674": {
      "op": "DUP3"
    },
    "2675": {
      "op": "DUP2"
    },
    "2676": {
      "op": "SLOAD"
    },
    "2677": {
      "op": "DUP2"
    },
    "2678": {
      "op": "LT"
    },
    "2679": {
      "op": "PUSH2",
      "value": "0xA90"
    },
    "2682": {
      "op": "JUMPI"
    },
    "2683": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "2688": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "2690": {
      "op": "SHL"
    },
    "2691": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2693": {
      "op": "MSTORE"
    },
    "2694": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "2696": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2698": {
      "op": "MSTORE"
    },
    "2699": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "2701": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2703": {
      "op": "REVERT"
    },
    "2704": {
      "op": "JUMPDEST"
    },
    "2705": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2707": {
      "op": "SWAP2"
    },
    "2708": {
      "op": "DUP3"
    },
    "2709": {
      "op": "MSTORE"
    },
    "2710": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2712": {
      "op": "DUP3"
    },
    "2713": {
      "op": "KECCAK256"
    },
    "2714": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2716": {
      "op": "SWAP1"
    },
    "2717": {
      "op": "SWAP2"
    },
    "2718": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8424,
        8467
      ],
      "op": "MUL",
      "path": "1"
    },
    "2719": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8424,
        8467
      ],
      "op": "ADD",
      "path": "1"
    },
    "2720": {
      "op": "SLOAD"
    },
    "2721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "2723": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8424,
        8467
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2725": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8424,
        8467
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2727": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8424,
        8467
      ],
      "op": "SHL",
      "path": "1"
    },
    "2728": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8424,
        8467
      ],
      "op": "SUB",
      "path": "1"
    },
    "2729": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8424,
        8467
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2731": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8424,
        8467
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2733": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8424,
        8467
      ],
      "op": "SHL",
      "path": "1"
    },
    "2734": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8315,
        8476
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2735": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7416,
        8686
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2736": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7416,
        8686
      ],
      "op": "DIV",
      "path": "1"
    },
    "2737": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7416,
        8686
      ],
      "op": "AND",
      "path": "1"
    },
    "2738": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7416,
        8686
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2739": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7416,
        8686
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "2741": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7416,
        8686
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2742": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7416,
        8686
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xAC1"
    },
    "2745": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7416,
        8686
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E8"
    },
    "2748": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7416,
        8686
      ],
      "op": "NUMBER",
      "path": "1"
    },
    "2749": {
      "branch": 97,
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8509,
        8525
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DCB"
    },
    "2752": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8506,
        8655
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2753": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8506,
        8655
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2754": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8506,
        8655
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2755": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8594
      ],
      "op": "MSTORE",
      "path": "1",
      "statement": 14
    },
    "2756": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8595,
        8596
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2758": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8597
      ],
      "op": "ADD",
      "path": "1"
    },
    "2759": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8597
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2760": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8597
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2761": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8597
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2762": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8597
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2764": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8597
      ],
      "op": "ADD",
      "path": "1"
    },
    "2765": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2767": {
      "op": "KECCAK256"
    },
    "2768": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2770": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8597
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2771": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8597
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2772": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8597
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2773": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8597
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xADE"
    },
    "2776": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8597
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2777": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8597
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2778": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8597
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D88"
    },
    "2781": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8597
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2782": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8597
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2783": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8597
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2784": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8597
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2785": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8597
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2786": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8597
      ],
      "op": "POP",
      "path": "1"
    },
    "2787": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8597
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB4F"
    },
    "2790": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8597
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2791": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8597
      ],
      "op": "POP",
      "path": "1"
    },
    "2792": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8597
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2793": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8597
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2794": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8597
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2796": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8597
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2797": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8597
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2798": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8597
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2799": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8601
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2800": {
      "op": "LT"
    },
    "2801": {
      "op": "PUSH2",
      "value": "0xB0A"
    },
    "2804": {
      "op": "JUMPI"
    },
    "2805": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8601
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4E487B71"
    },
    "2810": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8601
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "2812": {
      "op": "SHL"
    },
    "2813": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "2815": {
      "op": "MSTORE"
    },
    "2816": {
      "op": "PUSH1",
      "value": "0x32"
    },
    "2818": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "2820": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8601
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2821": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8586,
        8601
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2823": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8534,
        8552
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2825": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8534,
        8552
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2826": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8553,
        8581
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2827": {
      "offset": [
        1150,
        1154
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2828": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8553,
        8565
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2830": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8553,
        8581
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2831": {
      "fn": "AcriaNode.fillRequest",
      "jump": "i",
      "offset": [
        8553,
        8581
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "2833": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8553,
        8581
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2835": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8534,
        8582
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2836": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8534,
        8582
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2837": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8534,
        8582
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2839": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8534,
        8582
      ],
      "op": "MUL",
      "path": "1"
    },
    "2840": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8534,
        8582
      ],
      "op": "ADD",
      "path": "1"
    },
    "2841": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8534,
        8582
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2843": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8534,
        8582
      ],
      "op": "ADD",
      "path": "1"
    },
    "2844": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8534,
        8582
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "2846": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8534,
        8582
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2847": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8534,
        8582
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2848": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8534,
        8582
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2849": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8534,
        8582
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "2852": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8534,
        8601
      ],
      "op": "EXP",
      "path": "1"
    },
    "2853": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8534,
        8601
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2854": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8534,
        8601
      ],
      "op": "DIV",
      "path": "1"
    },
    "2855": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8534,
        8601
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2857": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8534,
        8601
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2859": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8534,
        8601
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2861": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8534,
        8601
      ],
      "op": "SHL",
      "path": "1"
    },
    "2862": {
      "fn": "AcriaNode.fillRequest",
      "jump": "i",
      "offset": [
        8534,
        8601
      ],
      "op": "SUB",
      "path": "1"
    },
    "2863": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8534,
        8601
      ],
      "op": "AND",
      "path": "1"
    },
    "2864": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8534,
        8601
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2866": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8534,
        8601
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2868": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8534,
        8601
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "2870": {
      "op": "SHL"
    },
    "2871": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8506,
        8655
      ],
      "op": "SUB",
      "path": "1"
    },
    "2872": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8506,
        8655
      ],
      "op": "AND",
      "path": "1"
    },
    "2873": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2875": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8506,
        8655
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2877": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8506,
        8655
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2878": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8648
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 15
    },
    "2879": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8649,
        8650
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2880": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8651
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB49"
    },
    "2883": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8651
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2884": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8651
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2885": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8651
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D88"
    },
    "2888": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8651
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2889": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8651
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2890": {
      "op": "SWAP1"
    },
    "2891": {
      "op": "SWAP2"
    },
    "2892": {
      "op": "SSTORE"
    },
    "2893": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8651
      ],
      "op": "POP",
      "path": "1"
    },
    "2894": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8651
      ],
      "op": "POP",
      "path": "1"
    },
    "2895": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8651
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2896": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8651
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2898": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8651
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2899": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8651
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2900": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8651
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2901": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8651
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2902": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8651
      ],
      "op": "LT",
      "path": "1"
    },
    "2903": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8651
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xB70"
    },
    "2906": {
      "branch": 97,
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8651
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "2907": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8651
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4E487B71"
    },
    "2912": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8651
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "2914": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8651
      ],
      "op": "SHL",
      "path": "1"
    },
    "2915": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8651
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2917": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8651
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2918": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8651
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x32"
    },
    "2920": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8651
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2922": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8651
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "2923": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8651
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "2925": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8651
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2927": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8651
      ],
      "op": "REVERT",
      "path": "1"
    },
    "2928": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8655
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2929": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8624,
        8636
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "2931": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8624,
        8655
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "2932": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8624,
        8655
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2933": {
      "op": "MSTORE"
    },
    "2934": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "2936": {
      "op": "DUP3"
    },
    "2937": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8655
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "2938": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8655
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "2940": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8655
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2941": {
      "op": "SWAP2"
    },
    "2942": {
      "op": "MUL"
    },
    "2943": {
      "op": "ADD"
    },
    "2944": {
      "op": "DUP2"
    },
    "2945": {
      "op": "DUP2"
    },
    "2946": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8655
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2947": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8655
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2949": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8624,
        8636
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2950": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8624,
        8636
      ],
      "op": "ADD",
      "path": "1"
    },
    "2951": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8624,
        8655
      ],
      "op": "DUP1",
      "path": "1"
    },
    "2952": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8624,
        8655
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "2953": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8655
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2955": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8640,
        8655
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2957": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8624,
        8655
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "2959": {
      "fn": "AcriaNode.fillRequest",
      "jump": "i",
      "offset": [
        8624,
        8655
      ],
      "op": "SHL",
      "path": "1"
    },
    "2960": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8624,
        8655
      ],
      "op": "SUB",
      "path": "1"
    },
    "2961": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8624,
        8655
      ],
      "op": "NOT",
      "path": "1"
    },
    "2962": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8624,
        8655
      ],
      "op": "AND",
      "path": "1"
    },
    "2963": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8624,
        8655
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2964": {
      "op": "SSTORE"
    },
    "2965": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "2967": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8506,
        8655
      ],
      "op": "DUP2",
      "path": "1"
    },
    "2968": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8678
      ],
      "op": "ADD",
      "path": "1",
      "statement": 16
    },
    "2969": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8679,
        8680
      ],
      "op": "DUP3",
      "path": "1"
    },
    "2970": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8681
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "2971": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8681
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2972": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "2974": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8681
      ],
      "op": "ADD",
      "path": "1"
    },
    "2975": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8681
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "2976": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8681
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2977": {
      "op": "POP"
    },
    "2978": {
      "op": "POP"
    },
    "2979": {
      "op": "POP"
    },
    "2980": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8681
      ],
      "op": "POP",
      "path": "1"
    },
    "2981": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8681
      ],
      "op": "JUMP",
      "path": "1"
    },
    "2982": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8681
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "2983": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8681
      ],
      "op": "CALLER",
      "path": "1"
    },
    "2984": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2986": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "2988": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "2990": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8681
      ],
      "op": "SHL",
      "path": "1"
    },
    "2991": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8681
      ],
      "op": "SUB",
      "path": "1"
    },
    "2992": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8681
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x0"
    },
    "3025": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8681
      ],
      "op": "AND",
      "path": "1"
    },
    "3026": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8681
      ],
      "op": "EQ",
      "path": "1"
    },
    "3027": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8681
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xC1E"
    },
    "3030": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8681
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3031": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3033": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8681
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3034": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8681
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "3038": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "3040": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8681
      ],
      "op": "SHL",
      "path": "1"
    },
    "3041": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8681
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3042": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8681
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3043": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8670,
        8681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3045": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8663,
        8681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3047": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8663,
        8681
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3048": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8663,
        8681
      ],
      "op": "ADD",
      "path": "1"
    },
    "3049": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8663,
        8681
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3050": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8663,
        8681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1C"
    },
    "3052": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8663,
        8681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "3054": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8663,
        8681
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3055": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8663,
        8681
      ],
      "op": "ADD",
      "path": "1"
    },
    "3056": {
      "op": "MSTORE"
    },
    "3057": {
      "op": "PUSH32",
      "value": "0x5265737472696374656420746F20636F6E7472616374206F776E657200000000"
    },
    "3090": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3092": {
      "op": "DUP3"
    },
    "3093": {
      "op": "ADD"
    },
    "3094": {
      "op": "MSTORE"
    },
    "3095": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8663,
        8681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "3097": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8663,
        8681
      ],
      "op": "ADD",
      "path": "1"
    },
    "3098": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8663,
        8681
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x473"
    },
    "3101": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8663,
        8681
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3102": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8663,
        8681
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3103": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8663,
        8681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "3105": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8663,
        8681
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3106": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8663,
        8681
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3107": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8663,
        8681
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3109": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8663,
        8681
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3110": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8663,
        8681
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3111": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        8663,
        8681
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3112": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        7416,
        8686
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3113": {
      "offset": [
        1505,
        1506
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3115": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6778,
        8694
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3116": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6778,
        8694
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3117": {
      "fn": "AcriaNode.fillRequest",
      "offset": [
        6778,
        8694
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3118": {
      "fn": "AcriaNode.fillRequest",
      "jump": "o",
      "offset": [
        6778,
        8694
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3120": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3331,
        3449
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3122": {
      "offset": [
        1450,
        1455
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "3124": {
      "op": "SHL"
    },
    "3125": {
      "op": "SUB"
    },
    "3126": {
      "op": "PUSH32",
      "value": "0x0"
    },
    "3159": {
      "op": "AND"
    },
    "3160": {
      "op": "SWAP2"
    },
    "3161": {
      "offset": [
        1436,
        1455
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3162": {
      "offset": [
        1436,
        1446
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3163": {
      "offset": [
        1436,
        1455
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8FC"
    },
    "3166": {
      "offset": [
        1421,
        1499
      ],
      "op": "MUL",
      "path": "1"
    },
    "3167": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        1421,
        1499
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3168": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        1421,
        1499
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3169": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        1421,
        1499
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3170": {
      "op": "SWAP1"
    },
    "3171": {
      "op": "DUP2"
    },
    "3172": {
      "op": "DUP2"
    },
    "3173": {
      "offset": [
        1421,
        1499
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3174": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        1421,
        1499
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3175": {
      "op": "DUP9"
    },
    "3176": {
      "offset": [
        1421,
        1499
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3177": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        1421,
        1499
      ],
      "op": "CALL",
      "path": "1"
    },
    "3178": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        1421,
        1499
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3179": {
      "op": "POP"
    },
    "3180": {
      "op": "POP"
    },
    "3181": {
      "op": "POP"
    },
    "3182": {
      "op": "POP"
    },
    "3183": {
      "op": "ISZERO"
    },
    "3184": {
      "op": "DUP1"
    },
    "3185": {
      "op": "ISZERO"
    },
    "3186": {
      "op": "PUSH2",
      "value": "0xC7F"
    },
    "3189": {
      "op": "JUMPI"
    },
    "3190": {
      "op": "RETURNDATASIZE"
    },
    "3191": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3193": {
      "op": "DUP1"
    },
    "3194": {
      "op": "RETURNDATACOPY"
    },
    "3195": {
      "offset": [
        1421,
        1499
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3198": {
      "offset": [
        1421,
        1499
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3199": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3385,
        3397
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3200": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3385,
        3397
      ],
      "op": "POP",
      "path": "1"
    },
    "3201": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3385,
        3397
      ],
      "op": "POP",
      "path": "1"
    },
    "3202": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3373,
        3382
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3203": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3402,
        3418
      ],
      "op": "JUMPDEST",
      "path": "1",
      "statement": 17
    },
    "3204": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3402,
        3418
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "3206": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3402,
        3418
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3208": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3402,
        3418
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3209": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 18
    },
    "3210": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3211": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3385,
        3397
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3213": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3385,
        3397
      ],
      "op": "MUL",
      "path": "1"
    },
    "3214": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3432
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3216": {
      "op": "ADD"
    },
    "3217": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3219": {
      "op": "MLOAD"
    },
    "3220": {
      "op": "SWAP1"
    },
    "3221": {
      "op": "DUP2"
    },
    "3222": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3441
      ],
      "op": "ADD",
      "path": "1"
    },
    "3223": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3225": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3226": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3227": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3228": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3229": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3230": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3385,
        3397
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3231": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3385,
        3397
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3232": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3233": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3235": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3373,
        3382
      ],
      "op": "ADD",
      "path": "1"
    },
    "3236": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3238": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3385,
        3397
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3239": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3240": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3241": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3242": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "LT",
      "path": "1"
    },
    "3243": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3244": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xD5C"
    },
    "3247": {
      "offset": [
        3427,
        3444
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3248": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3250": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3251": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3252": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3253": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3255": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3256": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3257": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3258": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3259": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3261": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3262": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3263": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "3266": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3267": {
      "fn": "AcriaNode.withdraw",
      "offset": [
        3427,
        3444
      ],
      "op": "ADD",
      "path": "1"
    },
    "3268": {
      "offset": [
        1505,
        1506
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3269": {
      "fn": "AcriaNode.withdraw",
      "jump": "o",
      "offset": [
        3331,
        3449
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3270": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8703,
        8796
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3272": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8747,
        8763
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3273": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8778,
        8786
      ],
      "op": "MUL",
      "path": "1",
      "statement": 19
    },
    "3274": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3275": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3276": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "ADD",
      "path": "1"
    },
    "3277": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3278": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3279": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xC0"
    },
    "3281": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3282": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3283": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SHL",
      "path": "1"
    },
    "3284": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3286": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3288": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xC0"
    },
    "3290": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SHL",
      "path": "1"
    },
    "3291": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SUB",
      "path": "1"
    },
    "3292": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "NOT",
      "path": "1"
    },
    "3293": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "AND",
      "path": "1"
    },
    "3294": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3295": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3296": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3298": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3300": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SHL",
      "path": "1"
    },
    "3301": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3302": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "DIV",
      "path": "1"
    },
    "3303": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3305": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3307": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3309": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SHL",
      "path": "1"
    },
    "3310": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SUB",
      "path": "1"
    },
    "3311": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3312": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3313": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "AND",
      "path": "1"
    },
    "3314": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3315": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3316": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "ADD",
      "path": "1"
    },
    "3317": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3318": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3320": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "3322": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SHL",
      "path": "1"
    },
    "3323": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3324": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "DIV",
      "path": "1"
    },
    "3325": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "AND",
      "path": "1"
    },
    "3326": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3327": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3328": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "ADD",
      "path": "1"
    },
    "3329": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3330": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3331": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3332": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3333": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3335": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xC0"
    },
    "3337": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SHL",
      "path": "1"
    },
    "3338": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3339": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "DIV",
      "path": "1"
    },
    "3340": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "3345": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3346": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3347": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "AND",
      "path": "1"
    },
    "3348": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "3350": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "DUP7",
      "path": "1"
    },
    "3351": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "ADD",
      "path": "1"
    },
    "3352": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3353": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3355": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3357": {
      "op": "SHL"
    },
    "3358": {
      "op": "SWAP1"
    },
    "3359": {
      "op": "SWAP2"
    },
    "3360": {
      "op": "DIV"
    },
    "3361": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "AND",
      "path": "1"
    },
    "3362": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "3364": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3365": {
      "op": "ADD"
    },
    "3366": {
      "op": "MSTORE"
    },
    "3367": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3369": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3370": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3371": {
      "op": "ADD"
    },
    "3372": {
      "op": "SLOAD"
    },
    "3373": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3375": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "3377": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "3379": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SHL",
      "path": "1"
    },
    "3380": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SUB",
      "path": "1"
    },
    "3381": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "AND",
      "path": "1"
    },
    "3382": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "3384": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3385": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "ADD",
      "path": "1"
    },
    "3386": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3387": {
      "op": "PUSH1",
      "value": "0x2"
    },
    "3389": {
      "op": "DUP3"
    },
    "3390": {
      "op": "ADD"
    },
    "3391": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3392": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3393": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3394": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "ADD",
      "path": "1"
    },
    "3395": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3396": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3397": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3398": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3399": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "3401": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "ADD",
      "path": "1"
    },
    "3402": {
      "op": "SLOAD"
    },
    "3403": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "3405": {
      "op": "DUP4"
    },
    "3406": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "ADD",
      "path": "1"
    },
    "3407": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3408": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3409": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3410": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3411": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3412": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "3413": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "ADD",
      "path": "1"
    },
    "3414": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3415": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "ADD",
      "path": "1"
    },
    "3416": {
      "op": "PUSH2",
      "value": "0xCA7"
    },
    "3419": {
      "op": "JUMP"
    },
    "3420": {
      "op": "JUMPDEST"
    },
    "3421": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "POP",
      "path": "1"
    },
    "3422": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "POP",
      "path": "1"
    },
    "3423": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "POP",
      "path": "1"
    },
    "3424": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "POP",
      "path": "1"
    },
    "3425": {
      "op": "SWAP1"
    },
    "3426": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "POP",
      "path": "1"
    },
    "3427": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3428": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3429": {
      "op": "JUMPDEST"
    },
    "3430": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3432": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3434": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "3436": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SHL",
      "path": "1"
    },
    "3437": {
      "op": "SUB"
    },
    "3438": {
      "op": "DUP2"
    },
    "3439": {
      "op": "AND"
    },
    "3440": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3442": {
      "op": "SWAP1"
    },
    "3443": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3444": {
      "op": "MSTORE"
    },
    "3445": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "3447": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3449": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3450": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3452": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3453": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3454": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3455": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDB9"
    },
    "3458": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3459": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3461": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3462": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "3466": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "3468": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SHL",
      "path": "1"
    },
    "3469": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3470": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3471": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3473": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3475": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3476": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "ADD",
      "path": "1"
    },
    "3477": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3478": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xC"
    },
    "3480": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "3482": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3483": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "ADD",
      "path": "1"
    },
    "3484": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3485": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH12",
      "path": "1",
      "value": "0x2737BA10309039BA30B5B2B9"
    },
    "3498": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA1"
    },
    "3500": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "SHL",
      "path": "1"
    },
    "3501": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "3503": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3504": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "ADD",
      "path": "1"
    },
    "3505": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3506": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "3508": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "ADD",
      "path": "1"
    },
    "3509": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x473"
    },
    "3512": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3513": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8771,
        8786
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3514": {
      "fn": "AcriaNode.get_requests",
      "offset": [
        8703,
        8796
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3516": {
      "fn": "AcriaNode.get_requests",
      "jump": "o",
      "offset": [
        8703,
        8796
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3518": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6300,
        6769
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "3520": {
      "op": "SHL"
    },
    "3521": {
      "op": "SUB"
    },
    "3522": {
      "op": "DUP2"
    },
    "3523": {
      "op": "AND"
    },
    "3524": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3526": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6362,
        6379
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 20
    },
    "3527": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6362,
        6379
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3528": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6362,
        6379
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3529": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6362,
        6379
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "3531": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6362,
        6379
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3533": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6362,
        6379
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3534": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6362,
        6368
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3536": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6362,
        6379
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3537": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6362,
        6379
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3538": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6362,
        6379
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3539": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6362,
        6379
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3541": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6362,
        6379
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xDE0"
    },
    "3544": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6362,
        6379
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E8"
    },
    "3547": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6354,
        6401
      ],
      "op": "NUMBER",
      "path": "1"
    },
    "3548": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6354,
        6401
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DCB"
    },
    "3551": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6354,
        6401
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3552": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6354,
        6401
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3553": {
      "op": "PUSH2",
      "value": "0xDEA"
    },
    "3556": {
      "op": "SWAP2"
    },
    "3557": {
      "op": "SWAP1"
    },
    "3558": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6354,
        6401
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E53"
    },
    "3561": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6354,
        6401
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3562": {
      "op": "JUMPDEST"
    },
    "3563": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6354,
        6401
      ],
      "op": "LT",
      "path": "1"
    },
    "3564": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6354,
        6401
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3565": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6354,
        6401
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE2F"
    },
    "3568": {
      "op": "JUMPI"
    },
    "3569": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "3571": {
      "op": "MLOAD"
    },
    "3572": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "3576": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "3578": {
      "op": "SHL"
    },
    "3579": {
      "op": "DUP2"
    },
    "3580": {
      "op": "MSTORE"
    },
    "3581": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "3583": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "3585": {
      "op": "DUP3"
    },
    "3586": {
      "op": "ADD"
    },
    "3587": {
      "op": "MSTORE"
    },
    "3588": {
      "op": "PUSH1",
      "value": "0x14"
    },
    "3590": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "3592": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6354,
        6401
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3593": {
      "op": "ADD"
    },
    "3594": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6354,
        6401
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3595": {
      "op": "PUSH20",
      "value": "0x139BC8199D5B1B0818DA58DB19481CDD185AD959"
    },
    "3616": {
      "op": "PUSH1",
      "value": "0x62"
    },
    "3618": {
      "op": "SHL"
    },
    "3619": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "3621": {
      "op": "DUP3"
    },
    "3622": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6448,
        6465
      ],
      "op": "ADD",
      "path": "1",
      "statement": 21
    },
    "3623": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6448,
        6465
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3624": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6448,
        6465
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "3626": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6448,
        6465
      ],
      "op": "ADD",
      "path": "1"
    },
    "3627": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6448,
        6465
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x473"
    },
    "3630": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6448,
        6465
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3631": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6448,
        6454
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3632": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6448,
        6465
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3634": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6448,
        6465
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3636": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6448,
        6465
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "3638": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6448,
        6465
      ],
      "op": "SHL",
      "path": "1"
    },
    "3639": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6448,
        6465
      ],
      "op": "SUB",
      "path": "1"
    },
    "3640": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6448,
        6465
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3641": {
      "op": "AND"
    },
    "3642": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6414,
        6442
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3644": {
      "offset": [
        1150,
        1154
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3645": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6414,
        6426
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3646": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6414,
        6442
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3647": {
      "fn": "AcriaNode.payout_stakes",
      "jump": "i",
      "offset": [
        6414,
        6442
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "3649": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6414,
        6442
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3651": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6414,
        6444
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3652": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6414,
        6444
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3654": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6414,
        6444
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3655": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6414,
        6444
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3656": {
      "fn": "AcriaNode.payout_stakes",
      "jump": "i",
      "offset": [
        6414,
        6444
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3657": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6414,
        6444
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3658": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6414,
        6465
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3660": {
      "branch": 98,
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6414,
        6465
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE57"
    },
    "3663": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6406,
        6490
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E8"
    },
    "3666": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6406,
        6490
      ],
      "op": "NUMBER",
      "path": "1"
    },
    "3667": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6406,
        6490
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DCB"
    },
    "3670": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6406,
        6490
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3671": {
      "op": "JUMPDEST"
    },
    "3672": {
      "op": "PUSH2",
      "value": "0xE61"
    },
    "3675": {
      "op": "SWAP2"
    },
    "3676": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6406,
        6490
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3677": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6406,
        6490
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E53"
    },
    "3680": {
      "op": "JUMP"
    },
    "3681": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6406,
        6490
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3682": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6406,
        6490
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3683": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6406,
        6490
      ],
      "op": "GT",
      "path": "1"
    },
    "3684": {
      "op": "PUSH2",
      "value": "0xE8F"
    },
    "3687": {
      "op": "JUMPI"
    },
    "3688": {
      "op": "PUSH2",
      "value": "0xE71"
    },
    "3691": {
      "op": "DUP2"
    },
    "3692": {
      "op": "DUP5"
    },
    "3693": {
      "op": "PUSH2",
      "value": "0x1965"
    },
    "3696": {
      "op": "JUMP"
    },
    "3697": {
      "op": "JUMPDEST"
    },
    "3698": {
      "op": "PUSH2",
      "value": "0xE7B"
    },
    "3701": {
      "op": "SWAP1"
    },
    "3702": {
      "op": "DUP4"
    },
    "3703": {
      "op": "PUSH2",
      "value": "0x1D88"
    },
    "3706": {
      "op": "JUMP"
    },
    "3707": {
      "op": "JUMPDEST"
    },
    "3708": {
      "op": "SWAP2"
    },
    "3709": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6406,
        6490
      ],
      "op": "POP",
      "path": "1"
    },
    "3710": {
      "op": "DUP1"
    },
    "3711": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6406,
        6490
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE87"
    },
    "3714": {
      "op": "DUP2"
    },
    "3715": {
      "op": "PUSH2",
      "value": "0x1E6A"
    },
    "3718": {
      "op": "JUMP"
    },
    "3719": {
      "op": "JUMPDEST"
    },
    "3720": {
      "op": "SWAP2"
    },
    "3721": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6548,
        6565
      ],
      "op": "POP",
      "path": "1"
    },
    "3722": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6548,
        6565
      ],
      "op": "POP",
      "path": "1"
    },
    "3723": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6499,
        6519
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE49"
    },
    "3726": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6548,
        6565
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3727": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6548,
        6565
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3728": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6548,
        6565
      ],
      "op": "POP",
      "path": "1"
    },
    "3729": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6548,
        6554
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xE9C"
    },
    "3732": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6548,
        6565
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E8"
    },
    "3735": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6548,
        6565
      ],
      "op": "NUMBER",
      "path": "1"
    },
    "3736": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6548,
        6565
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DCB"
    },
    "3739": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6548,
        6565
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3740": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6548,
        6565
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3741": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6548,
        6565
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3743": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6532,
        6659
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3745": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6599,
        6600
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "3747": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6570,
        6598
      ],
      "op": "SHL",
      "path": "1"
    },
    "3748": {
      "offset": [
        1150,
        1154
      ],
      "op": "SUB",
      "path": "1"
    },
    "3749": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6570,
        6582
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3750": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6570,
        6598
      ],
      "op": "AND",
      "path": "1"
    },
    "3751": {
      "fn": "AcriaNode.payout_stakes",
      "jump": "i",
      "offset": [
        6570,
        6598
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3753": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6570,
        6598
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3754": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6570,
        6600
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3755": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6570,
        6600
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3756": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6570,
        6600
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "3758": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6570,
        6600
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3760": {
      "fn": "AcriaNode.payout_stakes",
      "jump": "i",
      "offset": [
        6570,
        6600
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3761": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6570,
        6600
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3763": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6567,
        6568
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3764": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6567,
        6600
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3765": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6532,
        6659
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3766": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6532,
        6659
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3767": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6627,
        6653
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 22
    },
    "3768": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6640,
        6641
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3769": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6643,
        6652
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "3770": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6627,
        6639
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3771": {
      "fn": "AcriaNode.payout_stakes",
      "jump": "i",
      "offset": [
        6627,
        6653
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "3772": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6627,
        6653
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3773": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6611,
        6653
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3774": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6611,
        6653
      ],
      "op": "DUP4",
      "path": "1"
    },
    "3775": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6611,
        6653
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3776": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6611,
        6653
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x8FC"
    },
    "3779": {
      "fn": "AcriaNode.payout_stakes",
      "jump": "i",
      "offset": [
        6611,
        6653
      ],
      "op": "MUL",
      "path": "1"
    },
    "3780": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6611,
        6653
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3781": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6611,
        6653
      ],
      "op": "DUP5",
      "path": "1"
    },
    "3782": {
      "op": "SWAP2"
    },
    "3783": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6601,
        6604
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 23
    },
    "3784": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6601,
        6604
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3785": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6601,
        6604
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3786": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6601,
        6604
      ],
      "op": "DUP6",
      "path": "1"
    },
    "3787": {
      "fn": "AcriaNode.payout_stakes",
      "jump": "i",
      "offset": [
        6601,
        6604
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3788": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6601,
        6604
      ],
      "op": "DUP9",
      "path": "1"
    },
    "3789": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6601,
        6604
      ],
      "op": "CALL",
      "path": "1"
    },
    "3790": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6601,
        6604
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "3791": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6601,
        6604
      ],
      "op": "POP",
      "path": "1"
    },
    "3792": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6532,
        6659
      ],
      "op": "POP",
      "path": "1"
    },
    "3793": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6532,
        6659
      ],
      "op": "POP",
      "path": "1"
    },
    "3794": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6532,
        6659
      ],
      "op": "POP",
      "path": "1"
    },
    "3795": {
      "op": "ISZERO"
    },
    "3796": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6687,
        6715
      ],
      "op": "DUP1",
      "path": "1",
      "statement": 24
    },
    "3797": {
      "offset": [
        1150,
        1154
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "3798": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6687,
        6699
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEE3"
    },
    "3801": {
      "branch": 98,
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6687,
        6715
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3802": {
      "fn": "AcriaNode.payout_stakes",
      "jump": "i",
      "offset": [
        6687,
        6715
      ],
      "op": "RETURNDATASIZE",
      "path": "1"
    },
    "3803": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6687,
        6715
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3805": {
      "op": "DUP1"
    },
    "3806": {
      "op": "RETURNDATACOPY"
    },
    "3807": {
      "op": "RETURNDATASIZE"
    },
    "3808": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "3810": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6667,
        6684
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3811": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6667,
        6684
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3812": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6667,
        6684
      ],
      "op": "POP",
      "path": "1"
    },
    "3813": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6667,
        6684
      ],
      "op": "POP",
      "path": "1"
    },
    "3814": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6667,
        6684
      ],
      "op": "POP",
      "path": "1"
    },
    "3815": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6667,
        6684
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3816": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6667,
        6684
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3817": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6667,
        6673
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xDE0B6B3A7640000"
    },
    "3826": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6667,
        6684
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "3827": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6667,
        6684
      ],
      "op": "LT",
      "path": "1"
    },
    "3828": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6667,
        6684
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xEFC"
    },
    "3831": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6667,
        6684
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3832": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6667,
        6684
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3834": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6667,
        6684
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3835": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6667,
        6715
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3836": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6667,
        6715
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3837": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6667,
        6715
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3839": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6667,
        6715
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "3840": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "GT",
      "path": "1",
      "statement": 25
    },
    "3841": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF09"
    },
    "3844": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6667,
        6684
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3845": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6667,
        6684
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3847": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3848": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3849": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3850": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xDE0B6B3A7640000"
    },
    "3859": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3861": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3862": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3863": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3864": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6667,
        6684
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3865": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "LT",
      "path": "1"
    },
    "3866": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF33"
    },
    "3869": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6667,
        6684
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3870": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4E487B71"
    },
    "3875": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "3877": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "SHL",
      "path": "1"
    },
    "3878": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3880": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3881": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x32"
    },
    "3883": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3885": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3886": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "3888": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3890": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3891": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3892": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3894": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3895": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3896": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3897": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3899": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3900": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3901": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3902": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6723,
        6764
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3904": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6300,
        6769
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3905": {
      "fn": "AcriaNode.payout_stakes",
      "offset": [
        6300,
        6769
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3906": {
      "fn": "AcriaNode.payout_stakes",
      "jump": "o",
      "offset": [
        6300,
        6769
      ],
      "op": "MUL",
      "path": "1"
    },
    "3907": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1718,
        1966
      ],
      "op": "ADD",
      "path": "1"
    },
    "3908": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1788,
        1794
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 26
    },
    "3909": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1776,
        1785
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF5E"
    },
    "3912": {
      "branch": 99,
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1776,
        1794
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3913": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1768,
        1795
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3915": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1768,
        1795
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3917": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1768,
        1795
      ],
      "op": "SHL",
      "path": "1"
    },
    "3918": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1768,
        1795
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3919": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1768,
        1795
      ],
      "op": "DIV",
      "path": "1"
    },
    "3920": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1768,
        1795
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3922": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1820,
        1821
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 27,
      "value": "0x1"
    },
    "3924": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1808,
        1817
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "3926": {
      "branch": 100,
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1808,
        1821
      ],
      "op": "SHL",
      "path": "1"
    },
    "3927": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1800,
        1822
      ],
      "op": "SUB",
      "path": "1"
    },
    "3928": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1800,
        1822
      ],
      "op": "AND",
      "path": "1"
    },
    "3929": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1800,
        1822
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "3930": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1800,
        1822
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D88"
    },
    "3933": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1800,
        1822
      ],
      "op": "JUMP",
      "path": "1"
    },
    "3934": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1800,
        1822
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3935": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1866,
        1872
      ],
      "op": "LT",
      "path": "1",
      "statement": 28
    },
    "3936": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1855
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF68"
    },
    "3939": {
      "branch": 100,
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1856,
        1858
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3940": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1859
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3942": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1859
      ],
      "op": "DUP1",
      "path": "1"
    },
    "3943": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1859
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3944": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1859
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3945": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1859
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3947": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1859
      ],
      "op": "DUP2",
      "path": "1"
    },
    "3948": {
      "op": "DUP2"
    },
    "3949": {
      "op": "SLOAD"
    },
    "3950": {
      "op": "DUP2"
    },
    "3951": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1859
      ],
      "op": "LT",
      "path": "1"
    },
    "3952": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1859
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xF89"
    },
    "3955": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1859
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "3956": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1859
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0x4E487B71"
    },
    "3961": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1859
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "3963": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1859
      ],
      "op": "SHL",
      "path": "1"
    },
    "3964": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1859
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3966": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1859
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3967": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1859
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x32"
    },
    "3969": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1859
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3971": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1859
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3972": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1859
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "3974": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1859
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3976": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1859
      ],
      "op": "REVERT",
      "path": "1"
    },
    "3977": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1859
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "3978": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1859
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "3980": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1859
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3981": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1859
      ],
      "op": "DUP3",
      "path": "1"
    },
    "3982": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1859
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "3983": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1859
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "3985": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1859
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3986": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1859
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "3987": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1863
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "3988": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1835,
        1863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "3990": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1835,
        1863
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "3991": {
      "op": "SWAP2"
    },
    "3992": {
      "op": "MUL"
    },
    "3993": {
      "op": "ADD"
    },
    "3994": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1863
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "3995": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "3997": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "3999": {
      "op": "SHL"
    },
    "4000": {
      "op": "SWAP1"
    },
    "4001": {
      "op": "DIV"
    },
    "4002": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4004": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1847,
        1863
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4006": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1835,
        1844
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4008": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1835,
        1863
      ],
      "op": "SHL",
      "path": "1"
    },
    "4009": {
      "fn": "AcriaNode.pump_fee",
      "jump": "i",
      "offset": [
        1835,
        1863
      ],
      "op": "SUB",
      "path": "1"
    },
    "4010": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1835,
        1863
      ],
      "op": "AND",
      "path": "1"
    },
    "4011": {
      "branch": 101,
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1835,
        1872
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFB3"
    },
    "4014": {
      "branch": 101,
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1827,
        1873
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4015": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1827,
        1873
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4017": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1827,
        1873
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4018": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1827,
        1873
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4019": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1827,
        1873
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4020": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1827,
        1873
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "4021": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1894
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 29,
      "value": "0x0"
    },
    "4023": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1895,
        1897
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4024": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1898
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4025": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1898
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4026": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1898
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4027": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1898
      ],
      "op": "LT",
      "path": "1"
    },
    "4028": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1898
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xFD5"
    },
    "4031": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1898
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4032": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "4037": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4039": {
      "op": "SHL"
    },
    "4040": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1898
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4042": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1898
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4043": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1898
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x32"
    },
    "4045": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1898
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4047": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1898
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4048": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1898
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "4050": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1898
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4052": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1898
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4053": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1898
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4054": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1898
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4056": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1898
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4057": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1898
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4058": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1898
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4059": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1898
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4061": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1898
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4062": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1898
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4063": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1898
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4064": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1898
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4066": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1898
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4067": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1898
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4068": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1898
      ],
      "op": "MUL",
      "path": "1"
    },
    "4069": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1898
      ],
      "op": "ADD",
      "path": "1"
    },
    "4070": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1909
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4071": {
      "op": "SLOAD"
    },
    "4072": {
      "op": "PUSH1",
      "value": "0x8"
    },
    "4074": {
      "op": "SWAP1"
    },
    "4075": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1909
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1005"
    },
    "4078": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1909
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4079": {
      "op": "DUP5"
    },
    "4080": {
      "op": "SWAP1"
    },
    "4081": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4083": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "4085": {
      "op": "SHL"
    },
    "4086": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1886,
        1909
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4087": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1878,
        1915
      ],
      "op": "DIV",
      "path": "1"
    },
    "4088": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1878,
        1915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4090": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1878,
        1915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4092": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1878,
        1915
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4094": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1878,
        1915
      ],
      "op": "SHL",
      "path": "1"
    },
    "4095": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1878,
        1915
      ],
      "op": "SUB",
      "path": "1"
    },
    "4096": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1951,
        1960
      ],
      "op": "AND",
      "path": "1",
      "statement": 30
    },
    "4097": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1932
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DA0"
    },
    "4100": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1933,
        1935
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4101": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1936
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4102": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1936
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4103": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1936
      ],
      "op": "POP",
      "path": "1"
    },
    "4104": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1936
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x100"
    },
    "4107": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1936
      ],
      "op": "EXP",
      "path": "1"
    },
    "4108": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1936
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4109": {
      "op": "SLOAD"
    },
    "4110": {
      "op": "DUP2"
    },
    "4111": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4113": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4115": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4117": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1936
      ],
      "op": "SHL",
      "path": "1"
    },
    "4118": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1936
      ],
      "op": "SUB",
      "path": "1"
    },
    "4119": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1936
      ],
      "op": "MUL",
      "path": "1"
    },
    "4120": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1936
      ],
      "op": "NOT",
      "path": "1"
    },
    "4121": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1936
      ],
      "op": "AND",
      "path": "1"
    },
    "4122": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1936
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4123": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1936
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4124": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4126": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4128": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1936
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4130": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1936
      ],
      "op": "SHL",
      "path": "1"
    },
    "4131": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1936
      ],
      "op": "SUB",
      "path": "1"
    },
    "4132": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1936
      ],
      "op": "AND",
      "path": "1"
    },
    "4133": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1936
      ],
      "op": "MUL",
      "path": "1"
    },
    "4134": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1936
      ],
      "op": "OR",
      "path": "1"
    },
    "4135": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1936
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4136": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1936
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4137": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1936
      ],
      "op": "POP",
      "path": "1"
    },
    "4138": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1936
      ],
      "op": "POP",
      "path": "1"
    },
    "4139": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1936
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4140": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4141": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "4143": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1940
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4144": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1940
      ],
      "op": "GT",
      "path": "1"
    },
    "4145": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1039"
    },
    "4148": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4149": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4151": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4152": {
      "op": "REVERT"
    },
    "4153": {
      "op": "JUMPDEST"
    },
    "4154": {
      "op": "PUSH8",
      "value": "0xDE0B6B3A7640000"
    },
    "4163": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "4164": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "LT",
      "path": "1"
    },
    "4165": {
      "op": "PUSH2",
      "value": "0x104D"
    },
    "4168": {
      "op": "JUMPI"
    },
    "4169": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4171": {
      "op": "DUP1"
    },
    "4172": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4173": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4174": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xF4240"
    },
    "4178": {
      "fn": "AcriaNode.pump_fee",
      "jump": "i",
      "offset": [
        1924,
        1961
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4179": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "LT",
      "path": "1"
    },
    "4180": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x105C"
    },
    "4183": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4184": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4186": {
      "op": "DUP1"
    },
    "4187": {
      "op": "REVERT"
    },
    "4188": {
      "op": "JUMPDEST"
    },
    "4189": {
      "op": "PUSH3",
      "value": "0x7A120"
    },
    "4193": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4194": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "4199": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "AND",
      "path": "1"
    },
    "4200": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "LT",
      "path": "1"
    },
    "4201": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1071"
    },
    "4204": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4205": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4207": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4208": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4209": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4210": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1079"
    },
    "4213": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1AA0"
    },
    "4216": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4217": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4218": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4220": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4222": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xC0"
    },
    "4224": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "SHL",
      "path": "1"
    },
    "4225": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "SUB",
      "path": "1"
    },
    "4226": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "NOT",
      "path": "1"
    },
    "4227": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "DUP8",
      "path": "1"
    },
    "4228": {
      "fn": "AcriaNode.pump_fee",
      "offset": [
        1924,
        1961
      ],
      "op": "AND",
      "path": "1"
    },
    "4229": {
      "op": "DUP2"
    },
    "4230": {
      "op": "MSTORE"
    },
    "4231": {
      "fn": "AcriaNode.pump_fee",
      "jump": "o",
      "offset": [
        1718,
        1966
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4233": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2559,
        3322
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4235": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2744,
        2747
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 31,
      "value": "0x40"
    },
    "4237": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2734,
        2741
      ],
      "op": "SHL",
      "path": "1"
    },
    "4238": {
      "branch": 102,
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2734,
        2747
      ],
      "op": "SUB",
      "path": "1"
    },
    "4239": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2726,
        2748
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "4240": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2726,
        2748
      ],
      "op": "AND",
      "path": "1"
    },
    "4241": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2726,
        2748
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4243": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2726,
        2748
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4244": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2726,
        2748
      ],
      "op": "ADD",
      "path": "1"
    },
    "4245": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2726,
        2748
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4246": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2774,
        2780
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 32,
      "value": "0x109F"
    },
    "4249": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2762,
        2771
      ],
      "op": "DUP6",
      "path": "1"
    },
    "4250": {
      "branch": 103,
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2762,
        2780
      ],
      "op": "NUMBER",
      "path": "1"
    },
    "4251": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2754,
        2781
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D88"
    },
    "4254": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2754,
        2781
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4255": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2754,
        2781
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4256": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2754,
        2781
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4258": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2754,
        2781
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4260": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2754,
        2781
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4262": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2805,
        2812
      ],
      "op": "SHL",
      "path": "1",
      "statement": 33
    },
    "4263": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2795,
        2802
      ],
      "op": "SUB",
      "path": "1"
    },
    "4264": {
      "branch": 104,
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2795,
        2812
      ],
      "op": "AND",
      "path": "1"
    },
    "4265": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2787,
        2813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4267": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2787,
        2813
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4268": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2787,
        2813
      ],
      "op": "ADD",
      "path": "1"
    },
    "4269": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2787,
        2813
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4270": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2787,
        2813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4272": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2787,
        2813
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4274": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2837,
        2843
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 34,
      "value": "0xA0"
    },
    "4276": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2827,
        2834
      ],
      "op": "SHL",
      "path": "1"
    },
    "4277": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2827,
        2843
      ],
      "op": "SUB",
      "path": "1"
    },
    "4278": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2827,
        2843
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4279": {
      "branch": 105,
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2827,
        2843
      ],
      "op": "AND",
      "path": "1"
    },
    "4280": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2819,
        2844
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "4282": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2819,
        2844
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4283": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2819,
        2844
      ],
      "op": "ADD",
      "path": "1"
    },
    "4284": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2819,
        2844
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4285": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2819,
        2844
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4287": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2819,
        2844
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4288": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2855,
        2881
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "4293": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2855,
        2881
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4294": {
      "fn": "AcriaNode.create_request_with_data",
      "jump": "i",
      "offset": [
        2855,
        2881
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4295": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2855,
        2881
      ],
      "op": "AND",
      "path": "1"
    },
    "4296": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "4298": {
      "op": "DUP4"
    },
    "4299": {
      "op": "ADD"
    },
    "4300": {
      "op": "MSTORE"
    },
    "4301": {
      "op": "DUP5"
    },
    "4302": {
      "op": "AND"
    },
    "4303": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2887,
        2921
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 35,
      "value": "0x80"
    },
    "4305": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2887,
        2921
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4306": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2887,
        2921
      ],
      "op": "ADD",
      "path": "1"
    },
    "4307": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2887,
        2921
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4308": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2952,
        2961
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 36
    },
    "4309": {
      "op": "ISZERO"
    },
    "4310": {
      "op": "PUSH2",
      "value": "0x10E1"
    },
    "4313": {
      "op": "JUMPI"
    },
    "4314": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "4316": {
      "op": "DUP2"
    },
    "4317": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2927,
        2962
      ],
      "op": "ADD",
      "path": "1"
    },
    "4318": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2927,
        2942
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4319": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2927,
        2942
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4320": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2927,
        2942
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4321": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2927,
        2962
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4322": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3000,
        3022
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 37
    },
    "4323": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3015,
        3022
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "4324": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3000,
        3012
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x10EF"
    },
    "4327": {
      "branch": 105,
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3000,
        3022
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4328": {
      "fn": "AcriaNode.create_request_with_data",
      "jump": "i",
      "offset": [
        3000,
        3022
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "4330": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3000,
        3022
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4331": {
      "op": "ADD"
    },
    "4332": {
      "op": "DUP3"
    },
    "4333": {
      "op": "SWAP1"
    },
    "4334": {
      "op": "MSTORE"
    },
    "4335": {
      "op": "JUMPDEST"
    },
    "4336": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2968,
        3023
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4338": {
      "op": "DUP1"
    },
    "4339": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2968,
        2990
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4340": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2968,
        2990
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4342": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        2968,
        3023
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4343": {
      "op": "ADD"
    },
    "4344": {
      "op": "DUP3"
    },
    "4345": {
      "op": "SSTORE"
    },
    "4346": {
      "op": "SWAP1"
    },
    "4347": {
      "op": "DUP1"
    },
    "4348": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3029,
        3060
      ],
      "op": "MSTORE",
      "path": "1",
      "statement": 38
    },
    "4349": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3029,
        3060
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4350": {
      "op": "MLOAD"
    },
    "4351": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3029,
        3049
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563"
    },
    "4384": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3029,
        3049
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4386": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3029,
        3060
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4387": {
      "op": "SWAP3"
    },
    "4388": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3090,
        3105
      ],
      "op": "MUL",
      "path": "1",
      "statement": 39
    },
    "4389": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3066,
        3106
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4390": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3066,
        3106
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4391": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3066,
        3106
      ],
      "op": "ADD",
      "path": "1"
    },
    "4392": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3066,
        3106
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4393": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3066,
        3080
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4394": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3066,
        3080
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4396": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3066,
        3080
      ],
      "op": "DUP6",
      "path": "1"
    },
    "4397": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3066,
        3106
      ],
      "op": "ADD",
      "path": "1"
    },
    "4398": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3112,
        3149
      ],
      "op": "MLOAD",
      "path": "1",
      "statement": 40
    },
    "4399": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3112,
        3149
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4401": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3112,
        3131
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4402": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3112,
        3131
      ],
      "op": "ADD",
      "path": "1"
    },
    "4403": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3112,
        3131
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4404": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3112,
        3149
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "4406": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3158,
        3168
      ],
      "op": "DUP8",
      "path": "1"
    },
    "4407": {
      "branch": 106,
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3158,
        3168
      ],
      "op": "ADD",
      "path": "1"
    },
    "4408": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3155,
        3199
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4409": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3155,
        3199
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "4411": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3175,
        3191
      ],
      "op": "DUP9",
      "path": "1",
      "statement": 41
    },
    "4412": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3175,
        3191
      ],
      "op": "ADD",
      "path": "1"
    },
    "4413": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3175,
        3191
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4414": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3175,
        3199
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4423": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3175,
        3199
      ],
      "op": "NOT",
      "path": "1"
    },
    "4424": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3175,
        3199
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4425": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3155,
        3199
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "4426": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3208,
        3230
      ],
      "op": "AND",
      "path": "1"
    },
    "4427": {
      "branch": 107,
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3208,
        3230
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xC0"
    },
    "4429": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3205,
        3285
      ],
      "op": "SWAP7",
      "path": "1"
    },
    "4430": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3205,
        3285
      ],
      "op": "DUP8",
      "path": "1"
    },
    "4431": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3237,
        3265
      ],
      "op": "SHR",
      "path": "1",
      "statement": 42
    },
    "4432": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3237,
        3265
      ],
      "op": "OR",
      "path": "1"
    },
    "4433": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3237,
        3265
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4442": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3237,
        3285
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4444": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3237,
        3285
      ],
      "op": "SHL",
      "path": "1"
    },
    "4445": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3237,
        3285
      ],
      "op": "NOT",
      "path": "1"
    },
    "4446": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3205,
        3285
      ],
      "op": "AND",
      "path": "1"
    },
    "4447": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3299
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 43,
      "value": "0x1"
    },
    "4449": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4451": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "SHL",
      "path": "1"
    },
    "4452": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4454": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4456": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4458": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "SHL",
      "path": "1"
    },
    "4459": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "SUB",
      "path": "1"
    },
    "4460": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "4461": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "DUP6",
      "path": "1"
    },
    "4462": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "AND",
      "path": "1"
    },
    "4463": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "MUL",
      "path": "1"
    },
    "4464": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "OR",
      "path": "1"
    },
    "4465": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "4474": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "4476": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "SHL",
      "path": "1"
    },
    "4477": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "NOT",
      "path": "1"
    },
    "4478": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "AND",
      "path": "1"
    },
    "4479": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4481": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "4483": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "SHL",
      "path": "1"
    },
    "4484": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "4485": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4486": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4487": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "AND",
      "path": "1"
    },
    "4488": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4489": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4490": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4491": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "MUL",
      "path": "1"
    },
    "4492": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "OR",
      "path": "1"
    },
    "4493": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "4498": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xC0"
    },
    "4500": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "SHL",
      "path": "1"
    },
    "4501": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "NOT",
      "path": "1"
    },
    "4502": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "AND",
      "path": "1"
    },
    "4503": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4505": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xC0"
    },
    "4507": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "SHL",
      "path": "1"
    },
    "4508": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "4513": {
      "op": "SWAP3"
    },
    "4514": {
      "op": "DUP4"
    },
    "4515": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "AND",
      "path": "1"
    },
    "4516": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "MUL",
      "path": "1"
    },
    "4517": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "OR",
      "path": "1"
    },
    "4518": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4520": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4522": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "4524": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "SHL",
      "path": "1"
    },
    "4525": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "SUB",
      "path": "1"
    },
    "4526": {
      "op": "AND"
    },
    "4527": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4529": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4531": {
      "op": "SHL"
    },
    "4532": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4533": {
      "op": "SWAP1"
    },
    "4534": {
      "op": "SWAP3"
    },
    "4535": {
      "op": "AND"
    },
    "4536": {
      "op": "MUL"
    },
    "4537": {
      "op": "OR"
    },
    "4538": {
      "op": "SWAP1"
    },
    "4539": {
      "op": "SSTORE"
    },
    "4540": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4542": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4543": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "ADD",
      "path": "1"
    },
    "4544": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4545": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564"
    },
    "4578": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4579": {
      "op": "ADD"
    },
    "4580": {
      "op": "DUP1"
    },
    "4581": {
      "op": "SLOAD"
    },
    "4582": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4584": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4586": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "4588": {
      "op": "SHL"
    },
    "4589": {
      "op": "SUB"
    },
    "4590": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "NOT",
      "path": "1"
    },
    "4591": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "AND",
      "path": "1"
    },
    "4592": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4594": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4596": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "4598": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "SHL",
      "path": "1"
    },
    "4599": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "SUB",
      "path": "1"
    },
    "4600": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4601": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "4602": {
      "op": "AND"
    },
    "4603": {
      "op": "SWAP2"
    },
    "4604": {
      "op": "SWAP1"
    },
    "4605": {
      "op": "SWAP2"
    },
    "4606": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "OR",
      "path": "1"
    },
    "4607": {
      "op": "SWAP1"
    },
    "4608": {
      "op": "SSTORE"
    },
    "4609": {
      "op": "DUP3"
    },
    "4610": {
      "op": "ADD"
    },
    "4611": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "4612": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E565"
    },
    "4645": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4646": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "ADD",
      "path": "1"
    },
    "4647": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4648": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "4650": {
      "op": "SWAP1"
    },
    "4651": {
      "op": "SWAP2"
    },
    "4652": {
      "op": "ADD"
    },
    "4653": {
      "op": "MLOAD"
    },
    "4654": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566"
    },
    "4687": {
      "op": "SWAP1"
    },
    "4688": {
      "op": "SWAP2"
    },
    "4689": {
      "op": "ADD"
    },
    "4690": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "4691": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "POP",
      "path": "1"
    },
    "4692": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "POP",
      "path": "1"
    },
    "4693": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "POP",
      "path": "1"
    },
    "4694": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "POP",
      "path": "1"
    },
    "4695": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "POP",
      "path": "1"
    },
    "4696": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "POP",
      "path": "1"
    },
    "4697": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4698": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4699": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4701": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4703": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "4705": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "SHL",
      "path": "1"
    },
    "4706": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "SUB",
      "path": "1"
    },
    "4707": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4708": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "AND",
      "path": "1"
    },
    "4709": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4711": {
      "op": "SWAP1"
    },
    "4712": {
      "op": "DUP2"
    },
    "4713": {
      "op": "MSTORE"
    },
    "4714": {
      "op": "PUSH1",
      "value": "0x5"
    },
    "4716": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "4718": {
      "op": "MSTORE"
    },
    "4719": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4721": {
      "op": "SWAP1"
    },
    "4722": {
      "op": "KECCAK256"
    },
    "4723": {
      "op": "SLOAD"
    },
    "4724": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "4726": {
      "op": "PUSH2",
      "value": "0x1281"
    },
    "4729": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E8"
    },
    "4732": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "NUMBER",
      "path": "1"
    },
    "4733": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DCB"
    },
    "4736": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4737": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4738": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x128B"
    },
    "4741": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4742": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4743": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E53"
    },
    "4746": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4747": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4748": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "LT",
      "path": "1"
    },
    "4749": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1299"
    },
    "4752": {
      "branch": 107,
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4753": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1299"
    },
    "4756": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4757": {
      "op": "PUSH2",
      "value": "0xD65"
    },
    "4760": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4761": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4762": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12A2"
    },
    "4765": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4766": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x14E6"
    },
    "4769": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4770": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4771": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "POP",
      "path": "1"
    },
    "4772": {
      "fn": "AcriaNode.create_request_with_data",
      "offset": [
        3291,
        3317
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4773": {
      "op": "JUMPDEST"
    },
    "4774": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4776": {
      "op": "DUP2"
    },
    "4777": {
      "op": "PUSH2",
      "value": "0x12C4"
    },
    "4780": {
      "op": "JUMPI"
    },
    "4781": {
      "op": "POP"
    },
    "4782": {
      "fn": "AcriaNode.create_request_with_data",
      "jump": "o",
      "offset": [
        2559,
        3322
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "4784": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4231,
        4410
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4785": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4787": {
      "op": "SWAP1"
    },
    "4788": {
      "op": "DUP2"
    },
    "4789": {
      "op": "MSTORE"
    },
    "4790": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "4792": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4330,
        4347
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4794": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4330,
        4347
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4795": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4330,
        4347
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4797": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4330,
        4347
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4798": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4330,
        4347
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4799": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4330,
        4347
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4800": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4330,
        4336
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12D5"
    },
    "4803": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4330,
        4347
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4804": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4330,
        4347
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4805": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4330,
        4347
      ],
      "op": "POP",
      "path": "1"
    },
    "4806": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4330,
        4347
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4808": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4330,
        4347
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4809": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4330,
        4347
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4810": {
      "op": "MSTORE"
    },
    "4811": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4296,
        4324
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "4813": {
      "offset": [
        1150,
        1154
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4815": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4296,
        4308
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4816": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4296,
        4324
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4818": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "jump": "i",
      "offset": [
        4296,
        4324
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4819": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4296,
        4324
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "4820": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4296,
        4326
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "4821": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4296,
        4326
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4822": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4296,
        4326
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "4823": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4296,
        4326
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4824": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "jump": "i",
      "offset": [
        4296,
        4326
      ],
      "op": "POP",
      "path": "1"
    },
    "4825": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4296,
        4326
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4826": {
      "branch": 108,
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4296,
        4347
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4827": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4293,
        4377
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "4829": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4293,
        4377
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4830": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4353,
        4377
      ],
      "op": "GT",
      "path": "1",
      "statement": 44
    },
    "4831": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4367,
        4376
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12E7"
    },
    "4834": {
      "branch": 108,
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4353,
        4366
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4835": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "jump": "i",
      "offset": [
        4353,
        4377
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4837": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4353,
        4377
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4838": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4382,
        4405
      ],
      "op": "REVERT",
      "path": "1",
      "statement": 45
    },
    "4839": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4395,
        4404
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4840": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4382,
        4394
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xDE0B6B3A7640000"
    },
    "4849": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "jump": "i",
      "offset": [
        4382,
        4405
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "4850": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4382,
        4405
      ],
      "op": "LT",
      "path": "1"
    },
    "4851": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "offset": [
        4231,
        4410
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x12FB"
    },
    "4854": {
      "fn": "AcriaNode.cancel_stake_withdraw",
      "jump": "o",
      "offset": [
        4231,
        4410
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4855": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1520,
        1713
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4857": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1582,
        1589
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4858": {
      "branch": 109,
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1598,
        1609
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4859": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1595,
        1709
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4860": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1595,
        1709
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0xF4240"
    },
    "4864": {
      "op": "DUP3"
    },
    "4865": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1637,
        1654
      ],
      "op": "LT",
      "path": "1",
      "statement": 46
    },
    "4866": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1637,
        1654
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x130A"
    },
    "4869": {
      "branch": 109,
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1623,
        1655
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4870": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1623,
        1655
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4872": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1623,
        1655
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4873": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1623,
        1655
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4874": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1623,
        1636
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4875": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1623,
        1655
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x7A120"
    },
    "4879": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1623,
        1655
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4880": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1623,
        1655
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "4885": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1623,
        1655
      ],
      "op": "AND",
      "path": "1"
    },
    "4886": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1623,
        1655
      ],
      "op": "LT",
      "path": "1"
    },
    "4887": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1623,
        1655
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x131F"
    },
    "4890": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1616,
        1655
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "4891": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1616,
        1655
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "4893": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1595,
        1709
      ],
      "op": "DUP1",
      "path": "1"
    },
    "4894": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1682,
        1703
      ],
      "op": "REVERT",
      "path": "1"
    },
    "4895": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1682,
        1703
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4896": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1682,
        1703
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1327"
    },
    "4899": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1682,
        1703
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1AA0"
    },
    "4902": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1682,
        1703
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4903": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1682,
        1695
      ],
      "op": "JUMPDEST",
      "path": "1",
      "statement": 47
    },
    "4904": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1682,
        1703
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4906": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1682,
        1703
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4908": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1682,
        1703
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xC0"
    },
    "4910": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1682,
        1703
      ],
      "op": "SHL",
      "path": "1"
    },
    "4911": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1682,
        1703
      ],
      "op": "SUB",
      "path": "1"
    },
    "4912": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1682,
        1703
      ],
      "op": "NOT",
      "path": "1"
    },
    "4913": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1595,
        1709
      ],
      "op": "DUP6",
      "path": "1"
    },
    "4914": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1520,
        1713
      ],
      "op": "AND",
      "path": "1"
    },
    "4915": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1520,
        1713
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4916": {
      "fn": "AcriaNode.get_total_stake",
      "offset": [
        1520,
        1713
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4917": {
      "fn": "AcriaNode.get_total_stake",
      "jump": "o",
      "offset": [
        1520,
        1713
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4919": {
      "fn": "AcriaNode.create_request",
      "offset": [
        1975,
        2550
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4921": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2108,
        2111
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 48,
      "value": "0x40"
    },
    "4923": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2098,
        2105
      ],
      "op": "SHL",
      "path": "1"
    },
    "4924": {
      "branch": 110,
      "fn": "AcriaNode.create_request",
      "offset": [
        2098,
        2111
      ],
      "op": "SUB",
      "path": "1"
    },
    "4925": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2090,
        2112
      ],
      "op": "CALLVALUE",
      "path": "1"
    },
    "4926": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2090,
        2112
      ],
      "op": "AND",
      "path": "1"
    },
    "4927": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2090,
        2112
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "4929": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2090,
        2112
      ],
      "op": "DUP3",
      "path": "1"
    },
    "4930": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2090,
        2112
      ],
      "op": "ADD",
      "path": "1"
    },
    "4931": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2090,
        2112
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4932": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2138,
        2144
      ],
      "op": "PUSH2",
      "path": "1",
      "statement": 49,
      "value": "0x134D"
    },
    "4935": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2126,
        2135
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4936": {
      "branch": 111,
      "fn": "AcriaNode.create_request",
      "offset": [
        2126,
        2144
      ],
      "op": "NUMBER",
      "path": "1"
    },
    "4937": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2118,
        2145
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D88"
    },
    "4940": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2118,
        2145
      ],
      "op": "JUMP",
      "path": "1"
    },
    "4941": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2118,
        2145
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "4942": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2118,
        2145
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4944": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2118,
        2145
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4946": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2118,
        2145
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4948": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2169,
        2176
      ],
      "op": "SHL",
      "path": "1",
      "statement": 50
    },
    "4949": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2159,
        2166
      ],
      "op": "SUB",
      "path": "1"
    },
    "4950": {
      "branch": 112,
      "fn": "AcriaNode.create_request",
      "offset": [
        2159,
        2176
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4951": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2151,
        2177
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4952": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2151,
        2177
      ],
      "op": "AND",
      "path": "1"
    },
    "4953": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2151,
        2177
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "4955": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2151,
        2177
      ],
      "op": "DUP4",
      "path": "1"
    },
    "4956": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2151,
        2177
      ],
      "op": "ADD",
      "path": "1"
    },
    "4957": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2151,
        2177
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4958": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2201,
        2207
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 51
    },
    "4959": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2191,
        2198
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "4960": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2191,
        2207
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4962": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2191,
        2207
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "4964": {
      "branch": 113,
      "fn": "AcriaNode.create_request",
      "offset": [
        2191,
        2207
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "4966": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2183,
        2208
      ],
      "op": "SHL",
      "path": "1"
    },
    "4967": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2183,
        2208
      ],
      "op": "SUB",
      "path": "1"
    },
    "4968": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2183,
        2208
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "4969": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2183,
        2208
      ],
      "op": "DUP7",
      "path": "1"
    },
    "4970": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2183,
        2208
      ],
      "op": "AND",
      "path": "1"
    },
    "4971": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2183,
        2208
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "4973": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2219,
        2245
      ],
      "op": "DUP5",
      "path": "1"
    },
    "4974": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2219,
        2245
      ],
      "op": "ADD",
      "path": "1"
    },
    "4975": {
      "fn": "AcriaNode.create_request",
      "jump": "i",
      "offset": [
        2219,
        2245
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "4976": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2219,
        2245
      ],
      "op": "DUP2",
      "path": "1"
    },
    "4977": {
      "op": "MSTORE"
    },
    "4978": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "4980": {
      "op": "DUP1"
    },
    "4981": {
      "op": "SLOAD"
    },
    "4982": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "4987": {
      "op": "DUP1"
    },
    "4988": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2251,
        2285
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 52
    },
    "4989": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2251,
        2285
      ],
      "op": "AND",
      "path": "1"
    },
    "4990": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2251,
        2285
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "4992": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2251,
        2285
      ],
      "op": "DUP9",
      "path": "1"
    },
    "4993": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2316,
        2325
      ],
      "op": "ADD",
      "path": "1",
      "statement": 53
    },
    "4994": {
      "op": "SWAP1"
    },
    "4995": {
      "op": "DUP2"
    },
    "4996": {
      "op": "MSTORE"
    },
    "4997": {
      "op": "SWAP8"
    },
    "4998": {
      "op": "DUP2"
    },
    "4999": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2291,
        2326
      ],
      "op": "AND",
      "path": "1"
    },
    "5000": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2291,
        2306
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "5002": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2291,
        2306
      ],
      "op": "DUP9",
      "path": "1"
    },
    "5003": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2291,
        2306
      ],
      "op": "ADD",
      "path": "1"
    },
    "5004": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2291,
        2326
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5005": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2364,
        2386
      ],
      "op": "DUP2",
      "path": "1",
      "statement": 54
    },
    "5006": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2379,
        2386
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5007": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2364,
        2376
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5009": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2364,
        2386
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5010": {
      "fn": "AcriaNode.create_request",
      "jump": "i",
      "offset": [
        2364,
        2386
      ],
      "op": "ADD",
      "path": "1"
    },
    "5011": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2364,
        2386
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5012": {
      "op": "SSTORE"
    },
    "5013": {
      "op": "SWAP3"
    },
    "5014": {
      "op": "DUP1"
    },
    "5015": {
      "op": "MSTORE"
    },
    "5016": {
      "op": "DUP7"
    },
    "5017": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2332,
        2387
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5018": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2332,
        2387
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E563"
    },
    "5051": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2332,
        2387
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5053": {
      "op": "SWAP1"
    },
    "5054": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2332,
        2354
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "5055": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2332,
        2354
      ],
      "op": "MUL",
      "path": "1"
    },
    "5056": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2332,
        2387
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5057": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2332,
        2387
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5058": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2332,
        2387
      ],
      "op": "ADD",
      "path": "1"
    },
    "5059": {
      "op": "DUP1"
    },
    "5060": {
      "op": "SLOAD"
    },
    "5061": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5063": {
      "op": "DUP11"
    },
    "5064": {
      "op": "ADD"
    },
    "5065": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2393,
        2424
      ],
      "op": "MLOAD",
      "path": "1",
      "statement": 55
    },
    "5066": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2393,
        2424
      ],
      "op": "SWAP8",
      "path": "1"
    },
    "5067": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2393,
        2424
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5068": {
      "op": "SWAP11"
    },
    "5069": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2393,
        2413
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5070": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2393,
        2413
      ],
      "op": "SWAP6",
      "path": "1"
    },
    "5071": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2393,
        2424
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5072": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2393,
        2424
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5081": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2393,
        2424
      ],
      "op": "NOT",
      "path": "1"
    },
    "5082": {
      "op": "SWAP1"
    },
    "5083": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2454,
        2469
      ],
      "op": "SWAP2",
      "path": "1",
      "statement": 56
    },
    "5084": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2454,
        2469
      ],
      "op": "AND",
      "path": "1"
    },
    "5085": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2430,
        2470
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xC0"
    },
    "5087": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2430,
        2470
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "5088": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2430,
        2470
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5089": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2430,
        2470
      ],
      "op": "SHR",
      "path": "1"
    },
    "5090": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2430,
        2444
      ],
      "op": "OR",
      "path": "1"
    },
    "5091": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2430,
        2444
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5100": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2430,
        2444
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5102": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2430,
        2470
      ],
      "op": "SHL",
      "path": "1"
    },
    "5103": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2430,
        2470
      ],
      "op": "NOT",
      "path": "1"
    },
    "5104": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2430,
        2470
      ],
      "op": "AND",
      "path": "1"
    },
    "5105": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2476,
        2513
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 57,
      "value": "0x1"
    },
    "5107": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2476,
        2513
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5109": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2476,
        2513
      ],
      "op": "SHL",
      "path": "1"
    },
    "5110": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2476,
        2495
      ],
      "op": "SWAP9",
      "path": "1"
    },
    "5111": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2476,
        2495
      ],
      "op": "DUP11",
      "path": "1"
    },
    "5112": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2476,
        2495
      ],
      "op": "AND",
      "path": "1"
    },
    "5113": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2476,
        2513
      ],
      "op": "SWAP9",
      "path": "1"
    },
    "5114": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2476,
        2513
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5115": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2476,
        2513
      ],
      "op": "SWAP9",
      "path": "1"
    },
    "5116": {
      "op": "MUL"
    },
    "5117": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SWAP8",
      "path": "1",
      "statement": 58
    },
    "5118": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5119": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SWAP8",
      "path": "1"
    },
    "5120": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "OR",
      "path": "1"
    },
    "5121": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH8",
      "path": "1",
      "value": "0xFFFFFFFFFFFFFFFF"
    },
    "5130": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "5132": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SHL",
      "path": "1"
    },
    "5133": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "NOT",
      "path": "1"
    },
    "5134": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "AND",
      "path": "1"
    },
    "5135": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5137": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "5139": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SHL",
      "path": "1"
    },
    "5140": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SWAP11",
      "path": "1"
    },
    "5141": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5142": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SWAP9",
      "path": "1"
    },
    "5143": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "AND",
      "path": "1"
    },
    "5144": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SWAP10",
      "path": "1"
    },
    "5145": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5146": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SWAP10",
      "path": "1"
    },
    "5147": {
      "op": "MUL"
    },
    "5148": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SWAP7",
      "path": "1"
    },
    "5149": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5150": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SWAP7",
      "path": "1"
    },
    "5151": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "OR",
      "path": "1"
    },
    "5152": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH4",
      "path": "1",
      "value": "0xFFFFFFFF"
    },
    "5157": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xC0"
    },
    "5159": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SHL",
      "path": "1"
    },
    "5160": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "NOT",
      "path": "1"
    },
    "5161": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "AND",
      "path": "1"
    },
    "5162": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5164": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "5166": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SHL",
      "path": "1"
    },
    "5167": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "5168": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5169": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "AND",
      "path": "1"
    },
    "5170": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "5171": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5172": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "5173": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "MUL",
      "path": "1"
    },
    "5174": {
      "op": "SWAP3"
    },
    "5175": {
      "op": "SWAP1"
    },
    "5176": {
      "op": "SWAP3"
    },
    "5177": {
      "op": "OR"
    },
    "5178": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5180": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5182": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "5184": {
      "op": "SHL"
    },
    "5185": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SUB",
      "path": "1"
    },
    "5186": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "AND",
      "path": "1"
    },
    "5187": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5189": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "5191": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SHL",
      "path": "1"
    },
    "5192": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "5193": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5194": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5195": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "AND",
      "path": "1"
    },
    "5196": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "5197": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5198": {
      "op": "SWAP4"
    },
    "5199": {
      "op": "MUL"
    },
    "5200": {
      "op": "OR"
    },
    "5201": {
      "op": "SWAP1"
    },
    "5202": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SWAP5",
      "path": "1"
    },
    "5203": {
      "op": "SSTORE"
    },
    "5204": {
      "op": "SWAP3"
    },
    "5205": {
      "op": "MLOAD"
    },
    "5206": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E564"
    },
    "5239": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5240": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "ADD",
      "path": "1"
    },
    "5241": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5242": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5243": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5245": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5247": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "5249": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SHL",
      "path": "1"
    },
    "5250": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SUB",
      "path": "1"
    },
    "5251": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "NOT",
      "path": "1"
    },
    "5252": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "AND",
      "path": "1"
    },
    "5253": {
      "op": "SWAP2"
    },
    "5254": {
      "op": "SWAP1"
    },
    "5255": {
      "op": "SWAP7"
    },
    "5256": {
      "op": "AND"
    },
    "5257": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "OR",
      "path": "1"
    },
    "5258": {
      "op": "SWAP1"
    },
    "5259": {
      "op": "SWAP5"
    },
    "5260": {
      "op": "SSTORE"
    },
    "5261": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5262": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5263": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "ADD",
      "path": "1"
    },
    "5264": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "5265": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E565"
    },
    "5298": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5299": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "ADD",
      "path": "1"
    },
    "5300": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5301": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "5303": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5304": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5305": {
      "op": "ADD"
    },
    "5306": {
      "op": "MLOAD"
    },
    "5307": {
      "op": "PUSH32",
      "value": "0x290DECD9548B62A8D60345A988386FC84BA6BC95484008F6362F93160EF3E566"
    },
    "5340": {
      "op": "SWAP1"
    },
    "5341": {
      "op": "SWAP3"
    },
    "5342": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "ADD",
      "path": "1"
    },
    "5343": {
      "op": "SWAP2"
    },
    "5344": {
      "op": "SWAP1"
    },
    "5345": {
      "op": "SWAP2"
    },
    "5346": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5347": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "POP",
      "path": "1"
    },
    "5348": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "POP",
      "path": "1"
    },
    "5349": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5350": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5351": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "CALLER",
      "path": "1"
    },
    "5352": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5354": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5356": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "5358": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SHL",
      "path": "1"
    },
    "5359": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SUB",
      "path": "1"
    },
    "5360": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x0"
    },
    "5393": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "AND",
      "path": "1"
    },
    "5394": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "EQ",
      "path": "1"
    },
    "5395": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x151B"
    },
    "5398": {
      "branch": 113,
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5399": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5401": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5402": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "REVERT",
      "path": "1"
    },
    "5403": {
      "op": "JUMPDEST"
    },
    "5404": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5406": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5408": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5410": {
      "op": "SHL"
    },
    "5411": {
      "op": "SUB"
    },
    "5412": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5413": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "AND",
      "path": "1"
    },
    "5414": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5416": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5417": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5418": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5419": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "5421": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5423": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5424": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5426": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5427": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5428": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5429": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x153D"
    },
    "5432": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5433": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5435": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5436": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "REVERT",
      "path": "1"
    },
    "5437": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5438": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5440": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x154B"
    },
    "5443": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E8"
    },
    "5446": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "NUMBER",
      "path": "1"
    },
    "5447": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DCB"
    },
    "5450": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5451": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5452": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1556"
    },
    "5455": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5456": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5458": {
      "fn": "AcriaNode.create_request",
      "offset": [
        2519,
        2545
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D88"
    },
    "5461": {
      "op": "JUMP"
    },
    "5462": {
      "op": "JUMPDEST"
    },
    "5463": {
      "fn": "AcriaNode.create_request",
      "jump": "o",
      "offset": [
        1975,
        2550
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5464": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4419,
        5734
      ],
      "op": "POP",
      "path": "1"
    },
    "5465": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4494,
        4508
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 59,
      "value": "0x4"
    },
    "5467": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5469": {
      "op": "PUSH2",
      "value": "0x1568"
    },
    "5472": {
      "op": "PUSH2",
      "value": "0x3E8"
    },
    "5475": {
      "op": "NUMBER"
    },
    "5476": {
      "op": "PUSH2",
      "value": "0x1DCB"
    },
    "5479": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4480,
        4508
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5480": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4480,
        4490
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5481": {
      "branch": 114,
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4480,
        4508
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5482": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4472,
        4509
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5483": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4472,
        4509
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5485": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4472,
        4509
      ],
      "op": "ADD",
      "path": "1"
    },
    "5486": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4472,
        4509
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5487": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4472,
        4509
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5488": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4472,
        4509
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5489": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5491": {
      "op": "ADD"
    },
    "5492": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5494": {
      "op": "KECCAK256"
    },
    "5495": {
      "op": "SLOAD"
    },
    "5496": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4522,
        4539
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 60,
      "value": "0x0"
    },
    "5498": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4522,
        4539
      ],
      "op": "EQ",
      "path": "1"
    },
    "5499": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4522,
        4539
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5500": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4522,
        4539
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1604"
    },
    "5503": {
      "branch": 114,
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4522,
        4539
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5504": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4522,
        4539
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5505": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4522,
        4528
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "5507": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4522,
        4539
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5508": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4522,
        4539
      ],
      "op": "EQ",
      "path": "1"
    },
    "5509": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4522,
        4539
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5510": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4522,
        4539
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15C9"
    },
    "5513": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4522,
        4539
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5514": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4522,
        4539
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "5516": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4514,
        4545
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5517": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4514,
        4545
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5518": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4514,
        4545
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15C4"
    },
    "5521": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4514,
        4545
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5522": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4514,
        4545
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "5524": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4514,
        4545
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5525": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4554,
        4573
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5527": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4576,
        4604
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5528": {
      "offset": [
        1150,
        1154
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5529": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4576,
        4588
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5530": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4576,
        4604
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5532": {
      "fn": "AcriaNode.cancel_stake",
      "jump": "i",
      "offset": [
        4576,
        4604
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5534": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4576,
        4604
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5535": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4576,
        4606
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5536": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4576,
        4606
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5537": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4605,
        4606
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5539": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4576,
        4606
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5540": {
      "fn": "AcriaNode.cancel_stake",
      "jump": "i",
      "offset": [
        4576,
        4606
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5541": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4576,
        4606
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5542": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4554,
        4606
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5543": {
      "op": "PUSH2",
      "value": "0x15B2"
    },
    "5546": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4618,
        4631
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E8"
    },
    "5549": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4618,
        4661
      ],
      "op": "NUMBER",
      "path": "1"
    },
    "5550": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4632,
        4660
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DCB"
    },
    "5553": {
      "offset": [
        1150,
        1154
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5554": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4632,
        4644
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5555": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4632,
        4660
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5556": {
      "fn": "AcriaNode.cancel_stake",
      "jump": "i",
      "offset": [
        4632,
        4660
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5557": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4632,
        4660
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5559": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4618,
        4661
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5560": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4618,
        4661
      ],
      "op": "ADD",
      "path": "1"
    },
    "5561": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4618,
        4661
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5562": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4618,
        4661
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5563": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4618,
        4661
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5564": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4618,
        4661
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5565": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4618,
        4661
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5567": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4618,
        4661
      ],
      "op": "ADD",
      "path": "1"
    },
    "5568": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4618,
        4661
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5570": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4618,
        4661
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5571": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4618,
        4661
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5572": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4618,
        4661
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5573": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4665,
        4666
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1604"
    },
    "5576": {
      "branch": 115,
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4618,
        4666
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5577": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4615,
        5007
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5578": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4615,
        5007
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "5580": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4615,
        5007
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5581": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4697,
        4708
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5582": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4676,
        4693
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1604"
    },
    "5585": {
      "branch": 115,
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4676,
        4693
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5586": {
      "branch": 116,
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4676,
        4708
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "5588": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4673,
        5002
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5589": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4673,
        5002
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5591": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4673,
        5002
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5592": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4719,
        4745
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5593": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4719,
        4745
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5594": {
      "branch": 117,
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4719,
        4750
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5596": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4716,
        4854
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5598": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4716,
        4854
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5599": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4819,
        4845
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 61
    },
    "5600": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4819,
        4845
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5601": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4805,
        4846
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5603": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4805,
        4846
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5604": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4805,
        4846
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5605": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4805,
        4846
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5606": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4805,
        4818
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5607": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4805,
        4846
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x15F2"
    },
    "5610": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4805,
        4846
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x3E8"
    },
    "5613": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4805,
        4846
      ],
      "op": "NUMBER",
      "path": "1"
    },
    "5614": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4805,
        4846
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DCB"
    },
    "5617": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4805,
        4846
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5618": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4805,
        4846
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5619": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4805,
        4846
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5620": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4805,
        4846
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5621": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4805,
        4846
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5623": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4773,
        4801
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5624": {
      "offset": [
        1150,
        1154
      ],
      "op": "ADD",
      "path": "1"
    },
    "5625": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4773,
        4785
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5626": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4773,
        4801
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5627": {
      "fn": "AcriaNode.cancel_stake",
      "jump": "i",
      "offset": [
        4773,
        4801
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5628": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4773,
        4801
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5629": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4759,
        4802
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5631": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4759,
        4802
      ],
      "op": "ADD",
      "path": "1"
    },
    "5632": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4759,
        4802
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5634": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4759,
        4802
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5635": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4759,
        4802
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5636": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4759,
        4802
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5637": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4759,
        4802
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5639": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4759,
        4802
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5640": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4759,
        4802
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5641": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4759,
        4802
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5642": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4759,
        4802
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5644": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "5646": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4759,
        4802
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5647": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4759,
        4846
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5649": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4716,
        4854
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5650": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4673,
        5002
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5651": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4673,
        5002
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5652": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4673,
        5002
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1649"
    },
    "5655": {
      "branch": 117,
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4879,
        4896
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5656": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4879,
        4896
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "5658": {
      "branch": 118,
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4879,
        4901
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5659": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4876,
        4996
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5660": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4876,
        4996
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5661": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4970,
        4987
      ],
      "op": "ISZERO",
      "path": "1",
      "statement": 62
    },
    "5662": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4970,
        4987
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5663": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4956,
        4988
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x162A"
    },
    "5666": {
      "branch": 118,
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4956,
        4988
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5667": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4956,
        4988
      ],
      "op": "POP",
      "path": "1"
    },
    "5668": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4956,
        4988
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5669": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4956,
        4969
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "5671": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4956,
        4988
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5672": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4956,
        4988
      ],
      "op": "EQ",
      "path": "1"
    },
    "5673": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4956,
        4988
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5674": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4956,
        4988
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5675": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4956,
        4988
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5676": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4956,
        4988
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1649"
    },
    "5679": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4956,
        4988
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5680": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4956,
        4988
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "5682": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4956,
        4988
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5683": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4924,
        4952
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5685": {
      "offset": [
        1150,
        1154
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5686": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4924,
        4936
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5687": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4924,
        4952
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5688": {
      "fn": "AcriaNode.cancel_stake",
      "jump": "i",
      "offset": [
        4924,
        4952
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5690": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4924,
        4952
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5692": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4910,
        4953
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5693": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4910,
        4953
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5695": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4910,
        4953
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5696": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4910,
        4953
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5697": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4910,
        4953
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5698": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4910,
        4953
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5699": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4910,
        4953
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5700": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4910,
        4953
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5701": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4910,
        4953
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5702": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4910,
        4953
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5703": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4910,
        4953
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5704": {
      "op": "SSTORE"
    },
    "5705": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4910,
        4953
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5706": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4910,
        4988
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5707": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        4876,
        4996
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "5709": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5014,
        5040
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5710": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5014,
        5040
      ],
      "op": "EQ",
      "path": "1"
    },
    "5711": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5014,
        5040
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x165D"
    },
    "5714": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5014,
        5040
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5715": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5014,
        5027
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "5717": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5014,
        5040
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5718": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5014,
        5040
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5719": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5014,
        5040
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "5721": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5014,
        5040
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5722": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5014,
        5040
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5723": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5014,
        5040
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5724": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5011,
        5194
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5725": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5011,
        5194
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5726": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5055,
        5072
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5728": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5055,
        5072
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5730": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5055,
        5077
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "5732": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5055,
        5077
      ],
      "op": "SHL",
      "path": "1"
    },
    "5733": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5055,
        5077
      ],
      "op": "SUB",
      "path": "1"
    },
    "5734": {
      "branch": 119,
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5055,
        5077
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5735": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5055,
        5113
      ],
      "op": "AND",
      "path": "1"
    },
    "5736": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5055,
        5113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5738": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5055,
        5113
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5739": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5102,
        5113
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5740": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5081,
        5098
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5741": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5081,
        5098
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "5743": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5081,
        5113
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5745": {
      "branch": 120,
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5081,
        5113
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5746": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5055,
        5113
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5747": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5052,
        5189
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5748": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5052,
        5189
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5750": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5052,
        5189
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5751": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5164,
        5181
      ],
      "op": "DUP4",
      "path": "1",
      "statement": 63
    },
    "5752": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5164,
        5181
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5753": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5150,
        5182
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5754": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5150,
        5182
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5755": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5150,
        5182
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5756": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5150,
        5182
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5757": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5150,
        5163
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5759": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5150,
        5182
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5760": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5150,
        5182
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5761": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5150,
        5182
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5762": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5150,
        5182
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5763": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5150,
        5182
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5764": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5150,
        5182
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5765": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5150,
        5182
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5766": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5121,
        5147
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5767": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5121,
        5147
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5768": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5121,
        5147
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5769": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5121,
        5147
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "5770": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5121,
        5147
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1694"
    },
    "5773": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5121,
        5182
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5774": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5052,
        5189
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5775": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5226,
        5237
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5776": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5205,
        5222
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E53"
    },
    "5779": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5205,
        5222
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5780": {
      "branch": 121,
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5205,
        5237
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5781": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5202,
        5333
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5782": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5202,
        5333
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5783": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5273,
        5290
      ],
      "op": "SSTORE",
      "path": "1",
      "statement": 64
    },
    "5784": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5273,
        5290
      ],
      "op": "POP",
      "path": "1"
    },
    "5785": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5273,
        5290
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16A5"
    },
    "5788": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5244,
        5270
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5789": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5244,
        5290
      ],
      "op": "POP",
      "path": "1"
    },
    "5790": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5296,
        5327
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 65,
      "value": "0x1"
    },
    "5792": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5296,
        5327
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5793": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5296,
        5327
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E53"
    },
    "5796": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5202,
        5333
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5797": {
      "op": "JUMPDEST"
    },
    "5798": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5800": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5802": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "5804": {
      "op": "SHL"
    },
    "5805": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5355,
        5378
      ],
      "op": "SUB",
      "path": "1"
    },
    "5806": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5355,
        5378
      ],
      "op": "DUP5",
      "path": "1"
    },
    "5807": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5341,
        5352
      ],
      "op": "AND",
      "path": "1"
    },
    "5808": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5355,
        5378
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5810": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5355,
        5378
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5811": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5355,
        5378
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5812": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5355,
        5367
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5813": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5355,
        5378
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "5815": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5355,
        5378
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5817": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5355,
        5378
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5818": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5355,
        5378
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "5820": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5355,
        5378
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5821": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5355,
        5378
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5822": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5355,
        5378
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5823": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5355,
        5378
      ],
      "op": "GT",
      "path": "1"
    },
    "5824": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5355,
        5378
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x175F"
    },
    "5827": {
      "branch": 121,
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5383,
        5409
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5828": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5383,
        5409
      ],
      "op": "DUP1",
      "path": "1"
    },
    "5829": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5383,
        5409
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5831": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5383,
        5396
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 66,
      "value": "0x0"
    },
    "5833": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5383,
        5409
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x16D3"
    },
    "5836": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5383,
        5409
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5838": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5383,
        5409
      ],
      "op": "DUP7",
      "path": "1"
    },
    "5839": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5383,
        5409
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E53"
    },
    "5842": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5383,
        5409
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5843": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5383,
        5416
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5844": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5383,
        5416
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5845": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5355,
        5378
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5846": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5355,
        5378
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5848": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5355,
        5378
      ],
      "op": "ADD",
      "path": "1"
    },
    "5849": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5355,
        5378
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5850": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5383,
        5416
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5851": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5383,
        5416
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5852": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5355,
        5378
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5854": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5355,
        5378
      ],
      "op": "ADD",
      "path": "1"
    },
    "5855": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5383,
        5416
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5857": {
      "fn": "AcriaNode.cancel_stake",
      "jump": "i",
      "offset": [
        5383,
        5416
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5858": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5383,
        5416
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5860": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5383,
        5416
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5861": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5383,
        5416
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5862": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5383,
        5416
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5863": {
      "op": "PUSH2",
      "value": "0x16F0"
    },
    "5866": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5445,
        5458
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5867": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5445,
        5458
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5868": {
      "op": "PUSH2",
      "value": "0x1E53"
    },
    "5871": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5457,
        5458
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5872": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5445,
        5456
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5873": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5445,
        5458
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5874": {
      "fn": "AcriaNode.cancel_stake",
      "jump": "i",
      "offset": [
        5445,
        5458
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5875": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5445,
        5458
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5876": {
      "op": "POP"
    },
    "5877": {
      "op": "PUSH2",
      "value": "0x1701"
    },
    "5880": {
      "op": "SWAP1"
    },
    "5881": {
      "op": "POP"
    },
    "5882": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "5884": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5424,
        5441
      ],
      "op": "DUP4",
      "path": "1"
    },
    "5885": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5424,
        5441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E53"
    },
    "5888": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5424,
        5441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5889": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5424,
        5441
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5890": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5424,
        5441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "5892": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5424,
        5441
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5893": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5424,
        5430
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "5895": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5424,
        5441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5897": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5424,
        5441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1713"
    },
    "5900": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5424,
        5441
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5902": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5424,
        5441
      ],
      "op": "DUP6",
      "path": "1"
    },
    "5903": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5424,
        5441
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E53"
    },
    "5906": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5424,
        5441
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5907": {
      "branch": 122,
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5424,
        5458
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5908": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5421,
        5664
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5909": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5421,
        5664
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5910": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5497,
        5500
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 67,
      "value": "0x20"
    },
    "5912": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5465,
        5478
      ],
      "op": "ADD",
      "path": "1"
    },
    "5913": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5465,
        5493
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5914": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5479,
        5492
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5915": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5491,
        5492
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5916": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5479,
        5490
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5918": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5479,
        5492
      ],
      "op": "ADD",
      "path": "1"
    },
    "5919": {
      "fn": "AcriaNode.cancel_stake",
      "jump": "i",
      "offset": [
        5479,
        5492
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5921": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5479,
        5492
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "5922": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5465,
        5493
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5923": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5465,
        5493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5925": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5465,
        5493
      ],
      "op": "EQ",
      "path": "1"
    },
    "5926": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5465,
        5493
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "5927": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5465,
        5493
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x175F"
    },
    "5930": {
      "branch": 122,
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5465,
        5493
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "5931": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5465,
        5493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "5933": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5465,
        5493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5935": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5465,
        5493
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1739"
    },
    "5938": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5465,
        5493
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5940": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5465,
        5493
      ],
      "op": "DUP6",
      "path": "1"
    },
    "5941": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5465,
        5493
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E53"
    },
    "5944": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5465,
        5500
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5945": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5465,
        5500
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5946": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5465,
        5500
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5947": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5465,
        5500
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5948": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5465,
        5500
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5950": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5465,
        5500
      ],
      "op": "ADD",
      "path": "1"
    },
    "5951": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5465,
        5500
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5952": {
      "fn": "AcriaNode.cancel_stake",
      "jump": "i",
      "offset": [
        5465,
        5500
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5953": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5465,
        5500
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "5954": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5465,
        5500
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "5956": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5465,
        5500
      ],
      "op": "ADD",
      "path": "1"
    },
    "5957": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5465,
        5500
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5959": {
      "op": "KECCAK256"
    },
    "5960": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5535,
        5548
      ],
      "op": "SLOAD",
      "path": "1",
      "statement": 68
    },
    "5961": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5535,
        5548
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x2"
    },
    "5963": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "5965": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5547,
        5548
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5966": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5535,
        5546
      ],
      "op": "DUP3",
      "path": "1"
    },
    "5967": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5535,
        5548
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "5968": {
      "fn": "AcriaNode.cancel_stake",
      "jump": "i",
      "offset": [
        5535,
        5548
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1759"
    },
    "5971": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5535,
        5548
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5972": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5506,
        5532
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5973": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5506,
        5548
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D88"
    },
    "5976": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5562,
        5575
      ],
      "op": "JUMP",
      "path": "1"
    },
    "5977": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5562,
        5590
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5978": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5576,
        5589
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5979": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5588,
        5589
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "5980": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5576,
        5587
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "5981": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5576,
        5589
      ],
      "op": "POP",
      "path": "1"
    },
    "5982": {
      "fn": "AcriaNode.cancel_stake",
      "jump": "i",
      "offset": [
        5576,
        5589
      ],
      "op": "POP",
      "path": "1"
    },
    "5983": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5576,
        5589
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "5984": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5562,
        5590
      ],
      "op": "POP",
      "path": "1"
    },
    "5985": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5562,
        5590
      ],
      "op": "POP",
      "path": "1"
    },
    "5986": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5562,
        5590
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5988": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5562,
        5590
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "5990": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5562,
        5590
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "5992": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5562,
        5590
      ],
      "op": "SHL",
      "path": "1"
    },
    "5993": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5562,
        5590
      ],
      "op": "SUB",
      "path": "1"
    },
    "5994": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5562,
        5590
      ],
      "op": "AND",
      "path": "1"
    },
    "5995": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5562,
        5590
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "5997": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5562,
        5590
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "5998": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5562,
        5590
      ],
      "op": "DUP2",
      "path": "1"
    },
    "5999": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5562,
        5590
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6000": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5594,
        5595
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "6002": {
      "branch": 123,
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5562,
        5595
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6004": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5559,
        5659
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6005": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5559,
        5659
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6006": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5559,
        5659
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6007": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5619,
        5637
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 69,
      "value": "0x40"
    },
    "6009": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5619,
        5652
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6010": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5638,
        5651
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6011": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5650,
        5651
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6012": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5638,
        5649
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6013": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5638,
        5651
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6014": {
      "fn": "AcriaNode.cancel_stake",
      "jump": "i",
      "offset": [
        5638,
        5651
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6015": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5638,
        5651
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "6017": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5619,
        5652
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6018": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5619,
        5652
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6019": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5619,
        5652
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6020": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5619,
        5652
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6021": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5619,
        5652
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6022": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5619,
        5652
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6023": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5619,
        5652
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6024": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5619,
        5652
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6025": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5619,
        5652
      ],
      "op": "CALLER",
      "path": "1"
    },
    "6026": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5619,
        5652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "6028": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5619,
        5652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "6030": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5619,
        5652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "6032": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5603,
        5615
      ],
      "op": "SHL",
      "path": "1"
    },
    "6033": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5603,
        5615
      ],
      "op": "SUB",
      "path": "1"
    },
    "6034": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5603,
        5652
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0x0"
    },
    "6067": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5603,
        5652
      ],
      "op": "AND",
      "path": "1"
    },
    "6068": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5603,
        5652
      ],
      "op": "EQ",
      "path": "1"
    },
    "6069": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5603,
        5652
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1800"
    },
    "6072": {
      "branch": 123,
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5603,
        5652
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6073": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5603,
        5652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6075": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5603,
        5652
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6076": {
      "fn": "AcriaNode.cancel_stake",
      "jump": "i",
      "offset": [
        5603,
        5652
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "6080": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5603,
        5652
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "6082": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5603,
        5652
      ],
      "op": "SHL",
      "path": "1"
    },
    "6083": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5603,
        5652
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6084": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5603,
        5652
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6085": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6087": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6089": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5559,
        5659
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6090": {
      "op": "ADD"
    },
    "6091": {
      "op": "MSTORE"
    },
    "6092": {
      "op": "PUSH1",
      "value": "0x1B"
    },
    "6094": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6096": {
      "op": "DUP3"
    },
    "6097": {
      "op": "ADD"
    },
    "6098": {
      "op": "MSTORE"
    },
    "6099": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5668,
        5691
      ],
      "op": "PUSH32",
      "path": "1",
      "statement": 70,
      "value": "0x496E697469617465642062792077726F6E6720636F6E74726163740000000000"
    },
    "6132": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5694,
        5695
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "6134": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5668,
        5691
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6135": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5668,
        5691
      ],
      "op": "ADD",
      "path": "1"
    },
    "6136": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5668,
        5691
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6137": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5668,
        5680
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x64"
    },
    "6139": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5668,
        5691
      ],
      "op": "ADD",
      "path": "1"
    },
    "6140": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5668,
        5691
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x473"
    },
    "6143": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5668,
        5691
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6144": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5668,
        5691
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6145": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5668,
        5691
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "6147": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5668,
        5691
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "6149": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5668,
        5691
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "6151": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5668,
        5691
      ],
      "op": "SHL",
      "path": "1"
    },
    "6152": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5668,
        5695
      ],
      "op": "SUB",
      "path": "1"
    },
    "6153": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5668,
        5695
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6154": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5668,
        5695
      ],
      "op": "AND",
      "path": "1"
    },
    "6155": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5704,
        5710
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 71,
      "value": "0x0"
    },
    "6157": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5704,
        5721
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6158": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5704,
        5721
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6159": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5704,
        5721
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6160": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5704,
        5721
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "6162": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5704,
        5721
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6164": {
      "fn": "AcriaNode.cancel_stake",
      "offset": [
        5704,
        5725
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6165": {
      "fn": "AcriaNode.cancel_stake",
      "jump": "o",
      "offset": [
        4419,
        5734
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6167": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3458,
        4222
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6168": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3549,
        3563
      ],
      "op": "KECCAK256",
      "path": "1",
      "statement": 72
    },
    "6169": {
      "op": "SLOAD"
    },
    "6170": {
      "op": "ISZERO"
    },
    "6171": {
      "op": "PUSH2",
      "value": "0x1858"
    },
    "6174": {
      "op": "JUMPI"
    },
    "6175": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6177": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3535,
        3563
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6178": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3535,
        3545
      ],
      "op": "PUSH3",
      "path": "1",
      "value": "0x461BCD"
    },
    "6182": {
      "branch": 124,
      "fn": "AcriaNode.start_stake",
      "offset": [
        3535,
        3563
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE5"
    },
    "6184": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3527,
        3595
      ],
      "op": "SHL",
      "path": "1"
    },
    "6185": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3527,
        3595
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6186": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3527,
        3595
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6187": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3527,
        3595
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6189": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6191": {
      "op": "DUP3"
    },
    "6192": {
      "op": "ADD"
    },
    "6193": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3527,
        3595
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6194": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3527,
        3595
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xF"
    },
    "6196": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "6198": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3527,
        3595
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6199": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3527,
        3595
      ],
      "op": "ADD",
      "path": "1"
    },
    "6200": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3527,
        3595
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6201": {
      "op": "PUSH15",
      "value": "0x416C7265616479207374616B696E67"
    },
    "6217": {
      "op": "PUSH1",
      "value": "0x88"
    },
    "6219": {
      "op": "SHL"
    },
    "6220": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "6222": {
      "op": "DUP3"
    },
    "6223": {
      "op": "ADD"
    },
    "6224": {
      "op": "MSTORE"
    },
    "6225": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6227": {
      "op": "ADD"
    },
    "6228": {
      "op": "PUSH2",
      "value": "0x473"
    },
    "6231": {
      "op": "JUMP"
    },
    "6232": {
      "op": "JUMPDEST"
    },
    "6233": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6235": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3527,
        3595
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6236": {
      "op": "GT"
    },
    "6237": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3527,
        3595
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1894"
    },
    "6240": {
      "op": "JUMPI"
    },
    "6241": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6243": {
      "op": "MLOAD"
    },
    "6244": {
      "op": "PUSH3",
      "value": "0x461BCD"
    },
    "6248": {
      "op": "PUSH1",
      "value": "0xE5"
    },
    "6250": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3608,
        3625
      ],
      "op": "SHL",
      "path": "1",
      "statement": 73
    },
    "6251": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3608,
        3625
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6252": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3608,
        3625
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6253": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3608,
        3625
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6255": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3608,
        3625
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6257": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3608,
        3625
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6258": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3608,
        3614
      ],
      "op": "ADD",
      "path": "1"
    },
    "6259": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3608,
        3625
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6260": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3608,
        3625
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x9"
    },
    "6262": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3608,
        3625
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x24"
    },
    "6264": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3608,
        3625
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6265": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3608,
        3625
      ],
      "op": "ADD",
      "path": "1"
    },
    "6266": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3608,
        3625
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6267": {
      "branch": 125,
      "fn": "AcriaNode.start_stake",
      "offset": [
        3608,
        3630
      ],
      "op": "PUSH9",
      "path": "1",
      "value": "0x4E6F20546F6B656E73"
    },
    "6277": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3600,
        3650
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xB8"
    },
    "6279": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3600,
        3650
      ],
      "op": "SHL",
      "path": "1"
    },
    "6280": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3600,
        3650
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x44"
    },
    "6282": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3600,
        3650
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6283": {
      "op": "ADD"
    },
    "6284": {
      "op": "MSTORE"
    },
    "6285": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "6287": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3600,
        3650
      ],
      "op": "ADD",
      "path": "1"
    },
    "6288": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3600,
        3650
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x473"
    },
    "6291": {
      "op": "JUMP"
    },
    "6292": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3600,
        3650
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6293": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3600,
        3650
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6295": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3600,
        3650
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18A2"
    },
    "6298": {
      "op": "PUSH2",
      "value": "0x3E8"
    },
    "6301": {
      "op": "NUMBER"
    },
    "6302": {
      "op": "PUSH2",
      "value": "0x1DCB"
    },
    "6305": {
      "op": "JUMP"
    },
    "6306": {
      "op": "JUMPDEST"
    },
    "6307": {
      "op": "PUSH2",
      "value": "0x18AD"
    },
    "6310": {
      "op": "SWAP1"
    },
    "6311": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6313": {
      "op": "PUSH2",
      "value": "0x1D88"
    },
    "6316": {
      "op": "JUMP"
    },
    "6317": {
      "op": "JUMPDEST"
    },
    "6318": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6320": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6322": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6324": {
      "op": "SHL"
    },
    "6325": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3600,
        3650
      ],
      "op": "SUB",
      "path": "1"
    },
    "6326": {
      "op": "DUP5"
    },
    "6327": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3600,
        3650
      ],
      "op": "AND",
      "path": "1"
    },
    "6328": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3673,
        3674
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 74,
      "value": "0x0"
    },
    "6330": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3663,
        3670
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6331": {
      "branch": 126,
      "fn": "AcriaNode.start_stake",
      "offset": [
        3663,
        3674
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6332": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3655,
        3688
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6333": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3655,
        3688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x5"
    },
    "6335": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3655,
        3688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6337": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3655,
        3688
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6338": {
      "op": "DUP2"
    },
    "6339": {
      "op": "MSTORE"
    },
    "6340": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6342": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3655,
        3688
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6343": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3655,
        3688
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6344": {
      "op": "KECCAK256"
    },
    "6345": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3655,
        3688
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6346": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3655,
        3688
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6347": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3655,
        3688
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6348": {
      "op": "DUP4"
    },
    "6349": {
      "op": "DUP4"
    },
    "6350": {
      "op": "MSTORE"
    },
    "6351": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "6353": {
      "op": "SWAP1"
    },
    "6354": {
      "op": "SWAP2"
    },
    "6355": {
      "op": "MSTORE"
    },
    "6356": {
      "op": "SWAP1"
    },
    "6357": {
      "op": "KECCAK256"
    },
    "6358": {
      "op": "SLOAD"
    },
    "6359": {
      "op": "SWAP1"
    },
    "6360": {
      "op": "SWAP2"
    },
    "6361": {
      "op": "POP"
    },
    "6362": {
      "op": "PUSH2",
      "value": "0x190F"
    },
    "6365": {
      "op": "JUMPI"
    },
    "6366": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3655,
        3688
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "6368": {
      "op": "SLOAD"
    },
    "6369": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3655,
        3688
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6370": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3697,
        3716
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6371": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3719,
        3747
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6372": {
      "offset": [
        1150,
        1154
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6373": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3719,
        3731
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x18F0"
    },
    "6376": {
      "branch": 126,
      "fn": "AcriaNode.start_stake",
      "offset": [
        3719,
        3747
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6377": {
      "fn": "AcriaNode.start_stake",
      "jump": "i",
      "offset": [
        3719,
        3747
      ],
      "op": "POP",
      "path": "1"
    },
    "6378": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3719,
        3747
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6379": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3719,
        3749
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "6381": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3719,
        3749
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6382": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3748,
        3749
      ],
      "op": "EQ",
      "path": "1"
    },
    "6383": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3719,
        3749
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6384": {
      "fn": "AcriaNode.start_stake",
      "jump": "i",
      "offset": [
        3719,
        3749
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6385": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3719,
        3749
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6386": {
      "op": "PUSH2",
      "value": "0x190F"
    },
    "6389": {
      "op": "JUMPI"
    },
    "6390": {
      "op": "PUSH1",
      "value": "0x7"
    },
    "6392": {
      "op": "SLOAD"
    },
    "6393": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6395": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3758,
        3775
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 75
    },
    "6396": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3758,
        3775
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6397": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3758,
        3775
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6398": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3758,
        3775
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6400": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3758,
        3775
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6402": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3758,
        3775
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6403": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3758,
        3764
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6405": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3758,
        3775
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6406": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3758,
        3775
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6407": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3758,
        3775
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6408": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3758,
        3775
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6409": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3758,
        3775
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6410": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3758,
        3775
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6411": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3758,
        3775
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6412": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3758,
        3775
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6413": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3758,
        3789
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6414": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3758,
        3789
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6415": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3758,
        3789
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6416": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3797,
        3823
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6418": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3797,
        3823
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6419": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3797,
        3823
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6420": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3797,
        3810
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6421": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3797,
        3823
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6423": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3797,
        3823
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6425": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3797,
        3823
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6426": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3797,
        3823
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6428": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3797,
        3823
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6429": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3797,
        3823
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6430": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3758,
        3789
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6431": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3758,
        3789
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6432": {
      "op": "DUP5"
    },
    "6433": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3794,
        3977
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6434": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3794,
        3977
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6435": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3838,
        3855
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6436": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3838,
        3855
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6437": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3838,
        3860
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x192F"
    },
    "6440": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3838,
        3860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6441": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3838,
        3860
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6442": {
      "branch": 127,
      "fn": "AcriaNode.start_stake",
      "offset": [
        3838,
        3860
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6443": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3838,
        3896
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1D88"
    },
    "6446": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3838,
        3896
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6447": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3838,
        3896
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6448": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3885,
        3896
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6449": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3864,
        3881
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6450": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3864,
        3881
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6451": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3864,
        3896
      ],
      "op": "POP",
      "path": "1"
    },
    "6452": {
      "branch": 128,
      "fn": "AcriaNode.start_stake",
      "offset": [
        3864,
        3896
      ],
      "op": "POP",
      "path": "1"
    },
    "6453": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3838,
        3896
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "6455": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3835,
        3972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "6457": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3835,
        3972
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "6459": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3835,
        3972
      ],
      "op": "SHL",
      "path": "1"
    },
    "6460": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3947,
        3964
      ],
      "op": "SUB",
      "path": "1",
      "statement": 76
    },
    "6461": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3947,
        3964
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6462": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3933,
        3965
      ],
      "op": "AND",
      "path": "1"
    },
    "6463": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3933,
        3965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6465": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3933,
        3965
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6466": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3933,
        3965
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6467": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3933,
        3946
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6468": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3933,
        3965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "6470": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3933,
        3965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6472": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3933,
        3965
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6473": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3933,
        3965
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6475": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3933,
        3965
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6476": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3933,
        3965
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6477": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3933,
        3965
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6478": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3904,
        3930
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6479": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3904,
        3930
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6480": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3904,
        3930
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "6482": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3904,
        3930
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6483": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3904,
        3930
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6484": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3904,
        3965
      ],
      "op": "EQ",
      "path": "1"
    },
    "6485": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3835,
        3972
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0xBA0"
    },
    "6488": {
      "branch": 128,
      "fn": "AcriaNode.start_stake",
      "offset": [
        3985,
        3996
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6489": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4011,
        4037
      ],
      "op": "POP",
      "path": "1",
      "statement": 77
    },
    "6490": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4011,
        4037
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x7"
    },
    "6492": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4011,
        4037
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6493": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4011,
        4024
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6494": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4011,
        4037
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x8"
    },
    "6496": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4011,
        4037
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6497": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4011,
        4037
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6498": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4011,
        4037
      ],
      "op": "POP",
      "path": "1"
    },
    "6499": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4011,
        4037
      ],
      "op": "POP",
      "path": "1"
    },
    "6500": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4011,
        4044
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6501": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4011,
        4044
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6502": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3999,
        4006
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6504": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3999,
        4006
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6505": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3999,
        4006
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6506": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3999,
        4006
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6507": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4011,
        4037
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6509": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4011,
        4044
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6511": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4011,
        4044
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6512": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3999,
        4006
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6514": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        3999,
        4006
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6515": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4011,
        4044
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6516": {
      "fn": "AcriaNode.start_stake",
      "jump": "i",
      "offset": [
        4011,
        4044
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6517": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4011,
        4044
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19CD"
    },
    "6520": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4011,
        4044
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6521": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4011,
        4044
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6523": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4011,
        4044
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6525": {
      "op": "PUSH2",
      "value": "0x1987"
    },
    "6528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6530": {
      "op": "DUP7"
    },
    "6531": {
      "op": "PUSH2",
      "value": "0x1E53"
    },
    "6534": {
      "op": "JUMP"
    },
    "6535": {
      "op": "JUMPDEST"
    },
    "6536": {
      "op": "DUP2"
    },
    "6537": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4049,
        4072
      ],
      "op": "MSTORE",
      "path": "1",
      "statement": 78
    },
    "6538": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4049,
        4072
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6540": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4049,
        4072
      ],
      "op": "ADD",
      "path": "1"
    },
    "6541": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4049,
        4072
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6542": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4049,
        4072
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6543": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4049,
        4072
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6544": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4049,
        4061
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6546": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4049,
        4072
      ],
      "op": "ADD",
      "path": "1"
    },
    "6547": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4049,
        4072
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6549": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4049,
        4072
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6550": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4049,
        4072
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6551": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4049,
        4072
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6553": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4049,
        4078
      ],
      "op": "EQ",
      "path": "1"
    },
    "6554": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4049,
        4078
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19CD"
    },
    "6557": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4049,
        4078
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6558": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4090,
        4107
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6560": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4090,
        4107
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6562": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4090,
        4122
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x19AC"
    },
    "6565": {
      "branch": 129,
      "fn": "AcriaNode.start_stake",
      "offset": [
        4090,
        4122
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "6567": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4087,
        4218
      ],
      "op": "DUP7",
      "path": "1"
    },
    "6568": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4087,
        4218
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E53"
    },
    "6571": {
      "op": "JUMP"
    },
    "6572": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4158,
        4175
      ],
      "op": "JUMPDEST",
      "path": "1",
      "statement": 79
    },
    "6573": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4158,
        4175
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6574": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4158,
        4175
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6575": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4129,
        4155
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6577": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4129,
        4175
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6578": {
      "fn": "AcriaNode.start_stake",
      "offset": [
        4181,
        4212
      ],
      "op": "DUP3",
      "path": "1",
      "statement": 80
    },
    "6579": {
      "op": "ADD"
    },
    "6580": {
      "op": "SWAP3"
    },
    "6581": {
      "fn": "AcriaNode.start_stake",
      "jump": "o",
      "offset": [
        3458,
        4222
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6582": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5743,
        6291
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6583": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5817,
        5824
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6584": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5833,
        5854
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6586": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5833,
        5854
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6587": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5833,
        5854
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6588": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5833,
        5846
      ],
      "op": "ADD",
      "path": "1"
    },
    "6589": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5833,
        5854
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6591": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5833,
        5854
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6592": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5833,
        5854
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6593": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5833,
        5854
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6594": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5833,
        5854
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6595": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5833,
        5854
      ],
      "op": "DUP7",
      "path": "1"
    },
    "6596": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5830,
        5964
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6597": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5830,
        5964
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6598": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5869,
        5882
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6600": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5869,
        5892
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6601": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5883,
        5891
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "6602": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5890,
        5891
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6603": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5883,
        5889
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6604": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5883,
        5891
      ],
      "op": "SSTORE",
      "path": "1"
    },
    "6605": {
      "fn": "AcriaNode.payout_stake",
      "jump": "i",
      "offset": [
        5883,
        5891
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6606": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5883,
        5891
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6608": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5869,
        5892
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6609": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5869,
        5892
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6610": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5869,
        5892
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6611": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5869,
        5892
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "6613": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5869,
        5892
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6615": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5869,
        5892
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6616": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5869,
        5892
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6618": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5869,
        5892
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6619": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5869,
        5892
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6620": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5869,
        5892
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6621": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5869,
        5892
      ],
      "op": "ISZERO",
      "path": "1"
    },
    "6622": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5869,
        5892
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A96"
    },
    "6625": {
      "branch": 129,
      "fn": "AcriaNode.start_stake",
      "offset": [
        5896,
        5897
      ],
      "op": "JUMPI",
      "path": "1"
    },
    "6626": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5869,
        5897
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "6628": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5866,
        5959
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "6630": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5866,
        5959
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "6632": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5929,
        5942
      ],
      "op": "SHL",
      "path": "1",
      "statement": 81
    },
    "6633": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5929,
        5952
      ],
      "op": "SUB",
      "path": "1"
    },
    "6634": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5943,
        5951
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6635": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5950,
        5951
      ],
      "op": "AND",
      "path": "1"
    },
    "6636": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5943,
        5949
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6638": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5943,
        5951
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6639": {
      "fn": "AcriaNode.payout_stake",
      "jump": "i",
      "offset": [
        5943,
        5951
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6640": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5943,
        5951
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6641": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5929,
        5952
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x6"
    },
    "6643": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5929,
        5952
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6645": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5929,
        5952
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6646": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5929,
        5952
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6647": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5929,
        5952
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6648": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5929,
        5952
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6650": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5929,
        5952
      ],
      "op": "DUP1",
      "path": "1"
    },
    "6651": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5929,
        5952
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6652": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5929,
        5952
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6653": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5929,
        5952
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6654": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5929,
        5952
      ],
      "op": "DUP7",
      "path": "1"
    },
    "6655": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5929,
        5952
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6656": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5929,
        5952
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6657": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5929,
        5952
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6659": {
      "op": "DUP4"
    },
    "6660": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5929,
        5952
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6661": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5929,
        5952
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6662": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5929,
        5952
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6663": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5929,
        5952
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6664": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5905,
        5926
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6665": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5905,
        5926
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x3"
    },
    "6667": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5905,
        5926
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6668": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5905,
        5918
      ],
      "op": "SWAP4",
      "path": "1"
    },
    "6669": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5905,
        5926
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6670": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5905,
        5926
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6671": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5905,
        5926
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6672": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5905,
        5926
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6673": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5905,
        5952
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6674": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5866,
        5959
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6675": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6004,
        6005
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6676": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5975,
        6001
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6677": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5975,
        6001
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6678": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5975,
        6001
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A20"
    },
    "6681": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5975,
        5993
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6682": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5975,
        6001
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6683": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5975,
        6001
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6684": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5975,
        6001
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1E05"
    },
    "6687": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5975,
        6001
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6688": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5975,
        6001
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6689": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5975,
        6001
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A2A"
    },
    "6692": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5975,
        6005
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6693": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5972,
        6287
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6694": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5972,
        6287
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1DCB"
    },
    "6697": {
      "op": "JUMP"
    },
    "6698": {
      "op": "JUMPDEST"
    },
    "6699": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6701": {
      "op": "DUP7"
    },
    "6702": {
      "op": "DUP2"
    },
    "6703": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6033,
        6056
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6704": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6033,
        6056
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x4"
    },
    "6706": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6012,
        6030
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x20"
    },
    "6708": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6033,
        6056
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6709": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6033,
        6056
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6710": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6033,
        6056
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6711": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6033,
        6045
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x40"
    },
    "6713": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6033,
        6056
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6714": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6033,
        6056
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6715": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6033,
        6056
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6716": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6033,
        6056
      ],
      "op": "KECCAK256",
      "path": "1"
    },
    "6717": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6033,
        6056
      ],
      "op": "SLOAD",
      "path": "1"
    },
    "6718": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6033,
        6056
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6719": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6033,
        6056
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6720": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6033,
        6056
      ],
      "op": "DUP5",
      "path": "1"
    },
    "6721": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6033,
        6056
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6722": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6122,
        6143
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6723": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6122,
        6143
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6724": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6122,
        6143
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6725": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6122,
        6135
      ],
      "op": "ADD",
      "path": "1"
    },
    "6726": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6122,
        6143
      ],
      "op": "DUP10",
      "path": "1"
    },
    "6727": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6122,
        6143
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6728": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6122,
        6143
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6729": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6122,
        6143
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6730": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6122,
        6143
      ],
      "op": "DUP4",
      "path": "1"
    },
    "6731": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6122,
        6143
      ],
      "op": "ADD",
      "path": "1"
    },
    "6732": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6084,
        6102
      ],
      "op": "DUP7",
      "path": "1"
    },
    "6733": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6084,
        6110
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6734": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6084,
        6110
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6735": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6084,
        6110
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x60"
    },
    "6737": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6084,
        6110
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6738": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6084,
        6110
      ],
      "op": "ADD",
      "path": "1"
    },
    "6739": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6084,
        6110
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6740": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6084,
        6110
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6741": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6033,
        6056
      ],
      "op": "MLOAD",
      "path": "1"
    },
    "6742": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6033,
        6056
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6743": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6012,
        6030
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6744": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6122,
        6143
      ],
      "op": "POP",
      "path": "1"
    },
    "6745": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6084,
        6121
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "6747": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6084,
        6121
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x1"
    },
    "6749": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6033,
        6056
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "6751": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6033,
        6056
      ],
      "op": "SHL",
      "path": "1"
    },
    "6752": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6084,
        6121
      ],
      "op": "SUB",
      "path": "1"
    },
    "6753": {
      "fn": "AcriaNode.payout_stake",
      "jump": "i",
      "offset": [
        6084,
        6121
      ],
      "op": "DUP7",
      "path": "1"
    },
    "6754": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6084,
        6121
      ],
      "op": "AND",
      "path": "1"
    },
    "6755": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6084,
        6143
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6756": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6084,
        6143
      ],
      "op": "PUSH32",
      "path": "1",
      "value": "0xC652E5A6FBF70DB834261CC5FA689D2B62011AE542C2C79939010DED9FDCA2A7"
    },
    "6789": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6084,
        6143
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6790": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6084,
        6143
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6791": {
      "fn": "AcriaNode.payout_stake",
      "jump": "i",
      "offset": [
        6084,
        6143
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6792": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6084,
        6143
      ],
      "op": "SUB",
      "path": "1"
    },
    "6793": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6207,
        6228
      ],
      "op": "PUSH1",
      "path": "1",
      "statement": 82,
      "value": "0x80"
    },
    "6795": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6207,
        6228
      ],
      "op": "ADD",
      "path": "1"
    },
    "6796": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6207,
        6228
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6797": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6207,
        6228
      ],
      "op": "LOG2",
      "path": "1"
    },
    "6798": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6207,
        6220
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6799": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6207,
        6228
      ],
      "op": "POP",
      "path": "1"
    },
    "6800": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6207,
        6228
      ],
      "op": "PUSH2",
      "path": "1",
      "value": "0x1A9A"
    },
    "6803": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6207,
        6228
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6804": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6207,
        6228
      ],
      "op": "POP",
      "path": "1"
    },
    "6805": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6207,
        6228
      ],
      "op": "JUMP",
      "path": "1"
    },
    "6806": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6207,
        6228
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6807": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6207,
        6228
      ],
      "op": "POP",
      "path": "1"
    },
    "6808": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6207,
        6228
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x0"
    },
    "6810": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6207,
        6228
      ],
      "op": "JUMPDEST",
      "path": "1"
    },
    "6811": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6207,
        6228
      ],
      "op": "SWAP3",
      "path": "1"
    },
    "6812": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6155,
        6229
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6813": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6155,
        6229
      ],
      "op": "POP",
      "path": "1"
    },
    "6814": {
      "op": "POP"
    },
    "6815": {
      "op": "JUMP"
    },
    "6816": {
      "op": "JUMPDEST"
    },
    "6817": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6819": {
      "op": "DUP1"
    },
    "6820": {
      "op": "MLOAD"
    },
    "6821": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "6824": {
      "op": "DUP2"
    },
    "6825": {
      "op": "ADD"
    },
    "6826": {
      "op": "DUP3"
    },
    "6827": {
      "op": "MSTORE"
    },
    "6828": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6830": {
      "op": "DUP1"
    },
    "6831": {
      "op": "DUP3"
    },
    "6832": {
      "op": "MSTORE"
    },
    "6833": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6835": {
      "op": "DUP3"
    },
    "6836": {
      "op": "ADD"
    },
    "6837": {
      "op": "DUP2"
    },
    "6838": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6155,
        6229
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6839": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6155,
        6229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6840": {
      "op": "SWAP2"
    },
    "6841": {
      "op": "DUP2"
    },
    "6842": {
      "op": "ADD"
    },
    "6843": {
      "op": "DUP3"
    },
    "6844": {
      "op": "SWAP1"
    },
    "6845": {
      "op": "MSTORE"
    },
    "6846": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "6848": {
      "op": "DUP2"
    },
    "6849": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6155,
        6229
      ],
      "op": "ADD",
      "path": "1"
    },
    "6850": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6155,
        6229
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6851": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6155,
        6229
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6852": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6155,
        6229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6853": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6155,
        6229
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0x80"
    },
    "6855": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6155,
        6229
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6856": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6155,
        6229
      ],
      "op": "ADD",
      "path": "1"
    },
    "6857": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6155,
        6229
      ],
      "op": "DUP3",
      "path": "1"
    },
    "6858": {
      "op": "SWAP1"
    },
    "6859": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6155,
        6229
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6860": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6155,
        6229
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xA0"
    },
    "6862": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6155,
        6229
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6863": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6247,
        6253
      ],
      "op": "ADD",
      "path": "1",
      "statement": 83
    },
    "6864": {
      "op": "DUP3"
    },
    "6865": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6240,
        6253
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6866": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6240,
        6253
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6867": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6869": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6240,
        6253
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6870": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5972,
        6287
      ],
      "op": "ADD",
      "path": "1"
    },
    "6871": {
      "op": "DUP3"
    },
    "6872": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        6280,
        6281
      ],
      "op": "SWAP1",
      "path": "1",
      "statement": 84
    },
    "6873": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5972,
        6287
      ],
      "op": "MSTORE",
      "path": "1"
    },
    "6874": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5743,
        6291
      ],
      "op": "PUSH1",
      "path": "1",
      "value": "0xE0"
    },
    "6876": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5743,
        6291
      ],
      "op": "DUP2",
      "path": "1"
    },
    "6877": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5743,
        6291
      ],
      "op": "ADD",
      "path": "1"
    },
    "6878": {
      "fn": "AcriaNode.payout_stake",
      "offset": [
        5743,
        6291
      ],
      "op": "SWAP2",
      "path": "1"
    },
    "6879": {
      "fn": "AcriaNode.payout_stake",
      "jump": "o",
      "offset": [
        5743,
        6291
      ],
      "op": "SWAP1",
      "path": "1"
    },
    "6880": {
      "op": "SWAP2"
    },
    "6881": {
      "op": "MSTORE"
    },
    "6882": {
      "op": "SWAP1"
    },
    "6883": {
      "op": "JUMP"
    },
    "6884": {
      "op": "JUMPDEST"
    },
    "6885": {
      "op": "DUP1"
    },
    "6886": {
      "op": "CALLDATALOAD"
    },
    "6887": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6889": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6891": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "6893": {
      "op": "SHL"
    },
    "6894": {
      "op": "SUB"
    },
    "6895": {
      "op": "DUP2"
    },
    "6896": {
      "op": "AND"
    },
    "6897": {
      "op": "DUP2"
    },
    "6898": {
      "op": "EQ"
    },
    "6899": {
      "op": "PUSH2",
      "value": "0x12D5"
    },
    "6902": {
      "op": "JUMPI"
    },
    "6903": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6905": {
      "op": "DUP1"
    },
    "6906": {
      "op": "REVERT"
    },
    "6907": {
      "op": "JUMPDEST"
    },
    "6908": {
      "op": "DUP1"
    },
    "6909": {
      "op": "CALLDATALOAD"
    },
    "6910": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6912": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "6914": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "6916": {
      "op": "SHL"
    },
    "6917": {
      "op": "SUB"
    },
    "6918": {
      "op": "NOT"
    },
    "6919": {
      "op": "DUP2"
    },
    "6920": {
      "op": "AND"
    },
    "6921": {
      "op": "DUP2"
    },
    "6922": {
      "op": "EQ"
    },
    "6923": {
      "op": "PUSH2",
      "value": "0x12D5"
    },
    "6926": {
      "op": "JUMPI"
    },
    "6927": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6929": {
      "op": "DUP1"
    },
    "6930": {
      "op": "REVERT"
    },
    "6931": {
      "op": "JUMPDEST"
    },
    "6932": {
      "op": "DUP1"
    },
    "6933": {
      "op": "CALLDATALOAD"
    },
    "6934": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "6939": {
      "op": "DUP2"
    },
    "6940": {
      "op": "AND"
    },
    "6941": {
      "op": "DUP2"
    },
    "6942": {
      "op": "EQ"
    },
    "6943": {
      "op": "PUSH2",
      "value": "0x12D5"
    },
    "6946": {
      "op": "JUMPI"
    },
    "6947": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6949": {
      "op": "DUP1"
    },
    "6950": {
      "op": "REVERT"
    },
    "6951": {
      "op": "JUMPDEST"
    },
    "6952": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6954": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "6956": {
      "op": "DUP3"
    },
    "6957": {
      "op": "DUP5"
    },
    "6958": {
      "jump": "o",
      "op": "SUB"
    },
    "6959": {
      "op": "SLT"
    },
    "6960": {
      "op": "ISZERO"
    },
    "6961": {
      "op": "PUSH2",
      "value": "0x1B38"
    },
    "6964": {
      "op": "JUMPI"
    },
    "6965": {
      "op": "DUP1"
    },
    "6966": {
      "op": "DUP2"
    },
    "6967": {
      "op": "REVERT"
    },
    "6968": {
      "op": "JUMPDEST"
    },
    "6969": {
      "op": "PUSH2",
      "value": "0x1B41"
    },
    "6972": {
      "op": "DUP3"
    },
    "6973": {
      "op": "PUSH2",
      "value": "0x1AE4"
    },
    "6976": {
      "op": "JUMP"
    },
    "6977": {
      "op": "JUMPDEST"
    },
    "6978": {
      "op": "SWAP4"
    },
    "6979": {
      "op": "SWAP3"
    },
    "6980": {
      "op": "POP"
    },
    "6981": {
      "op": "POP"
    },
    "6982": {
      "op": "POP"
    },
    "6983": {
      "op": "JUMP"
    },
    "6984": {
      "op": "JUMPDEST"
    },
    "6985": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "6987": {
      "op": "DUP1"
    },
    "6988": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "6990": {
      "op": "DUP4"
    },
    "6991": {
      "op": "DUP6"
    },
    "6992": {
      "op": "SUB"
    },
    "6993": {
      "op": "SLT"
    },
    "6994": {
      "op": "ISZERO"
    },
    "6995": {
      "op": "PUSH2",
      "value": "0x1B5A"
    },
    "6998": {
      "op": "JUMPI"
    },
    "6999": {
      "op": "DUP1"
    },
    "7000": {
      "op": "DUP2"
    },
    "7001": {
      "op": "REVERT"
    },
    "7002": {
      "op": "JUMPDEST"
    },
    "7003": {
      "op": "PUSH2",
      "value": "0x1B63"
    },
    "7006": {
      "op": "DUP4"
    },
    "7007": {
      "op": "PUSH2",
      "value": "0x1AE4"
    },
    "7010": {
      "op": "JUMP"
    },
    "7011": {
      "op": "JUMPDEST"
    },
    "7012": {
      "op": "SWAP5"
    },
    "7013": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7015": {
      "op": "SWAP4"
    },
    "7016": {
      "op": "SWAP1"
    },
    "7017": {
      "op": "SWAP4"
    },
    "7018": {
      "op": "ADD"
    },
    "7019": {
      "op": "CALLDATALOAD"
    },
    "7020": {
      "op": "SWAP4"
    },
    "7021": {
      "op": "POP"
    },
    "7022": {
      "op": "POP"
    },
    "7023": {
      "op": "POP"
    },
    "7024": {
      "op": "JUMP"
    },
    "7025": {
      "op": "JUMPDEST"
    },
    "7026": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7028": {
      "op": "DUP1"
    },
    "7029": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7031": {
      "op": "DUP1"
    },
    "7032": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7034": {
      "op": "DUP6"
    },
    "7035": {
      "op": "DUP8"
    },
    "7036": {
      "op": "SUB"
    },
    "7037": {
      "op": "SLT"
    },
    "7038": {
      "op": "ISZERO"
    },
    "7039": {
      "op": "PUSH2",
      "value": "0x1B86"
    },
    "7042": {
      "op": "JUMPI"
    },
    "7043": {
      "op": "DUP2"
    },
    "7044": {
      "jump": "i",
      "op": "DUP3"
    },
    "7045": {
      "op": "REVERT"
    },
    "7046": {
      "op": "JUMPDEST"
    },
    "7047": {
      "op": "PUSH2",
      "value": "0x1B8F"
    },
    "7050": {
      "op": "DUP6"
    },
    "7051": {
      "op": "PUSH2",
      "value": "0x1AFB"
    },
    "7054": {
      "op": "JUMP"
    },
    "7055": {
      "jump": "o",
      "op": "JUMPDEST"
    },
    "7056": {
      "op": "SWAP4"
    },
    "7057": {
      "op": "POP"
    },
    "7058": {
      "op": "PUSH2",
      "value": "0x1B9D"
    },
    "7061": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7063": {
      "op": "DUP7"
    },
    "7064": {
      "op": "ADD"
    },
    "7065": {
      "op": "PUSH2",
      "value": "0x1AE4"
    },
    "7068": {
      "op": "JUMP"
    },
    "7069": {
      "op": "JUMPDEST"
    },
    "7070": {
      "op": "SWAP3"
    },
    "7071": {
      "op": "POP"
    },
    "7072": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7074": {
      "op": "DUP6"
    },
    "7075": {
      "op": "ADD"
    },
    "7076": {
      "op": "CALLDATALOAD"
    },
    "7077": {
      "op": "SWAP2"
    },
    "7078": {
      "op": "POP"
    },
    "7079": {
      "op": "PUSH2",
      "value": "0x1BB2"
    },
    "7082": {
      "jump": "i",
      "op": "PUSH1",
      "value": "0x60"
    },
    "7084": {
      "op": "DUP7"
    },
    "7085": {
      "op": "ADD"
    },
    "7086": {
      "op": "PUSH2",
      "value": "0x1B13"
    },
    "7089": {
      "op": "JUMP"
    },
    "7090": {
      "op": "JUMPDEST"
    },
    "7091": {
      "op": "SWAP1"
    },
    "7092": {
      "op": "POP"
    },
    "7093": {
      "op": "SWAP3"
    },
    "7094": {
      "op": "SWAP6"
    },
    "7095": {
      "op": "SWAP2"
    },
    "7096": {
      "op": "SWAP5"
    },
    "7097": {
      "op": "POP"
    },
    "7098": {
      "jump": "o",
      "op": "SWAP3"
    },
    "7099": {
      "op": "POP"
    },
    "7100": {
      "op": "JUMP"
    },
    "7101": {
      "op": "JUMPDEST"
    },
    "7102": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7104": {
      "op": "DUP1"
    },
    "7105": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7107": {
      "op": "DUP1"
    },
    "7108": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7110": {
      "op": "DUP1"
    },
    "7111": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7113": {
      "op": "DUP8"
    },
    "7114": {
      "op": "DUP10"
    },
    "7115": {
      "op": "SUB"
    },
    "7116": {
      "op": "SLT"
    },
    "7117": {
      "op": "ISZERO"
    },
    "7118": {
      "op": "PUSH2",
      "value": "0x1BD5"
    },
    "7121": {
      "op": "JUMPI"
    },
    "7122": {
      "op": "DUP2"
    },
    "7123": {
      "op": "DUP3"
    },
    "7124": {
      "op": "REVERT"
    },
    "7125": {
      "jump": "i",
      "op": "JUMPDEST"
    },
    "7126": {
      "op": "PUSH2",
      "value": "0x1BDE"
    },
    "7129": {
      "op": "DUP8"
    },
    "7130": {
      "op": "PUSH2",
      "value": "0x1AFB"
    },
    "7133": {
      "op": "JUMP"
    },
    "7134": {
      "op": "JUMPDEST"
    },
    "7135": {
      "op": "SWAP6"
    },
    "7136": {
      "op": "POP"
    },
    "7137": {
      "op": "PUSH2",
      "value": "0x1BEC"
    },
    "7140": {
      "jump": "i",
      "op": "PUSH1",
      "value": "0x20"
    },
    "7142": {
      "op": "DUP9"
    },
    "7143": {
      "op": "ADD"
    },
    "7144": {
      "op": "PUSH2",
      "value": "0x1AE4"
    },
    "7147": {
      "op": "JUMP"
    },
    "7148": {
      "op": "JUMPDEST"
    },
    "7149": {
      "op": "SWAP5"
    },
    "7150": {
      "op": "POP"
    },
    "7151": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7153": {
      "op": "DUP8"
    },
    "7154": {
      "op": "ADD"
    },
    "7155": {
      "op": "CALLDATALOAD"
    },
    "7156": {
      "op": "SWAP4"
    },
    "7157": {
      "op": "POP"
    },
    "7158": {
      "op": "PUSH2",
      "value": "0x1C01"
    },
    "7161": {
      "jump": "i",
      "op": "PUSH1",
      "value": "0x60"
    },
    "7163": {
      "op": "DUP9"
    },
    "7164": {
      "op": "ADD"
    },
    "7165": {
      "op": "PUSH2",
      "value": "0x1B13"
    },
    "7168": {
      "op": "JUMP"
    },
    "7169": {
      "op": "JUMPDEST"
    },
    "7170": {
      "op": "SWAP3"
    },
    "7171": {
      "op": "POP"
    },
    "7172": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7174": {
      "op": "DUP8"
    },
    "7175": {
      "op": "ADD"
    },
    "7176": {
      "jump": "o",
      "op": "CALLDATALOAD"
    },
    "7177": {
      "op": "SWAP2"
    },
    "7178": {
      "op": "POP"
    },
    "7179": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7181": {
      "op": "DUP8"
    },
    "7182": {
      "op": "ADD"
    },
    "7183": {
      "op": "CALLDATALOAD"
    },
    "7184": {
      "op": "SWAP1"
    },
    "7185": {
      "op": "POP"
    },
    "7186": {
      "op": "SWAP3"
    },
    "7187": {
      "op": "SWAP6"
    },
    "7188": {
      "op": "POP"
    },
    "7189": {
      "op": "SWAP3"
    },
    "7190": {
      "op": "SWAP6"
    },
    "7191": {
      "op": "POP"
    },
    "7192": {
      "op": "SWAP3"
    },
    "7193": {
      "op": "SWAP6"
    },
    "7194": {
      "op": "JUMP"
    },
    "7195": {
      "op": "JUMPDEST"
    },
    "7196": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7198": {
      "op": "DUP1"
    },
    "7199": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7201": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7203": {
      "jump": "i",
      "op": "DUP5"
    },
    "7204": {
      "op": "DUP7"
    },
    "7205": {
      "op": "SUB"
    },
    "7206": {
      "op": "SLT"
    },
    "7207": {
      "op": "ISZERO"
    },
    "7208": {
      "op": "PUSH2",
      "value": "0x1C2F"
    },
    "7211": {
      "op": "JUMPI"
    },
    "7212": {
      "op": "DUP3"
    },
    "7213": {
      "op": "DUP4"
    },
    "7214": {
      "jump": "i",
      "op": "REVERT"
    },
    "7215": {
      "op": "JUMPDEST"
    },
    "7216": {
      "op": "PUSH2",
      "value": "0x1C38"
    },
    "7219": {
      "op": "DUP5"
    },
    "7220": {
      "op": "PUSH2",
      "value": "0x1AFB"
    },
    "7223": {
      "op": "JUMP"
    },
    "7224": {
      "op": "JUMPDEST"
    },
    "7225": {
      "op": "SWAP6"
    },
    "7226": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7228": {
      "op": "DUP6"
    },
    "7229": {
      "op": "ADD"
    },
    "7230": {
      "op": "CALLDATALOAD"
    },
    "7231": {
      "op": "SWAP6"
    },
    "7232": {
      "op": "POP"
    },
    "7233": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7235": {
      "jump": "i",
      "op": "SWAP1"
    },
    "7236": {
      "op": "SWAP5"
    },
    "7237": {
      "op": "ADD"
    },
    "7238": {
      "op": "CALLDATALOAD"
    },
    "7239": {
      "op": "SWAP4"
    },
    "7240": {
      "op": "SWAP3"
    },
    "7241": {
      "op": "POP"
    },
    "7242": {
      "op": "POP"
    },
    "7243": {
      "op": "POP"
    },
    "7244": {
      "op": "JUMP"
    },
    "7245": {
      "op": "JUMPDEST"
    },
    "7246": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7248": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7250": {
      "op": "DUP3"
    },
    "7251": {
      "op": "DUP5"
    },
    "7252": {
      "op": "SUB"
    },
    "7253": {
      "op": "SLT"
    },
    "7254": {
      "op": "ISZERO"
    },
    "7255": {
      "op": "PUSH2",
      "value": "0x1C5E"
    },
    "7258": {
      "op": "JUMPI"
    },
    "7259": {
      "op": "DUP1"
    },
    "7260": {
      "op": "DUP2"
    },
    "7261": {
      "op": "REVERT"
    },
    "7262": {
      "op": "JUMPDEST"
    },
    "7263": {
      "jump": "o",
      "op": "POP"
    },
    "7264": {
      "op": "CALLDATALOAD"
    },
    "7265": {
      "op": "SWAP2"
    },
    "7266": {
      "op": "SWAP1"
    },
    "7267": {
      "op": "POP"
    },
    "7268": {
      "op": "JUMP"
    },
    "7269": {
      "op": "JUMPDEST"
    },
    "7270": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7272": {
      "op": "DUP3"
    },
    "7273": {
      "op": "MLOAD"
    },
    "7274": {
      "op": "DUP2"
    },
    "7275": {
      "op": "JUMPDEST"
    },
    "7276": {
      "op": "DUP2"
    },
    "7277": {
      "op": "DUP2"
    },
    "7278": {
      "op": "LT"
    },
    "7279": {
      "op": "ISZERO"
    },
    "7280": {
      "op": "PUSH2",
      "value": "0x1C85"
    },
    "7283": {
      "op": "JUMPI"
    },
    "7284": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7286": {
      "op": "DUP2"
    },
    "7287": {
      "jump": "i",
      "op": "DUP7"
    },
    "7288": {
      "op": "ADD"
    },
    "7289": {
      "op": "DUP2"
    },
    "7290": {
      "op": "ADD"
    },
    "7291": {
      "op": "MLOAD"
    },
    "7292": {
      "op": "DUP6"
    },
    "7293": {
      "op": "DUP4"
    },
    "7294": {
      "op": "ADD"
    },
    "7295": {
      "op": "MSTORE"
    },
    "7296": {
      "op": "ADD"
    },
    "7297": {
      "op": "PUSH2",
      "value": "0x1C6B"
    },
    "7300": {
      "op": "JUMP"
    },
    "7301": {
      "op": "JUMPDEST"
    },
    "7302": {
      "op": "DUP2"
    },
    "7303": {
      "op": "DUP2"
    },
    "7304": {
      "op": "GT"
    },
    "7305": {
      "op": "ISZERO"
    },
    "7306": {
      "op": "PUSH2",
      "value": "0x1C93"
    },
    "7309": {
      "op": "JUMPI"
    },
    "7310": {
      "jump": "o",
      "op": "DUP3"
    },
    "7311": {
      "op": "DUP3"
    },
    "7312": {
      "op": "DUP6"
    },
    "7313": {
      "op": "ADD"
    },
    "7314": {
      "op": "MSTORE"
    },
    "7315": {
      "op": "JUMPDEST"
    },
    "7316": {
      "op": "POP"
    },
    "7317": {
      "op": "SWAP2"
    },
    "7318": {
      "op": "SWAP1"
    },
    "7319": {
      "op": "SWAP2"
    },
    "7320": {
      "op": "ADD"
    },
    "7321": {
      "op": "SWAP3"
    },
    "7322": {
      "op": "SWAP2"
    },
    "7323": {
      "op": "POP"
    },
    "7324": {
      "op": "POP"
    },
    "7325": {
      "op": "JUMP"
    },
    "7326": {
      "op": "JUMPDEST"
    },
    "7327": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7329": {
      "op": "DUP1"
    },
    "7330": {
      "op": "DUP3"
    },
    "7331": {
      "jump": "o",
      "op": "MSTORE"
    },
    "7332": {
      "op": "DUP3"
    },
    "7333": {
      "op": "MLOAD"
    },
    "7334": {
      "op": "DUP3"
    },
    "7335": {
      "op": "DUP3"
    },
    "7336": {
      "op": "ADD"
    },
    "7337": {
      "op": "DUP2"
    },
    "7338": {
      "op": "SWAP1"
    },
    "7339": {
      "op": "MSTORE"
    },
    "7340": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7342": {
      "op": "SWAP2"
    },
    "7343": {
      "op": "SWAP1"
    },
    "7344": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7346": {
      "op": "SWAP1"
    },
    "7347": {
      "op": "DUP2"
    },
    "7348": {
      "op": "DUP6"
    },
    "7349": {
      "op": "ADD"
    },
    "7350": {
      "op": "SWAP1"
    },
    "7351": {
      "op": "DUP7"
    },
    "7352": {
      "op": "DUP5"
    },
    "7353": {
      "op": "ADD"
    },
    "7354": {
      "op": "DUP6"
    },
    "7355": {
      "op": "JUMPDEST"
    },
    "7356": {
      "op": "DUP3"
    },
    "7357": {
      "op": "DUP2"
    },
    "7358": {
      "op": "LT"
    },
    "7359": {
      "op": "ISZERO"
    },
    "7360": {
      "op": "PUSH2",
      "value": "0x1D4B"
    },
    "7363": {
      "op": "JUMPI"
    },
    "7364": {
      "op": "DUP2"
    },
    "7365": {
      "op": "MLOAD"
    },
    "7366": {
      "op": "DUP1"
    },
    "7367": {
      "op": "MLOAD"
    },
    "7368": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7370": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7372": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7374": {
      "op": "SHL"
    },
    "7375": {
      "op": "SUB"
    },
    "7376": {
      "op": "NOT"
    },
    "7377": {
      "op": "AND"
    },
    "7378": {
      "op": "DUP6"
    },
    "7379": {
      "op": "MSTORE"
    },
    "7380": {
      "op": "DUP7"
    },
    "7381": {
      "op": "DUP2"
    },
    "7382": {
      "op": "ADD"
    },
    "7383": {
      "op": "MLOAD"
    },
    "7384": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7386": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7388": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7390": {
      "jump": "o",
      "op": "SHL"
    },
    "7391": {
      "op": "SUB"
    },
    "7392": {
      "op": "SWAP1"
    },
    "7393": {
      "op": "DUP2"
    },
    "7394": {
      "op": "AND"
    },
    "7395": {
      "op": "DUP9"
    },
    "7396": {
      "op": "DUP8"
    },
    "7397": {
      "op": "ADD"
    },
    "7398": {
      "op": "MSTORE"
    },
    "7399": {
      "op": "DUP7"
    },
    "7400": {
      "op": "DUP3"
    },
    "7401": {
      "op": "ADD"
    },
    "7402": {
      "op": "MLOAD"
    },
    "7403": {
      "op": "AND"
    },
    "7404": {
      "op": "DUP7"
    },
    "7405": {
      "op": "DUP7"
    },
    "7406": {
      "op": "ADD"
    },
    "7407": {
      "op": "MSTORE"
    },
    "7408": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7410": {
      "op": "DUP1"
    },
    "7411": {
      "op": "DUP3"
    },
    "7412": {
      "op": "ADD"
    },
    "7413": {
      "op": "MLOAD"
    },
    "7414": {
      "op": "PUSH4",
      "value": "0xFFFFFFFF"
    },
    "7419": {
      "op": "SWAP1"
    },
    "7420": {
      "op": "DUP2"
    },
    "7421": {
      "op": "AND"
    },
    "7422": {
      "op": "SWAP2"
    },
    "7423": {
      "op": "DUP8"
    },
    "7424": {
      "op": "ADD"
    },
    "7425": {
      "op": "SWAP2"
    },
    "7426": {
      "op": "SWAP1"
    },
    "7427": {
      "op": "SWAP2"
    },
    "7428": {
      "op": "MSTORE"
    },
    "7429": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7431": {
      "op": "DUP1"
    },
    "7432": {
      "op": "DUP4"
    },
    "7433": {
      "op": "ADD"
    },
    "7434": {
      "op": "MLOAD"
    },
    "7435": {
      "op": "SWAP1"
    },
    "7436": {
      "op": "SWAP2"
    },
    "7437": {
      "op": "AND"
    },
    "7438": {
      "op": "SWAP1"
    },
    "7439": {
      "op": "DUP7"
    },
    "7440": {
      "op": "ADD"
    },
    "7441": {
      "op": "MSTORE"
    },
    "7442": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7444": {
      "op": "DUP1"
    },
    "7445": {
      "op": "DUP3"
    },
    "7446": {
      "op": "ADD"
    },
    "7447": {
      "op": "MLOAD"
    },
    "7448": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7450": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7452": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7454": {
      "op": "SHL"
    },
    "7455": {
      "op": "SUB"
    },
    "7456": {
      "op": "AND"
    },
    "7457": {
      "op": "SWAP1"
    },
    "7458": {
      "op": "DUP7"
    },
    "7459": {
      "op": "ADD"
    },
    "7460": {
      "op": "MSTORE"
    },
    "7461": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7463": {
      "op": "DUP1"
    },
    "7464": {
      "op": "DUP3"
    },
    "7465": {
      "op": "ADD"
    },
    "7466": {
      "op": "MLOAD"
    },
    "7467": {
      "op": "SWAP1"
    },
    "7468": {
      "op": "DUP7"
    },
    "7469": {
      "op": "ADD"
    },
    "7470": {
      "op": "MSTORE"
    },
    "7471": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7473": {
      "op": "SWAP1"
    },
    "7474": {
      "op": "DUP2"
    },
    "7475": {
      "op": "ADD"
    },
    "7476": {
      "op": "MLOAD"
    },
    "7477": {
      "op": "SWAP1"
    },
    "7478": {
      "op": "DUP6"
    },
    "7479": {
      "op": "ADD"
    },
    "7480": {
      "op": "MSTORE"
    },
    "7481": {
      "op": "PUSH2",
      "value": "0x100"
    },
    "7484": {
      "op": "SWAP1"
    },
    "7485": {
      "op": "SWAP4"
    },
    "7486": {
      "op": "ADD"
    },
    "7487": {
      "op": "SWAP3"
    },
    "7488": {
      "op": "SWAP1"
    },
    "7489": {
      "op": "DUP6"
    },
    "7490": {
      "op": "ADD"
    },
    "7491": {
      "op": "SWAP1"
    },
    "7492": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7494": {
      "op": "ADD"
    },
    "7495": {
      "op": "PUSH2",
      "value": "0x1CBB"
    },
    "7498": {
      "op": "JUMP"
    },
    "7499": {
      "op": "JUMPDEST"
    },
    "7500": {
      "op": "POP"
    },
    "7501": {
      "op": "SWAP2"
    },
    "7502": {
      "op": "SWAP8"
    },
    "7503": {
      "op": "SWAP7"
    },
    "7504": {
      "op": "POP"
    },
    "7505": {
      "op": "POP"
    },
    "7506": {
      "op": "POP"
    },
    "7507": {
      "op": "POP"
    },
    "7508": {
      "op": "POP"
    },
    "7509": {
      "op": "POP"
    },
    "7510": {
      "op": "POP"
    },
    "7511": {
      "op": "JUMP"
    },
    "7512": {
      "op": "JUMPDEST"
    },
    "7513": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7515": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7517": {
      "op": "PUSH1",
      "value": "0xC0"
    },
    "7519": {
      "op": "SHL"
    },
    "7520": {
      "op": "SUB"
    },
    "7521": {
      "op": "NOT"
    },
    "7522": {
      "op": "SWAP5"
    },
    "7523": {
      "op": "SWAP1"
    },
    "7524": {
      "op": "SWAP5"
    },
    "7525": {
      "op": "AND"
    },
    "7526": {
      "op": "DUP5"
    },
    "7527": {
      "op": "MSTORE"
    },
    "7528": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7530": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7532": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "7534": {
      "op": "SHL"
    },
    "7535": {
      "op": "SUB"
    },
    "7536": {
      "op": "SWAP3"
    },
    "7537": {
      "op": "SWAP1"
    },
    "7538": {
      "op": "SWAP3"
    },
    "7539": {
      "op": "AND"
    },
    "7540": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "7542": {
      "op": "DUP5"
    },
    "7543": {
      "op": "ADD"
    },
    "7544": {
      "op": "MSTORE"
    },
    "7545": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7547": {
      "op": "DUP4"
    },
    "7548": {
      "op": "ADD"
    },
    "7549": {
      "op": "MSTORE"
    },
    "7550": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "7552": {
      "op": "DUP3"
    },
    "7553": {
      "op": "ADD"
    },
    "7554": {
      "op": "MSTORE"
    },
    "7555": {
      "op": "PUSH1",
      "value": "0x80"
    },
    "7557": {
      "op": "ADD"
    },
    "7558": {
      "op": "SWAP1"
    },
    "7559": {
      "op": "JUMP"
    },
    "7560": {
      "op": "JUMPDEST"
    },
    "7561": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7563": {
      "op": "DUP3"
    },
    "7564": {
      "op": "NOT"
    },
    "7565": {
      "op": "DUP3"
    },
    "7566": {
      "op": "GT"
    },
    "7567": {
      "op": "ISZERO"
    },
    "7568": {
      "op": "PUSH2",
      "value": "0x1D9B"
    },
    "7571": {
      "op": "JUMPI"
    },
    "7572": {
      "op": "PUSH2",
      "value": "0x1D9B"
    },
    "7575": {
      "op": "PUSH2",
      "value": "0x1E85"
    },
    "7578": {
      "op": "JUMP"
    },
    "7579": {
      "op": "JUMPDEST"
    },
    "7580": {
      "op": "POP"
    },
    "7581": {
      "op": "ADD"
    },
    "7582": {
      "jump": "o",
      "op": "SWAP1"
    },
    "7583": {
      "op": "JUMP"
    },
    "7584": {
      "op": "JUMPDEST"
    },
    "7585": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7587": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7589": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7591": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7593": {
      "op": "SHL"
    },
    "7594": {
      "op": "SUB"
    },
    "7595": {
      "op": "DUP1"
    },
    "7596": {
      "op": "DUP4"
    },
    "7597": {
      "op": "AND"
    },
    "7598": {
      "jump": "i",
      "op": "DUP2"
    },
    "7599": {
      "op": "DUP6"
    },
    "7600": {
      "op": "AND"
    },
    "7601": {
      "op": "DUP1"
    },
    "7602": {
      "op": "DUP4"
    },
    "7603": {
      "jump": "o",
      "op": "SUB"
    },
    "7604": {
      "op": "DUP3"
    },
    "7605": {
      "op": "GT"
    },
    "7606": {
      "op": "ISZERO"
    },
    "7607": {
      "op": "PUSH2",
      "value": "0x1DC2"
    },
    "7610": {
      "op": "JUMPI"
    },
    "7611": {
      "op": "PUSH2",
      "value": "0x1DC2"
    },
    "7614": {
      "op": "PUSH2",
      "value": "0x1E85"
    },
    "7617": {
      "op": "JUMP"
    },
    "7618": {
      "op": "JUMPDEST"
    },
    "7619": {
      "op": "ADD"
    },
    "7620": {
      "op": "SWAP5"
    },
    "7621": {
      "op": "SWAP4"
    },
    "7622": {
      "op": "POP"
    },
    "7623": {
      "op": "POP"
    },
    "7624": {
      "op": "POP"
    },
    "7625": {
      "op": "POP"
    },
    "7626": {
      "op": "JUMP"
    },
    "7627": {
      "op": "JUMPDEST"
    },
    "7628": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7630": {
      "op": "DUP3"
    },
    "7631": {
      "op": "PUSH2",
      "value": "0x1DDA"
    },
    "7634": {
      "op": "JUMPI"
    },
    "7635": {
      "op": "PUSH2",
      "value": "0x1DDA"
    },
    "7638": {
      "jump": "i",
      "op": "PUSH2",
      "value": "0x1E9B"
    },
    "7641": {
      "op": "JUMP"
    },
    "7642": {
      "op": "JUMPDEST"
    },
    "7643": {
      "op": "POP"
    },
    "7644": {
      "op": "DIV"
    },
    "7645": {
      "op": "SWAP1"
    },
    "7646": {
      "op": "JUMP"
    },
    "7647": {
      "op": "JUMPDEST"
    },
    "7648": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7650": {
      "jump": "o",
      "op": "PUSH1",
      "value": "0x1"
    },
    "7652": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7654": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7656": {
      "op": "SHL"
    },
    "7657": {
      "op": "SUB"
    },
    "7658": {
      "op": "DUP1"
    },
    "7659": {
      "op": "DUP5"
    },
    "7660": {
      "op": "AND"
    },
    "7661": {
      "jump": "i",
      "op": "DUP1"
    },
    "7662": {
      "op": "PUSH2",
      "value": "0x1DF9"
    },
    "7665": {
      "op": "JUMPI"
    },
    "7666": {
      "op": "PUSH2",
      "value": "0x1DF9"
    },
    "7669": {
      "op": "PUSH2",
      "value": "0x1E9B"
    },
    "7672": {
      "jump": "o",
      "op": "JUMP"
    },
    "7673": {
      "op": "JUMPDEST"
    },
    "7674": {
      "op": "SWAP3"
    },
    "7675": {
      "op": "AND"
    },
    "7676": {
      "op": "SWAP2"
    },
    "7677": {
      "op": "SWAP1"
    },
    "7678": {
      "op": "SWAP2"
    },
    "7679": {
      "op": "DIV"
    },
    "7680": {
      "op": "SWAP3"
    },
    "7681": {
      "op": "SWAP2"
    },
    "7682": {
      "op": "POP"
    },
    "7683": {
      "op": "POP"
    },
    "7684": {
      "op": "JUMP"
    },
    "7685": {
      "op": "JUMPDEST"
    },
    "7686": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7688": {
      "op": "DUP2"
    },
    "7689": {
      "jump": "i",
      "op": "PUSH1",
      "value": "0x0"
    },
    "7691": {
      "op": "NOT"
    },
    "7692": {
      "op": "DIV"
    },
    "7693": {
      "op": "DUP4"
    },
    "7694": {
      "op": "GT"
    },
    "7695": {
      "op": "DUP3"
    },
    "7696": {
      "op": "ISZERO"
    },
    "7697": {
      "op": "ISZERO"
    },
    "7698": {
      "op": "AND"
    },
    "7699": {
      "op": "ISZERO"
    },
    "7700": {
      "op": "PUSH2",
      "value": "0x1E1F"
    },
    "7703": {
      "op": "JUMPI"
    },
    "7704": {
      "jump": "o",
      "op": "PUSH2",
      "value": "0x1E1F"
    },
    "7707": {
      "op": "PUSH2",
      "value": "0x1E85"
    },
    "7710": {
      "op": "JUMP"
    },
    "7711": {
      "op": "JUMPDEST"
    },
    "7712": {
      "op": "POP"
    },
    "7713": {
      "op": "MUL"
    },
    "7714": {
      "op": "SWAP1"
    },
    "7715": {
      "op": "JUMP"
    },
    "7716": {
      "op": "JUMPDEST"
    },
    "7717": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7719": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7721": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7723": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "7725": {
      "op": "SHL"
    },
    "7726": {
      "op": "SUB"
    },
    "7727": {
      "op": "DUP1"
    },
    "7728": {
      "op": "DUP4"
    },
    "7729": {
      "op": "AND"
    },
    "7730": {
      "jump": "i",
      "op": "DUP2"
    },
    "7731": {
      "op": "DUP6"
    },
    "7732": {
      "op": "AND"
    },
    "7733": {
      "op": "DUP2"
    },
    "7734": {
      "op": "DUP4"
    },
    "7735": {
      "jump": "o",
      "op": "DIV"
    },
    "7736": {
      "op": "DUP2"
    },
    "7737": {
      "op": "GT"
    },
    "7738": {
      "op": "DUP3"
    },
    "7739": {
      "op": "ISZERO"
    },
    "7740": {
      "op": "ISZERO"
    },
    "7741": {
      "op": "AND"
    },
    "7742": {
      "op": "ISZERO"
    },
    "7743": {
      "op": "PUSH2",
      "value": "0x1E4A"
    },
    "7746": {
      "op": "JUMPI"
    },
    "7747": {
      "op": "PUSH2",
      "value": "0x1E4A"
    },
    "7750": {
      "op": "PUSH2",
      "value": "0x1E85"
    },
    "7753": {
      "op": "JUMP"
    },
    "7754": {
      "op": "JUMPDEST"
    },
    "7755": {
      "op": "MUL"
    },
    "7756": {
      "op": "SWAP5"
    },
    "7757": {
      "op": "SWAP4"
    },
    "7758": {
      "op": "POP"
    },
    "7759": {
      "op": "POP"
    },
    "7760": {
      "op": "POP"
    },
    "7761": {
      "op": "POP"
    },
    "7762": {
      "op": "JUMP"
    },
    "7763": {
      "op": "JUMPDEST"
    },
    "7764": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7766": {
      "op": "DUP3"
    },
    "7767": {
      "op": "DUP3"
    },
    "7768": {
      "op": "LT"
    },
    "7769": {
      "op": "ISZERO"
    },
    "7770": {
      "jump": "i",
      "op": "PUSH2",
      "value": "0x1E65"
    },
    "7773": {
      "op": "JUMPI"
    },
    "7774": {
      "op": "PUSH2",
      "value": "0x1E65"
    },
    "7777": {
      "op": "PUSH2",
      "value": "0x1E85"
    },
    "7780": {
      "op": "JUMP"
    },
    "7781": {
      "op": "JUMPDEST"
    },
    "7782": {
      "op": "POP"
    },
    "7783": {
      "op": "SUB"
    },
    "7784": {
      "op": "SWAP1"
    },
    "7785": {
      "jump": "o",
      "op": "JUMP"
    },
    "7786": {
      "op": "JUMPDEST"
    },
    "7787": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7789": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7791": {
      "op": "NOT"
    },
    "7792": {
      "op": "DUP3"
    },
    "7793": {
      "op": "EQ"
    },
    "7794": {
      "op": "ISZERO"
    },
    "7795": {
      "op": "PUSH2",
      "value": "0x1E7E"
    },
    "7798": {
      "op": "JUMPI"
    },
    "7799": {
      "op": "PUSH2",
      "value": "0x1E7E"
    },
    "7802": {
      "jump": "i",
      "op": "PUSH2",
      "value": "0x1E85"
    },
    "7805": {
      "op": "JUMP"
    },
    "7806": {
      "op": "JUMPDEST"
    },
    "7807": {
      "op": "POP"
    },
    "7808": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "7810": {
      "jump": "o",
      "op": "ADD"
    },
    "7811": {
      "op": "SWAP1"
    },
    "7812": {
      "op": "JUMP"
    },
    "7813": {
      "op": "JUMPDEST"
    },
    "7814": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7819": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7821": {
      "op": "SHL"
    },
    "7822": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7824": {
      "op": "MSTORE"
    },
    "7825": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "7827": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7829": {
      "op": "MSTORE"
    },
    "7830": {
      "jump": "i",
      "op": "PUSH1",
      "value": "0x24"
    },
    "7832": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7834": {
      "op": "REVERT"
    },
    "7835": {
      "op": "JUMPDEST"
    },
    "7836": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "7841": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "7843": {
      "jump": "o",
      "op": "SHL"
    },
    "7844": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7846": {
      "op": "MSTORE"
    },
    "7847": {
      "op": "PUSH1",
      "value": "0x12"
    },
    "7849": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "7851": {
      "op": "MSTORE"
    },
    "7852": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "7854": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "7856": {
      "op": "REVERT"
    },
    "7857": {
      "op": "INVALID"
    },
    "7858": {
      "op": "LOG2"
    },
    "7859": {
      "op": "PUSH5",
      "value": "0x6970667358"
    },
    "7865": {
      "op": "0x22"
    },
    "7866": {
      "op": "SLT"
    },
    "7867": {
      "op": "KECCAK256"
    },
    "7868": {
      "op": "0x2C"
    },
    "7869": {
      "op": "EQ"
    },
    "7870": {
      "op": "EQ"
    },
    "7871": {
      "op": "0xA8"
    },
    "7872": {
      "op": "NOT"
    },
    "7873": {
      "op": "REVERT"
    },
    "7874": {
      "op": "DUP14"
    },
    "7875": {
      "op": "0xA6"
    },
    "7876": {
      "op": "SAR"
    },
    "7877": {
      "op": "0xD9"
    }
  },
  "sha1": "f13db540a04930bddc48a71ece3630a3e6a7b9fe",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.4.22 <0.9.0;\npragma experimental ABIEncoderV2;\n\nimport \"./AcriaMain.sol\";\n\n\ncontract AcriaNode {\n\n  struct request {\n\tbytes8 requestID;\n\tuint64 fee;\n\tuint64 expiration;\n\tuint32 id;\n\tuint32 max_gas;\n\taddress callback;\n\tuint256 data;\n\tuint256 data_passthrough;\n  }\n  \n  \n  event RequestFilled(bytes32 requestID, address callback, uint256 fee, uint256 id);\n  event RequestFilledError(bytes32 requestID, address callback, uint256 fee, uint256 id);\n  event StakePaidOut(address indexed by, uint256 amount, uint256 period, uint256 token, uint256 total_token);\n  \n  address public immutable token_contract;\n  \n  address payable public immutable owner;\n  address immutable master;\n  request[] requests;\n  uint256 public completedRequests = 0;\n  \n  uint256 withdrawable = 0;\n  mapping(uint256 => uint256) public withdrawable_stake;\n  mapping(uint256 => uint256) public period_staker;\n  mapping(address => uint256) public staker;\n  mapping(address => uint256) public staker_stake;\n  uint256 public last_staker_added = 0;\n  uint256 public previous_last_staker_added = 0;\n  uint256 constant period_interval = 1000;//10 for local tests, 1000 for testnet (~2 days), 10000 for mainnet (~16 days)\n  \n  \n  constructor(address payable _owner, address _token_contract) {\n  \towner = _owner;\n  \tmaster = msg.sender;\n  \ttoken_contract = _token_contract;\n  }\n\n\n  modifier restricted() {\n    require(\n      msg.sender == owner,\n      \"Restricted to contract owner\"\n    );\n    _;\n  }\n  \n  \n  function get_total_stake(uint256 period) public view returns (uint256){\n  \tif(period == 0){\n  \t\treturn period_staker[last_staker_added];\n  \t}\n  \telse{\n  \t\treturn period_staker[period];\n  \t}\n  }\n\n\n  function pump_fee(uint256 id) public payable {\n  \trequire(msg.value < 10**18);\n  \trequire(msg.value > 0);\n  \trequire(msg.value + requests[id].fee < 10**18);\n  \trequire(requests[id].expiration != 0);\n  \t\n  \trequests[id].fee += uint64(msg.value);\n  }\n  \n  \n  function create_request(bytes8 _requestID, address callback, uint256 _expire, uint32 max_gas) public payable {\n    require(_expire > 100);\n    require(msg.value < 10**18);\n    require(_expire < 1000000);\n    require(max_gas < 500000);\n    \n    request memory new_request;\n    new_request.requestID = _requestID;\n    new_request.fee = uint64(msg.value);\n    new_request.expiration = uint64(block.number + _expire);\n    new_request.callback = callback;\n    new_request.id = uint32(requests.length);\n    new_request.max_gas = uint32(max_gas);\n    requests.push(new_request);\n  }\n  \n  \n  function create_request_with_data(bytes8 _requestID, address callback, uint256 _expire, uint32 max_gas, uint256 _data, uint256 _data_passthrough) public payable {\n    require(_expire > 100);\n    require(msg.value < 10**18);\n    require(_expire < 1000000);\n    require(max_gas < 500000);\n    \n    request memory new_request;\n    new_request.requestID = _requestID;\n    new_request.fee = uint64(msg.value);\n    new_request.expiration = uint64(block.number + _expire);\n    new_request.callback = callback;\n    new_request.id = uint32(requests.length);\n    new_request.max_gas = uint32(max_gas);\n    if(_data != 0)\n    \tnew_request.data = _data;\n    if(_data_passthrough != 0)\n    \tnew_request.data_passthrough = _data_passthrough;\n    requests.push(new_request);\n  }\n  \n  \n  function withdraw() public restricted{\n  \tuint256 w = withdrawable;\n  \twithdrawable = 0;\n  \t\n  \towner.transfer(w);\n  }\n  \n  \n  function start_stake(address initiator, uint256 balance) public {\n  \trequire(msg.sender == token_contract, \"Initiated by wrong contract\");\n  \trequire(staker[initiator] == 0, \"Already staking\");\n  \trequire(balance > 0, \"No Tokens\");\n  \t\n  \tuint256 join_period = block.number/period_interval+1;\n  \t\n  \tstaker[initiator] = join_period;\n  \tif(period_staker[join_period] == 0){\n  \t\tif(last_staker_added != 0 && last_staker_added != join_period){\n  \t\t\tperiod_staker[join_period] = period_staker[last_staker_added];\n  \t\t}\n  \t}\n  \t\n  \tuint256 bal = balance;\n  \tperiod_staker[join_period] += bal;\n  \tstaker_stake[initiator] = bal;\n  \t\n  \tif(last_staker_added != join_period){\n\t  \tprevious_last_staker_added = last_staker_added;\n\t  \tlast_staker_added = join_period;\n  \t}\n  }\n  \n  \n  function cancel_stake_withdraw(address initiator) public {\n  \tif(block.number/period_interval-1 >= staker[initiator])\n  \t\tpayout_stakes(initiator);\n  \tcancel_stake(initiator);\n  }\n  \n  \n  function cancel_stake(address initiator) public {\n  \trequire(msg.sender == token_contract);\n  \trequire(staker[initiator] != 0);\n  \t\n  \tuint256 join_period = block.number/period_interval+1;\n  \t\n  \tif(period_staker[block.number/period_interval] == 0){\n  \t\tif(last_staker_added == join_period){\n\t  \t\tif(previous_last_staker_added != 0){\n\t  \t\t\tperiod_staker[block.number/period_interval] = period_staker[previous_last_staker_added];\n\t  \t\t}\n  \t\t}\n  \t\telse{\n  \t\t\tif(last_staker_added != 0){\n\t  \t\t\tperiod_staker[block.number/period_interval] = period_staker[last_staker_added];\n\t  \t\t}\n  \t\t}\n  \t}\n  \tif(period_staker[join_period] == 0){\n  \t\tif(last_staker_added != 0 && last_staker_added != join_period){\n  \t\t\tperiod_staker[join_period] = period_staker[last_staker_added];\n  \t\t}\n  \t}\n  \t\n  \tif(last_staker_added != join_period){\n\t  \tprevious_last_staker_added = last_staker_added;\n\t  \tlast_staker_added = join_period;\n  \t}\n  \t\n  \tuint256 bal = staker_stake[initiator];\n  \tperiod_staker[join_period] -= bal;\n  \tif(staker[initiator] <= join_period-1){\n  \t\tperiod_staker[join_period-1] -= bal;\n  \t\tprevious_last_staker_added = join_period-1;\n  \t\t\n  \t\tif(period_staker[join_period-1] == 0){\n  \t\t\twithdrawable += withdrawable_stake[join_period-1];\n  \t\t}\n  \t}\n  \tstaker_stake[initiator] = 0;\n  \t\n  \tstaker[initiator] = 0;\n  \t\n  }\n  \n  \n  function payout_stake(uint256 period, address initiator) private returns (uint256){\n  \tif(period_staker[period] == 0){\n  \t\tif(period_staker[period-1] != 0){\n  \t\t\tperiod_staker[period] = period_staker[period-1];\n  \t\t}\n  \t}\n  \t\n  \tif(withdrawable_stake[period] > 0){\n\t  \tuint256 user_stake = staker_stake[initiator];\n\t  \t\n\t  \tuint256 payout = withdrawable_stake[period]*user_stake/period_staker[period];\n\n\t  \temit StakePaidOut(initiator, payout, period, user_stake, period_staker[period]);\n\t  \t\n\t  \treturn payout;\n  \t}\n  \telse{\n  \t\treturn 0;\n  \t}\n  }\n  \n  \n  function payout_stakes(address initiator) public {\n  \trequire(staker[initiator] != 0, \"Not a staker\");\n  \trequire(block.number/period_interval-1 >= staker[initiator], \"No full cicle staked\");\n  \t\n  \tuint256 total_payout = 0;\n  \t\n  \tfor(uint256 i = staker[initiator]; i<=block.number/period_interval-1;i++){\n  \t\ttotal_payout += payout_stake(i, initiator);\n  \t}\n  \t\n  \tstaker[initiator] = block.number/period_interval;\n\t  \t\n\tpayable(initiator).transfer(total_payout);\n  }\n  \n  \n  function fillRequest(bytes8 _requestID, uint256 value, uint256 i) public restricted{    \n    \trequire(requests[i].requestID == _requestID);\n    \t\n    \tbool staker_is_active = false;\n    \tif(period_staker[block.number/period_interval] == 0){\n  \t\tif(last_staker_added == block.number/period_interval+1){\n\t  \t\tif(previous_last_staker_added != 0){\n\t  \t\t\tif(period_staker[previous_last_staker_added] != 0)\n\t  \t\t\t\tstaker_is_active = true;\n\t  \t\t}\n  \t\t}\n  \t\telse{\n  \t\t\tif(last_staker_added != 0){\n\t  \t\t\tif(period_staker[last_staker_added] != 0)\n\t  \t\t\t staker_is_active = true;\n\t  \t\t}\n  \t\t}\n  \t}\n  \telse{\n  \t\tstaker_is_active = true;\n  \t}\n    \t\n\t\tif(requests[i].expiration >= block.number){\n\t\t    address callback = requests[i].callback;\n\t\t    uint256 fee = requests[i].fee/10*8;\n\t\t    uint32 max_gas = requests[i].max_gas;\n\t\t    uint256 data = requests[i].data;\n\t\t    uint256 data_passthrough = requests[i].data_passthrough;\n\t\t    \n\t\t    if(staker_is_active)\n\t\t    \twithdrawable_stake[block.number/period_interval] += requests[i].fee - fee;\n\t\t    else\n\t\t    \tfee += requests[i].fee - fee;\n\t\t\t    \t\n\t            withdrawable += fee;\n\t\t    \n\t\t    delete requests[i];\n\t\t    completedRequests++;\n\t\t    \n\t\t    bool success;\n\t\t    if(data == 0 && data_passthrough == 0)\n\t\t    \t(success, ) = callback.call{gas:max_gas}(abi.encodeWithSignature(\"value_callback(uint256)\", value));\n\t\t    else\n\t\t    \t(success, ) = callback.call{gas:max_gas}(abi.encodeWithSignature(\"value_callback(uint256,uint256,uint256)\", value, data, data_passthrough));\n\t\t    \t\n\t\t    if(!success) {\n\t\t\t    emit RequestFilledError(_requestID, callback, fee, i);\n\t\t    }\n\t\t    else{\n\t\t    \temit RequestFilled(_requestID, callback, fee, i);\n\t\t    }\n\t\t    \n\t\t \n\t\t}\n\t\telse{\n\t\t    if(staker_is_active)\n\t\t    \twithdrawable_stake[block.number/period_interval] += requests[i].fee;\n\t\t    else\n\t\t        withdrawable += requests[i].fee;\n\t\t    delete requests[i];\n\t\t}\n\t\n    }\n  \n  \n  function get_requests() public view returns(request[] memory) {\n    return requests;\n    \n  }\n  \n\n  function get_withdrawable() public view returns(uint256) {\n    return withdrawable;\n    \n  }\n  \n  \n}\n",
  "sourceMap": "129:8774:1:-:0;;;785:1;750:36;;816:1;793:24;;1061:1;1026:36;;1110:1;1066:45;;1242:146;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;1308:14:1;;;;;;;1336:10;1327:19;;;;1351:32;;;;;129:8774;;14:403:13;;;162:2;150:9;141:7;137:23;133:32;130:2;;;183:6;175;168:22;130:2;220:9;214:16;239:31;264:5;239:31;:::i;:::-;339:2;324:18;;318:25;289:5;;-1:-1:-1;352:33:13;318:25;352:33;:::i;:::-;404:7;394:17;;;120:297;;;;;:::o;422:131::-;-1:-1:-1;;;;;497:31:13;;487:42;;477:2;;543:1;540;533:12;477:2;467:86;:::o;:::-;129:8774:1;;;;;;;;;;;;;;;;;;;;;;;;",
  "sourcePath": "contracts/contracts/AcriaNode.sol",
  "type": "contract"
}
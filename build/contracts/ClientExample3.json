{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_node",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "callOracle",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lastValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "data",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "data_passthrough",
          "type": "uint256"
        }
      ],
      "name": "value_callback",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "12": "contracts/contracts/clientContract/clientExample3.sol"
  },
  "ast": {
    "absolutePath": "contracts/contracts/clientContract/clientExample3.sol",
    "exportedSymbols": {
      "AcriaNode": [
        1585
      ],
      "ClientExample3": [
        1654
      ]
    },
    "id": 1655,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1569,
        "literals": [
          "solidity",
          ">=",
          "0.4",
          ".22",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:32:12"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "id": 1585,
        "linearizedBaseContracts": [
          1585
        ],
        "name": "AcriaNode",
        "nameLocation": "78:9:12",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "functionSelector": "70762d2f",
            "id": 1584,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "create_request_with_data",
            "nameLocation": "103:24:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1582,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1571,
                  "mutability": "mutable",
                  "name": "_requestID",
                  "nameLocation": "135:10:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1584,
                  "src": "128:17:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes8",
                    "typeString": "bytes8"
                  },
                  "typeName": {
                    "id": 1570,
                    "name": "bytes8",
                    "nodeType": "ElementaryTypeName",
                    "src": "128:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes8",
                      "typeString": "bytes8"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1573,
                  "mutability": "mutable",
                  "name": "callback",
                  "nameLocation": "155:8:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1584,
                  "src": "147:16:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1572,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "147:7:12",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1575,
                  "mutability": "mutable",
                  "name": "_expire",
                  "nameLocation": "173:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1584,
                  "src": "165:15:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1574,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "165:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1577,
                  "mutability": "mutable",
                  "name": "max_gas",
                  "nameLocation": "189:7:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1584,
                  "src": "182:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 1576,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "182:6:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1579,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "206:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1584,
                  "src": "198:13:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1578,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "198:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1581,
                  "mutability": "mutable",
                  "name": "_data_passthrough",
                  "nameLocation": "221:17:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1584,
                  "src": "213:25:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1580,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "213:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "127:112:12"
            },
            "returnParameters": {
              "id": 1583,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "256:0:12"
            },
            "scope": 1585,
            "src": "94:163:12",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 1655,
        "src": "68:191:12"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 1654,
        "linearizedBaseContracts": [
          1654
        ],
        "name": "ClientExample3",
        "nameLocation": "270:14:12",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 1587,
            "mutability": "mutable",
            "name": "node",
            "nameLocation": "353:4:12",
            "nodeType": "VariableDeclaration",
            "scope": 1654,
            "src": "337:20:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address_payable",
              "typeString": "address payable"
            },
            "typeName": {
              "id": 1586,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "337:15:12",
              "stateMutability": "payable",
              "typeDescriptions": {
                "typeIdentifier": "t_address_payable",
                "typeString": "address payable"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "functionSelector": "764df6fa",
            "id": 1591,
            "mutability": "mutable",
            "name": "lastValue",
            "nameLocation": "452:9:12",
            "nodeType": "VariableDeclaration",
            "scope": 1654,
            "src": "417:44:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
              "typeString": "mapping(uint256 => uint256)"
            },
            "typeName": {
              "id": 1590,
              "keyType": {
                "id": 1588,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "425:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "417:27:12",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                "typeString": "mapping(uint256 => uint256)"
              },
              "valueType": {
                "id": 1589,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "436:7:12",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 1593,
            "mutability": "mutable",
            "name": "counter",
            "nameLocation": "480:7:12",
            "nodeType": "VariableDeclaration",
            "scope": 1654,
            "src": "472:15:12",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 1592,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "472:7:12",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 1602,
              "nodeType": "Block",
              "src": "529:29:12",
              "statements": [
                {
                  "expression": {
                    "id": 1600,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 1598,
                      "name": "node",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1587,
                      "src": "539:4:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1599,
                      "name": "_node",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1595,
                      "src": "546:5:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address_payable",
                        "typeString": "address payable"
                      }
                    },
                    "src": "539:12:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "id": 1601,
                  "nodeType": "ExpressionStatement",
                  "src": "539:12:12"
                }
              ]
            },
            "id": 1603,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1596,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1595,
                  "mutability": "mutable",
                  "name": "_node",
                  "nameLocation": "522:5:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1603,
                  "src": "506:21:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 1594,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "506:15:12",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "505:23:12"
            },
            "returnParameters": {
              "id": 1597,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "529:0:12"
            },
            "scope": 1654,
            "src": "494:64:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1629,
              "nodeType": "Block",
              "src": "600:936:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5553442f474250",
                        "id": 1614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1436:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_881ce35a123c3875df4e6b83b3efbdd694b3ae9c7523fe5d96ca517d56485a82",
                          "typeString": "literal_string \"USD/GBP\""
                        },
                        "value": "USD/GBP"
                      },
                      {
                        "arguments": [
                          {
                            "id": 1617,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1455:4:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ClientExample3_$1654",
                              "typeString": "contract ClientExample3"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ClientExample3_$1654",
                              "typeString": "contract ClientExample3"
                            }
                          ],
                          "id": 1616,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1447:7:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 1615,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1447:7:12",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 1618,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1447:13:12",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130303030",
                        "id": 1619,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1462:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        "value": "10000"
                      },
                      {
                        "hexValue": "3530303030",
                        "id": 1620,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1469:5:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50000"
                      },
                      {
                        "expression": {
                          "id": 1621,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "1476:5:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 1622,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "1476:15:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 1623,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1593,
                        "src": "1493:7:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_881ce35a123c3875df4e6b83b3efbdd694b3ae9c7523fe5d96ca517d56485a82",
                          "typeString": "literal_string \"USD/GBP\""
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_10000_by_1",
                          "typeString": "int_const 10000"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_881ce35a123c3875df4e6b83b3efbdd694b3ae9c7523fe5d96ca517d56485a82",
                            "typeString": "literal_string \"USD/GBP\""
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_rational_10000_by_1",
                            "typeString": "int_const 10000"
                          },
                          {
                            "typeIdentifier": "t_rational_50000_by_1",
                            "typeString": "int_const 50000"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 1607,
                              "name": "node",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1587,
                              "src": "1374:4:12",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              }
                            ],
                            "id": 1606,
                            "name": "AcriaNode",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1585,
                            "src": "1364:9:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_AcriaNode_$1585_$",
                              "typeString": "type(contract AcriaNode)"
                            }
                          },
                          "id": 1608,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1364:15:12",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AcriaNode_$1585",
                            "typeString": "contract AcriaNode"
                          }
                        },
                        "id": 1609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "create_request_with_data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 1584,
                        "src": "1364:40:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_bytes8_$_t_address_$_t_uint256_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$",
                          "typeString": "function (bytes8,address,uint256,uint32,uint256,uint256) payable external"
                        }
                      },
                      "id": 1613,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value",
                        "gas"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "expression": {
                            "id": 1610,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1412:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1611,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "1412:9:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "hexValue": "313030303030",
                          "id": 1612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1428:6:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100000_by_1",
                            "typeString": "int_const 100000"
                          },
                          "value": "100000"
                        }
                      ],
                      "src": "1364:71:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_bytes8_$_t_address_$_t_uint256_$_t_uint32_$_t_uint256_$_t_uint256_$returns$__$gasvalue",
                        "typeString": "function (bytes8,address,uint256,uint32,uint256,uint256) payable external"
                      }
                    },
                    "id": 1624,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1364:137:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1625,
                  "nodeType": "ExpressionStatement",
                  "src": "1364:137:12"
                },
                {
                  "expression": {
                    "id": 1627,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "1520:9:12",
                    "subExpression": {
                      "id": 1626,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1593,
                      "src": "1520:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1628,
                  "nodeType": "ExpressionStatement",
                  "src": "1520:9:12"
                }
              ]
            },
            "functionSelector": "7b1b7166",
            "id": 1630,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callOracle",
            "nameLocation": "573:10:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1604,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "583:2:12"
            },
            "returnParameters": {
              "id": 1605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "600:0:12"
            },
            "scope": 1654,
            "src": "564:972:12",
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 1652,
              "nodeType": "Block",
              "src": "1766:182:12",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 1643,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 1640,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1848:3:12",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1641,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1848:10:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 1642,
                          "name": "node",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1587,
                          "src": "1862:4:12",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "src": "1848:18:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 1639,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1840:7:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 1644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1840:27:12",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 1645,
                  "nodeType": "ExpressionStatement",
                  "src": "1840:27:12"
                },
                {
                  "expression": {
                    "id": 1650,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 1646,
                        "name": "lastValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1591,
                        "src": "1905:9:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_uint256_$",
                          "typeString": "mapping(uint256 => uint256)"
                        }
                      },
                      "id": 1648,
                      "indexExpression": {
                        "id": 1647,
                        "name": "data_passthrough",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 1636,
                        "src": "1915:16:12",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1905:27:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 1649,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1632,
                      "src": "1935:6:12",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1905:36:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 1651,
                  "nodeType": "ExpressionStatement",
                  "src": "1905:36:12"
                }
              ]
            },
            "functionSelector": "175fdc0c",
            "id": 1653,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "value_callback",
            "nameLocation": "1689:14:12",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1632,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "1712:6:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1653,
                  "src": "1704:14:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1631,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1704:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1634,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1728:4:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1653,
                  "src": "1720:12:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1633,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1720:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1636,
                  "mutability": "mutable",
                  "name": "data_passthrough",
                  "nameLocation": "1742:16:12",
                  "nodeType": "VariableDeclaration",
                  "scope": 1653,
                  "src": "1734:24:12",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1635,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1734:7:12",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1703:56:12"
            },
            "returnParameters": {
              "id": 1638,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1766:0:12"
            },
            "scope": 1654,
            "src": "1680:268:12",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 1655,
        "src": "261:1689:12"
      }
    ],
    "src": "33:1918:12"
  },
  "bytecode": "608060405234801561001057600080fd5b506040516102af3803806102af83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610082565b600060208284031215610065578081fd5b81516001600160a01b038116811461007b578182fd5b9392505050565b61021e806100916000396000f3fe6080604052600436106100345760003560e01c8063175fdc0c14610039578063764df6fa1461005b5780637b1b71661461009a575b600080fd5b34801561004557600080fd5b50610059610054366004610196565b6100a2565b005b34801561006757600080fd5b5061008861007636600461017e565b60016020526000908152604090205481565b60405190815260200160405180910390f35b6100596100ce565b6000546001600160a01b031633146100b957600080fd5b60009081526001602052604090209190915550565b6000546002546040516370762d2f60e01b81526605553442f4742560cc1b6004820152306024820152612710604482015261c350606482015242608482015260a48101919091526001600160a01b03909116906370762d2f90620186a090349060c4016000604051808303818589803b15801561014a57600080fd5b5088f115801561015e573d6000803e3d6000fd5b50505050505060026000815480929190610177906101c1565b9190505550565b60006020828403121561018f578081fd5b5035919050565b6000806000606084860312156101aa578182fd5b505081359360208301359350604090920135919050565b60006000198214156101e157634e487b7160e01b81526011600452602481fd5b506001019056fea26469706673582212209509b45f5543f572483dea8ef82354d600a810af9adca6e92e8acf731f8e15b264736f6c63430008020033",
  "bytecodeSha1": "505e0f90de5837c658b3ae82a372f8699181455a",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.2+commit.661d1103"
  },
  "contractName": "ClientExample3",
  "coverageMap": {
    "branches": {
      "12": {
        "ClientExample3.value_callback": {
          "4": [
            1848,
            1866,
            true
          ]
        }
      }
    },
    "statements": {
      "12": {
        "ClientExample3.callOracle": {
          "2": [
            1364,
            1501
          ],
          "3": [
            1520,
            1529
          ]
        },
        "ClientExample3.value_callback": {
          "0": [
            1840,
            1867
          ],
          "1": [
            1905,
            1941
          ]
        }
      }
    }
  },
  "dependencies": [
    "AcriaNode"
  ],
  "deployedBytecode": "6080604052600436106100345760003560e01c8063175fdc0c14610039578063764df6fa1461005b5780637b1b71661461009a575b600080fd5b34801561004557600080fd5b50610059610054366004610196565b6100a2565b005b34801561006757600080fd5b5061008861007636600461017e565b60016020526000908152604090205481565b60405190815260200160405180910390f35b6100596100ce565b6000546001600160a01b031633146100b957600080fd5b60009081526001602052604090209190915550565b6000546002546040516370762d2f60e01b81526605553442f4742560cc1b6004820152306024820152612710604482015261c350606482015242608482015260a48101919091526001600160a01b03909116906370762d2f90620186a090349060c4016000604051808303818589803b15801561014a57600080fd5b5088f115801561015e573d6000803e3d6000fd5b50505050505060026000815480929190610177906101c1565b9190505550565b60006020828403121561018f578081fd5b5035919050565b6000806000606084860312156101aa578182fd5b505081359360208301359350604090920135919050565b60006000198214156101e157634e487b7160e01b81526011600452602481fd5b506001019056fea26469706673582212209509b45f5543f572483dea8ef82354d600a810af9adca6e92e8acf731f8e15b264736f6c63430008020033",
  "deployedSourceMap": "261:1689:12:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1680:268;;;;;;;;;;-1:-1:-1;1680:268:12;;;;;:::i;:::-;;:::i;:::-;;417:44;;;;;;;;;;-1:-1:-1;417:44:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;1357:25:13;;;1345:2;1330:18;417:44:12;;;;;;;564:972;;;:::i;1680:268::-;1862:4;;-1:-1:-1;;;;;1862:4:12;1848:10;:18;1840:27;;;;;;1905;;;;:9;:27;;;;;:36;;;;-1:-1:-1;1680:268:12:o;564:972::-;1374:4;;1493:7;;1364:137;;-1:-1:-1;;;1364:137:12;;-1:-1:-1;;;1364:137:12;;;912:28:13;1455:4:12;956:18:13;;;949:60;1462:5:12;1025:18:13;;;1018:34;1469:5:12;1068:18:13;;;1061:51;1476:15:12;1128:19:13;;;1121:35;1172:19;;;1165:35;;;;-1:-1:-1;;;;;1374:4:12;;;;1364:40;;1428:6;;1412:9;;884:19:13;;1364:137:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1520:7;;:9;;;;;;;;;:::i;:::-;;;;;;564:972::o;14:190:13:-;;126:2;114:9;105:7;101:23;97:32;94:2;;;147:6;139;132:22;94:2;-1:-1:-1;175:23:13;;84:120;-1:-1:-1;84:120:13:o;209:326::-;;;;355:2;343:9;334:7;330:23;326:32;323:2;;;376:6;368;361:22;323:2;-1:-1:-1;;404:23:13;;;474:2;459:18;;446:32;;-1:-1:-1;525:2:13;510:18;;;497:32;;313:222;-1:-1:-1;313:222:13:o;1393:236::-;;-1:-1:-1;;1453:17:13;;1450:2;;;-1:-1:-1;;;1493:33:13;;1549:4;1546:1;1539:15;1579:4;1500:3;1567:17;1450:2;-1:-1:-1;1621:1:13;1610:13;;1440:189::o",
  "language": "Solidity",
  "natspec": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "offset": [
    261,
    1950
  ],
  "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x175FDC0C EQ PUSH2 0x39 JUMPI DUP1 PUSH4 0x764DF6FA EQ PUSH2 0x5B JUMPI DUP1 PUSH4 0x7B1B7166 EQ PUSH2 0x9A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x59 PUSH2 0x54 CALLDATASIZE PUSH1 0x4 PUSH2 0x196 JUMP JUMPDEST PUSH2 0xA2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x67 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x88 PUSH2 0x76 CALLDATASIZE PUSH1 0x4 PUSH2 0x17E JUMP JUMPDEST PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x59 PUSH2 0xCE JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xB9 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP2 SWAP1 SWAP2 SSTORE POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x70762D2F PUSH1 0xE0 SHL DUP2 MSTORE PUSH7 0x5553442F47425 PUSH1 0xCC SHL PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD MSTORE PUSH2 0x2710 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0xC350 PUSH1 0x64 DUP3 ADD MSTORE TIMESTAMP PUSH1 0x84 DUP3 ADD MSTORE PUSH1 0xA4 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x70762D2F SWAP1 PUSH3 0x186A0 SWAP1 CALLVALUE SWAP1 PUSH1 0xC4 ADD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP10 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x14A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP DUP9 CALL ISZERO DUP1 ISZERO PUSH2 0x15E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP POP POP PUSH1 0x2 PUSH1 0x0 DUP2 SLOAD DUP1 SWAP3 SWAP2 SWAP1 PUSH2 0x177 SWAP1 PUSH2 0x1C1 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x18F JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AA JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP2 CALLDATALOAD SWAP4 PUSH1 0x20 DUP4 ADD CALLDATALOAD SWAP4 POP PUSH1 0x40 SWAP1 SWAP3 ADD CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x1E1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP6 MULMOD 0xB4 0x5F SSTORE NUMBER CREATE2 PUSH19 0x483DEA8EF82354D600A810AF9ADCA6E92E8ACF PUSH20 0x1F8E15B264736F6C634300080200330000000000 ",
  "pcMap": {
    "0": {
      "offset": [
        261,
        1950
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x80"
    },
    "2": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "4": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "5": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "7": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "8": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "LT",
      "path": "12"
    },
    "9": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x34"
    },
    "12": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "13": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "15": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "CALLDATALOAD",
      "path": "12"
    },
    "16": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0xE0"
    },
    "18": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "SHR",
      "path": "12"
    },
    "19": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "DUP1",
      "path": "12"
    },
    "20": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x175FDC0C"
    },
    "25": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "EQ",
      "path": "12"
    },
    "26": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x39"
    },
    "29": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "30": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "DUP1",
      "path": "12"
    },
    "31": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x764DF6FA"
    },
    "36": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "EQ",
      "path": "12"
    },
    "37": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x5B"
    },
    "40": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "41": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "DUP1",
      "path": "12"
    },
    "42": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x7B1B7166"
    },
    "47": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "EQ",
      "path": "12"
    },
    "48": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x9A"
    },
    "51": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "52": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "53": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "55": {
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "DUP1",
      "path": "12"
    },
    "56": {
      "first_revert": true,
      "fn": null,
      "offset": [
        261,
        1950
      ],
      "op": "REVERT",
      "path": "12"
    },
    "57": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1680,
        1948
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "58": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1680,
        1948
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "59": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1680,
        1948
      ],
      "op": "DUP1",
      "path": "12"
    },
    "60": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1680,
        1948
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "61": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1680,
        1948
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x45"
    },
    "64": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1680,
        1948
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "65": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1680,
        1948
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "67": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1680,
        1948
      ],
      "op": "DUP1",
      "path": "12"
    },
    "68": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1680,
        1948
      ],
      "op": "REVERT",
      "path": "12"
    },
    "69": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1680,
        1948
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "70": {
      "op": "POP"
    },
    "71": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1680,
        1948
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x59"
    },
    "74": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1680,
        1948
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x54"
    },
    "77": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1680,
        1948
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "78": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1680,
        1948
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "80": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1680,
        1948
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x196"
    },
    "83": {
      "fn": "ClientExample3.value_callback",
      "jump": "i",
      "offset": [
        1680,
        1948
      ],
      "op": "JUMP",
      "path": "12"
    },
    "84": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1680,
        1948
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "85": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1680,
        1948
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xA2"
    },
    "88": {
      "fn": "ClientExample3.value_callback",
      "jump": "i",
      "offset": [
        1680,
        1948
      ],
      "op": "JUMP",
      "path": "12"
    },
    "89": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1680,
        1948
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "90": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1680,
        1948
      ],
      "op": "STOP",
      "path": "12"
    },
    "91": {
      "offset": [
        417,
        461
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "92": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "93": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "DUP1",
      "path": "12"
    },
    "94": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "95": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x67"
    },
    "98": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "99": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "101": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "DUP1",
      "path": "12"
    },
    "102": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "REVERT",
      "path": "12"
    },
    "103": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "104": {
      "op": "POP"
    },
    "105": {
      "offset": [
        417,
        461
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x88"
    },
    "108": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x76"
    },
    "111": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "CALLDATASIZE",
      "path": "12"
    },
    "112": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "114": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x17E"
    },
    "117": {
      "fn": "ClientExample3.value_callback",
      "jump": "i",
      "offset": [
        417,
        461
      ],
      "op": "JUMP",
      "path": "12"
    },
    "118": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "119": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "121": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "123": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "124": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "126": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "127": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "DUP2",
      "path": "12"
    },
    "128": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "129": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "131": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "132": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "133": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "134": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "DUP2",
      "path": "12"
    },
    "135": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "JUMP",
      "path": "12"
    },
    "136": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "137": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "139": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "140": {
      "op": "SWAP1"
    },
    "141": {
      "op": "DUP2"
    },
    "142": {
      "op": "MSTORE"
    },
    "143": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "145": {
      "op": "ADD"
    },
    "146": {
      "offset": [
        417,
        461
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "148": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "149": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "DUP1",
      "path": "12"
    },
    "150": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "151": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "SUB",
      "path": "12"
    },
    "152": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "153": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        417,
        461
      ],
      "op": "RETURN",
      "path": "12"
    },
    "154": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        564,
        1536
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "155": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        564,
        1536
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x59"
    },
    "158": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        564,
        1536
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xCE"
    },
    "161": {
      "fn": "ClientExample3.callOracle",
      "jump": "i",
      "offset": [
        564,
        1536
      ],
      "op": "JUMP",
      "path": "12"
    },
    "162": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1680,
        1948
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "163": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1862,
        1866
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 0,
      "value": "0x0"
    },
    "165": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1862,
        1866
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "166": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "168": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "170": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "172": {
      "op": "SHL"
    },
    "173": {
      "op": "SUB"
    },
    "174": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1862,
        1866
      ],
      "op": "AND",
      "path": "12"
    },
    "175": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1848,
        1858
      ],
      "op": "CALLER",
      "path": "12"
    },
    "176": {
      "branch": 4,
      "fn": "ClientExample3.value_callback",
      "offset": [
        1848,
        1866
      ],
      "op": "EQ",
      "path": "12"
    },
    "177": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1840,
        1867
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xB9"
    },
    "180": {
      "branch": 4,
      "fn": "ClientExample3.value_callback",
      "offset": [
        1840,
        1867
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "181": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1840,
        1867
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "183": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1840,
        1867
      ],
      "op": "DUP1",
      "path": "12"
    },
    "184": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1840,
        1867
      ],
      "op": "REVERT",
      "path": "12"
    },
    "185": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1840,
        1867
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "186": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1905,
        1932
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 1,
      "value": "0x0"
    },
    "188": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1905,
        1932
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "189": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1905,
        1932
      ],
      "op": "DUP2",
      "path": "12"
    },
    "190": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1905,
        1932
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "191": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1905,
        1914
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x1"
    },
    "193": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1905,
        1932
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x20"
    },
    "195": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1905,
        1932
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "196": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1905,
        1932
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "198": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1905,
        1932
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "199": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1905,
        1932
      ],
      "op": "KECCAK256",
      "path": "12"
    },
    "200": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1905,
        1941
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "201": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1905,
        1941
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "202": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1905,
        1941
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "203": {
      "fn": "ClientExample3.value_callback",
      "offset": [
        1905,
        1941
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "204": {
      "op": "POP"
    },
    "205": {
      "fn": "ClientExample3.value_callback",
      "jump": "o",
      "offset": [
        1680,
        1948
      ],
      "op": "JUMP",
      "path": "12"
    },
    "206": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        564,
        1536
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "207": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1374,
        1378
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 2,
      "value": "0x0"
    },
    "209": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1374,
        1378
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "210": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1493,
        1500
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x2"
    },
    "212": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1493,
        1500
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "213": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "215": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "216": {
      "op": "PUSH4",
      "value": "0x70762D2F"
    },
    "221": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "223": {
      "op": "SHL"
    },
    "224": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "DUP2",
      "path": "12"
    },
    "225": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "MSTORE",
      "path": "12"
    },
    "226": {
      "op": "PUSH7",
      "value": "0x5553442F47425"
    },
    "234": {
      "op": "PUSH1",
      "value": "0xCC"
    },
    "236": {
      "op": "SHL"
    },
    "237": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x4"
    },
    "239": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "DUP3",
      "path": "12"
    },
    "240": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "ADD",
      "path": "12"
    },
    "241": {
      "op": "MSTORE"
    },
    "242": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1455,
        1459
      ],
      "op": "ADDRESS",
      "path": "12"
    },
    "243": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "245": {
      "op": "DUP3"
    },
    "246": {
      "op": "ADD"
    },
    "247": {
      "op": "MSTORE"
    },
    "248": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1462,
        1467
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x2710"
    },
    "251": {
      "op": "PUSH1",
      "value": "0x44"
    },
    "253": {
      "op": "DUP3"
    },
    "254": {
      "op": "ADD"
    },
    "255": {
      "op": "MSTORE"
    },
    "256": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1469,
        1474
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0xC350"
    },
    "259": {
      "op": "PUSH1",
      "value": "0x64"
    },
    "261": {
      "op": "DUP3"
    },
    "262": {
      "op": "ADD"
    },
    "263": {
      "op": "MSTORE"
    },
    "264": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1476,
        1491
      ],
      "op": "TIMESTAMP",
      "path": "12"
    },
    "265": {
      "op": "PUSH1",
      "value": "0x84"
    },
    "267": {
      "op": "DUP3"
    },
    "268": {
      "op": "ADD"
    },
    "269": {
      "op": "MSTORE"
    },
    "270": {
      "op": "PUSH1",
      "value": "0xA4"
    },
    "272": {
      "op": "DUP2"
    },
    "273": {
      "op": "ADD"
    },
    "274": {
      "op": "SWAP2"
    },
    "275": {
      "op": "SWAP1"
    },
    "276": {
      "op": "SWAP2"
    },
    "277": {
      "op": "MSTORE"
    },
    "278": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "280": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "282": {
      "op": "PUSH1",
      "value": "0xA0"
    },
    "284": {
      "op": "SHL"
    },
    "285": {
      "op": "SUB"
    },
    "286": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1374,
        1378
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "287": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1374,
        1378
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "288": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1374,
        1378
      ],
      "op": "AND",
      "path": "12"
    },
    "289": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1374,
        1378
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "290": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1404
      ],
      "op": "PUSH4",
      "path": "12",
      "value": "0x70762D2F"
    },
    "295": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1404
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "296": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1428,
        1434
      ],
      "op": "PUSH3",
      "path": "12",
      "value": "0x186A0"
    },
    "300": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1428,
        1434
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "301": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1412,
        1421
      ],
      "op": "CALLVALUE",
      "path": "12"
    },
    "302": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1412,
        1421
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "303": {
      "op": "PUSH1",
      "value": "0xC4"
    },
    "305": {
      "op": "ADD"
    },
    "306": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "308": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x40"
    },
    "310": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "MLOAD",
      "path": "12"
    },
    "311": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "DUP1",
      "path": "12"
    },
    "312": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "DUP4",
      "path": "12"
    },
    "313": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "SUB",
      "path": "12"
    },
    "314": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "DUP2",
      "path": "12"
    },
    "315": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "DUP6",
      "path": "12"
    },
    "316": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "DUP10",
      "path": "12"
    },
    "317": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "DUP1",
      "path": "12"
    },
    "318": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "EXTCODESIZE",
      "path": "12"
    },
    "319": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "320": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "DUP1",
      "path": "12"
    },
    "321": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "322": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x14A"
    },
    "325": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "326": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "328": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "DUP1",
      "path": "12"
    },
    "329": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "REVERT",
      "path": "12"
    },
    "330": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "331": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "POP",
      "path": "12"
    },
    "332": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "DUP9",
      "path": "12"
    },
    "333": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "CALL",
      "path": "12"
    },
    "334": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "335": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "DUP1",
      "path": "12"
    },
    "336": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "ISZERO",
      "path": "12"
    },
    "337": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x15E"
    },
    "340": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "JUMPI",
      "path": "12"
    },
    "341": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "342": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "344": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "DUP1",
      "path": "12"
    },
    "345": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "RETURNDATACOPY",
      "path": "12"
    },
    "346": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "RETURNDATASIZE",
      "path": "12"
    },
    "347": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "349": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "REVERT",
      "path": "12"
    },
    "350": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "351": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "POP",
      "path": "12"
    },
    "352": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "POP",
      "path": "12"
    },
    "353": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "POP",
      "path": "12"
    },
    "354": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "POP",
      "path": "12"
    },
    "355": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "POP",
      "path": "12"
    },
    "356": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1364,
        1501
      ],
      "op": "POP",
      "path": "12"
    },
    "357": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1520,
        1527
      ],
      "op": "PUSH1",
      "path": "12",
      "statement": 3,
      "value": "0x2"
    },
    "359": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1520,
        1527
      ],
      "op": "PUSH1",
      "path": "12",
      "value": "0x0"
    },
    "361": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1520,
        1529
      ],
      "op": "DUP2",
      "path": "12"
    },
    "362": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1520,
        1529
      ],
      "op": "SLOAD",
      "path": "12"
    },
    "363": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1520,
        1529
      ],
      "op": "DUP1",
      "path": "12"
    },
    "364": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1520,
        1529
      ],
      "op": "SWAP3",
      "path": "12"
    },
    "365": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1520,
        1529
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "366": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1520,
        1529
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "367": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1520,
        1529
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x177"
    },
    "370": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1520,
        1529
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "371": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1520,
        1529
      ],
      "op": "PUSH2",
      "path": "12",
      "value": "0x1C1"
    },
    "374": {
      "fn": "ClientExample3.callOracle",
      "jump": "i",
      "offset": [
        1520,
        1529
      ],
      "op": "JUMP",
      "path": "12"
    },
    "375": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1520,
        1529
      ],
      "op": "JUMPDEST",
      "path": "12"
    },
    "376": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1520,
        1529
      ],
      "op": "SWAP2",
      "path": "12"
    },
    "377": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1520,
        1529
      ],
      "op": "SWAP1",
      "path": "12"
    },
    "378": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1520,
        1529
      ],
      "op": "POP",
      "path": "12"
    },
    "379": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1520,
        1529
      ],
      "op": "SSTORE",
      "path": "12"
    },
    "380": {
      "fn": "ClientExample3.callOracle",
      "offset": [
        1520,
        1529
      ],
      "op": "POP",
      "path": "12"
    },
    "381": {
      "fn": "ClientExample3.callOracle",
      "jump": "o",
      "offset": [
        564,
        1536
      ],
      "op": "JUMP",
      "path": "12"
    },
    "382": {
      "op": "JUMPDEST"
    },
    "383": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "385": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "387": {
      "op": "DUP3"
    },
    "388": {
      "op": "DUP5"
    },
    "389": {
      "op": "SUB"
    },
    "390": {
      "op": "SLT"
    },
    "391": {
      "op": "ISZERO"
    },
    "392": {
      "op": "PUSH2",
      "value": "0x18F"
    },
    "395": {
      "op": "JUMPI"
    },
    "396": {
      "op": "DUP1"
    },
    "397": {
      "op": "DUP2"
    },
    "398": {
      "op": "REVERT"
    },
    "399": {
      "op": "JUMPDEST"
    },
    "400": {
      "op": "POP"
    },
    "401": {
      "op": "CALLDATALOAD"
    },
    "402": {
      "op": "SWAP2"
    },
    "403": {
      "op": "SWAP1"
    },
    "404": {
      "op": "POP"
    },
    "405": {
      "jump": "o",
      "op": "JUMP"
    },
    "406": {
      "op": "JUMPDEST"
    },
    "407": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "409": {
      "op": "DUP1"
    },
    "410": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "412": {
      "op": "PUSH1",
      "value": "0x60"
    },
    "414": {
      "op": "DUP5"
    },
    "415": {
      "op": "DUP7"
    },
    "416": {
      "op": "SUB"
    },
    "417": {
      "op": "SLT"
    },
    "418": {
      "op": "ISZERO"
    },
    "419": {
      "op": "PUSH2",
      "value": "0x1AA"
    },
    "422": {
      "op": "JUMPI"
    },
    "423": {
      "op": "DUP2"
    },
    "424": {
      "op": "DUP3"
    },
    "425": {
      "op": "REVERT"
    },
    "426": {
      "op": "JUMPDEST"
    },
    "427": {
      "op": "POP"
    },
    "428": {
      "op": "POP"
    },
    "429": {
      "op": "DUP2"
    },
    "430": {
      "op": "CALLDATALOAD"
    },
    "431": {
      "op": "SWAP4"
    },
    "432": {
      "op": "PUSH1",
      "value": "0x20"
    },
    "434": {
      "op": "DUP4"
    },
    "435": {
      "op": "ADD"
    },
    "436": {
      "op": "CALLDATALOAD"
    },
    "437": {
      "op": "SWAP4"
    },
    "438": {
      "op": "POP"
    },
    "439": {
      "op": "PUSH1",
      "value": "0x40"
    },
    "441": {
      "op": "SWAP1"
    },
    "442": {
      "op": "SWAP3"
    },
    "443": {
      "op": "ADD"
    },
    "444": {
      "op": "CALLDATALOAD"
    },
    "445": {
      "op": "SWAP2"
    },
    "446": {
      "op": "SWAP1"
    },
    "447": {
      "op": "POP"
    },
    "448": {
      "jump": "o",
      "op": "JUMP"
    },
    "449": {
      "op": "JUMPDEST"
    },
    "450": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "452": {
      "op": "PUSH1",
      "value": "0x0"
    },
    "454": {
      "op": "NOT"
    },
    "455": {
      "op": "DUP3"
    },
    "456": {
      "op": "EQ"
    },
    "457": {
      "op": "ISZERO"
    },
    "458": {
      "op": "PUSH2",
      "value": "0x1E1"
    },
    "461": {
      "op": "JUMPI"
    },
    "462": {
      "op": "PUSH4",
      "value": "0x4E487B71"
    },
    "467": {
      "op": "PUSH1",
      "value": "0xE0"
    },
    "469": {
      "op": "SHL"
    },
    "470": {
      "op": "DUP2"
    },
    "471": {
      "op": "MSTORE"
    },
    "472": {
      "op": "PUSH1",
      "value": "0x11"
    },
    "474": {
      "op": "PUSH1",
      "value": "0x4"
    },
    "476": {
      "op": "MSTORE"
    },
    "477": {
      "op": "PUSH1",
      "value": "0x24"
    },
    "479": {
      "op": "DUP2"
    },
    "480": {
      "op": "REVERT"
    },
    "481": {
      "op": "JUMPDEST"
    },
    "482": {
      "op": "POP"
    },
    "483": {
      "op": "PUSH1",
      "value": "0x1"
    },
    "485": {
      "op": "ADD"
    },
    "486": {
      "op": "SWAP1"
    },
    "487": {
      "jump": "o",
      "op": "JUMP"
    }
  },
  "sha1": "aa58fc9df256cf9469799b813762cf29fa3112d2",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity >=0.4.22 <0.9.0;\n\n\ninterface AcriaNode {\n    function create_request_with_data(bytes8 _requestID, address callback, uint256 _expire, uint32 max_gas, uint256 _data, uint256 _data_passthrough) external payable;\n}\n\ncontract ClientExample3 {\n    //The address of the targeted Oracle Node\n    address payable node;\n\n    //last most recent value received via a callback\n    mapping(uint256 => uint256) public lastValue;\n    \n    uint256 counter;\n\n    constructor(address payable _node) {\n        node = _node;\n    }\n\n    function callOracle() public payable{\n        //make a call to the Oracle Node and include the fee (all ETH provided)\n        //1. parameter is the item requested in this case the USD/GBP exchange rate\n        //2. parameter is the callback address (this contract)\n        //3. parameter is the request expire date. It is expressed in blocks until the request should be dropped.\n        //4. parameter is the amount of gas the oracle node should provide for the callback. The higher the requested gas the higher should be the fee provided.\n        //5. parameter is the request data which further specifies the data needed (here: the current timestamp)\n        //6. parameter is the passthrough data which will be passed through to the callback function (see third parameter of the callback)\n        AcriaNode(node).create_request_with_data{value: msg.value, gas: 100000}(\"USD/GBP\", address(this), 10000, 50000, block.timestamp, counter);\n        \n        counter++;\n    }\n    \n    //the function which gets called by the Oracle Node\n    //it must be named value_callback with exactly three uint256 as parameter\n    function value_callback(uint256 _value, uint256 data, uint256 data_passthrough) public{\n        //only the Oracle Node is allowed to call this function\n        require(msg.sender == node);\n\n        //update the value\n        lastValue[data_passthrough] = _value;\n    }\n}\n",
  "sourceMap": "261:1689:12:-:0;;;494:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;539:4;:12;;-1:-1:-1;;;;;;539:12:12;-1:-1:-1;;;;;539:12:12;;;;;;;;;;261:1689;;14:318:13;;145:2;133:9;124:7;120:23;116:32;113:2;;;166:6;158;151:22;113:2;197:16;;-1:-1:-1;;;;;242:31:13;;232:42;;222:2;;293:6;285;278:22;222:2;321:5;103:229;-1:-1:-1;;;103:229:13:o;:::-;261:1689:12;;;;;;",
  "sourcePath": "contracts/contracts/clientContract/clientExample3.sol",
  "type": "contract"
}